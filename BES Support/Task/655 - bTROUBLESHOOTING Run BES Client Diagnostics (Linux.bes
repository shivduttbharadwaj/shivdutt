<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>TROUBLESHOOTING: Run BES Client Diagnostics (Linux/UNIX/Mac)</Title>
		<Description><![CDATA[
<TABLE><TBODY><TR><TD> <P><FONT size=2>The BES Client Diagnostics task&nbsp;will create an archive of useful information for analyzing a BES deployment&nbsp;and&nbsp;troubleshooting client issues.<BR><BR>This task allows you to run the BES Client Diagnostics and upload the results to the BES Server through the BES Upload Manager. By default the uploaded files will be placed in a subfolder under "<FONT size=2>C:\Program Files\BigFix Enterprise\BES Server\UploadManagerData\BufferDir\sha1" on the BES Server.</FONT></FONT></P> <P><FONT size=2><FONT size=2>Each BES Client targeted will upload approximately 1-40MB of data to the BES Server (through the BES Relays). Depending on network speeds, this could take&nbsp;several minutes.<BR><BR><B>Note: </B>Do <B>not</B> set the "Reapply" behavior when taking this action or you may cause the BES Client to constantly run the diagnostics tool and upload the results.</FONT></FONT></P> <P><FONT size=2><STRONG>Note</STRONG>: After execution this action, the "TROUBLESHOOTING: Run BES Client Diagnostics Cleanup (Non-Windows)" task can be used to remove the diagnostics result files.</FONT><FONT size=2><FONT size=2><STRIKE></P></STRIKE></FONT> <P><FONT size=2><STRONG>Note:</STRONG>&nbsp;If the size of the resulting zip file&nbsp;generated by the tool is larger than&nbsp;40 MB, it will <STRONG>not</STRONG> be uploaded to the BES Server. The action script can be modified&nbsp;to set a higher limit. Most results are under&nbsp;20 MB.</FONT></P></FONT></TD></TR></TBODY></TABLE>
]]></Description>
		<Relevance><![CDATA[version of client >= "7.2"]]></Relevance>
		<Relevance>(if exists property "in proxy agent context" then ( not in proxy agent context ) else true )</Relevance>
		<Relevance><![CDATA[not ((if (version of client >= "8.0") then (windows of it) else (name of it starts with "Win")) of operating system)]]></Relevance>
		<Relevance>(if exists property "android" of type "operating system" then (not android of operating system) else true)</Relevance>
		<Relevance><![CDATA[version of client >= "6.0"]]></Relevance>
		<Category>Troubleshooting</Category>
		<DownloadSize>0</DownloadSize>
		<Source>BigFix</Source>
		<SourceID><![CDATA[<Unspecified>]]></SourceID>
		<SourceSeverity><![CDATA[<Unspecified>]]></SourceSeverity>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Wed, 20 May 2009 00:28:26 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-domain_attributes</Name>
			<Value>BES Component Client</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Tue, 14 Mar 2017 13:40:46 +0000</Value>
		</MIMEField>
		<Delay>PT1S</Delay>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run the BES Client Diagnostics tool and upload the results.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Remove previous runs client diagnostics if found
delete "{(preceding text of last "/" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
delete "{(preceding text of last "/BESClient" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
delete "{(preceding text of last "/" of (client folder of current site as string)) & "/__Global/Archive/Last/client_0_ClientDiagnostics_" & computer name & ".tar.gz"}"
delete "{(preceding text of last "/" of (client folder of current site as string)) & "/__Global/Archive/Last/client_1_ClientDiagnostics_" & computer name & ".tar.gz"}"

delete "{(client folder of current site as string) & "/Exclude.txt"}"
delete "{(client folder of current site as string) & "/__appendfile"}"

appendfile #!/bin/sh
if {name of operating system starts with "Mac"}
    appendfile tar -czhf "{(preceding text of last "/" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}" --exclude='*.tar.gz' "{preceding text of last "__BESData" of (client folder of current site as string)}" /Library/Preferences/com.bigfix.BESAgent.plist
elseif {name of operating system starts with "HP-UX"}
    appendfile tar cfh - "{preceding text of last "__BESData" of (client folder of current site as string)}" | "/usr/contrib/bin/gzip" -c > "{(preceding text of last "/BESClient" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
else
    appendfile cat "{(preceding text of last "/" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}" >> "{(client folder of current site as string) & "/Exclude.txt"}"
appendfile cat "{(preceding text of last "/" of (client folder of current site as string)) & "/__Global/Archive/Last/client_0_ClientDiagnostics_" & computer name & ".tar.gz"}" >> "{(client folder of current site as string) & "/Exclude.txt"}"
appendfile cat "{(client folder of current site as string) & "/Exclude.txt"}" >> "{(client folder of current site as string) & "/Exclude.txt"}"
    if {name of operating system starts with "SunOS 5.7"}
        appendfile tar cfXh - "{(client folder of current site as string) & "/Exclude.txt"}" "{preceding text of last "/__BESData" of (client folder of current site as string)}" | "/usr/local/bin/gzip" -c > "{(preceding text of last "/BESClient" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
    else
        appendfile tar cfXh - "{(client folder of current site as string) & "/Exclude.txt"}" "{preceding text of last "__BESData" of (client folder of current site as string)}" | gzip -c > "{(preceding text of last "/BESClient" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
    endif
endif

wait chmod +x "{(client folder of current site as string) & "/__appendfile"}"
wait "{(client folder of current site as string) & "/__appendfile"}"

if {name of operating system does not start with "Mac"}
    move "{(preceding text of last "/BESClient" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}" "{(preceding text of last "/" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}"
endif

// set max size to 41943040 to prevent too much data. If the zip file is to bigger than 40MBs the upload won't occur
setting "_BESClient_ArchiveManager_MaxArchiveSize"="41943040" on "{parameter "action issue date" of action}" for client 
setting "_BESClient_ArchiveManager_OperatingMode"="2" on "{parameter "action issue date" of action}" for client 
setting "_BESClient_ArchiveManager_FileSet-client"="{(preceding text of last "/" of (client folder of current site as string)) & "/ClientDiagnostics_" & computer name & ".tar.gz"}" on "{parameter "action issue date" of action}" for client 

// send results 
archive now]]></ActionScript>
		</Action>
		<Action ID="Link2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> for more information on the BES Upload Manager. (PDF file)</PostLink>
			</Description>
			<ActionScript MIMEType="text/x-uri">http://support.bigfix.com/product/documents/UploadManager_4_1.pdf</ActionScript>
		</Action>
	</Task>
</BES>
