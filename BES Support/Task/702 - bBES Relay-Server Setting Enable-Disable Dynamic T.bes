<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>BES Relay/Server Setting: Enable/Disable Dynamic Throttling</Title>
		<Description><![CDATA[
<TABLE><TBODY><TR><TD> <P>The BES Platform can dynamically throttle network traffic to use a percentage of the available bandwidth when existing network traffic is detected. When dynamic throttling is enabled, BES will monitor and analyze existing data throughput to establish a throttled rate for network communication.</P> <P>Dynamic throttling will only work correctly on&nbsp;endpoints when&nbsp;their parent has the same setting enabled. For example, client dynamic throttling will not function unless&nbsp;the client machine's&nbsp;parent relay also has dynamic throttling enabled, and likewise with a relay and server.</P> <P>In order to use this feature, please first deploy&nbsp;this task to all systems to globally enable the dynamic throttling setting. Once the task has completed, please use the following tasks to set actual throttling rates:</P><SPAN id=taskLink></SPAN> <SCRIPT type=text/javascript>var isEvansOrLater = '<?relevance if (exists property "datastore inspectors") then (True) else (False)?>' == 'True'?true:false; document.body.onload = SetTaskLinkFixlet605; function SetTaskLinkFixlet605() { try {if (isEvansOrLater) { taskLink.innerHTML = Relevance('(format "<ul><li>{0}</li></ul>" + concatenation "</li><li>" of ((link of it as string) of fixlets whose ((it = 458 OR it = 459 OR it = 462) of id of it) of bes site whose (name of it = "BES Support")) ) as string');} else { taskLink.innerHTML = EvaluateRelevance('"<ul><li>" & concatenation "</li><li>" of ((link of it as string) of fixlets whose ((it = 458 OR it = 459 OR it = 462) of id of it) of bes site whose (name of it = "BES Support")) & "</li></ul>"');} } catch (e) {if (isEvansOrLater) { taskLink.innerHTML ='<?jxlat <ul><li>458: BES Relay Setting: Dynamic Download Throttling</li><li>459: BES Relay Setting: Dynamically Throttle Outgoing Traffic</li><li>462: BES Server Setting: Dynamically Throttle Outgoing Traffic</li></ul>?>';} else { taskLink.innerHTML = '<ul><li>458: BES Relay Setting: Dynamic Download Throttling</li><li>459: BES Relay Setting: Dynamically Throttle Outgoing Traffic</li><li>462: BES Server Setting: Dynamically Throttle Outgoing Traffic</li></ul>';} } } </SCRIPT> <P><STRONG>Note:</STRONG> Do not set the "Reapply" behavior when taking this action or you may cause the BES Relay and BES Root Server service to constantly restart. </P></TD></TR></TBODY></TABLE>
]]></Description>
		<Relevance>exists relay service OR exists main gather service</Relevance>
		<Relevance><![CDATA[version of client >= "7.0"]]></Relevance>
		<Category>BES Server/Relay Setting</Category>
		<DownloadSize>0</DownloadSize>
		<Source>BigFix</Source>
		<SourceID><![CDATA[<Unspecified>]]></SourceID>
		<SourceSeverity><![CDATA[<Unspecified>]]></SourceSeverity>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Tue, 29 Dec 2009 22:16:29 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-domain_attributes</Name>
			<Value>BES Component Server Relay</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Sat, 11 Mar 2017 00:28:25 +0000</Value>
		</MIMEField>
		<Delay>PT1S</Delay>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to enable Dynamic Throttling.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[setting "_BESRelay_HTTPServer_DynamicThrottleEnabled"="1" on "{parameter "action issue date" of action}" for client

setting "_BESGather_Download_DynamicThrottleEnabled"="1" on "{parameter "action issue date" of action}" for client

// Restart the Relay or Server
if {name of operating system starts with "Win"}
    if {exists relay service}
        dos net stop BESRelay
        dos net start BESRelay
    elseif {exists main gather service}
        dos net stop BESRootServer
        dos net start BESRootServer
    endif 
elseif {name of operating system starts with "AIX"}
    if {exists relay service}
        wait /etc/rc.d/rc2.d/KBESRelayd stop
        wait /etc/rc.d/rc2.d/SBESRelayd start_skipclientrestart
    endif
elseif {(it starts with "SunOS" OR it starts with "Linux") of name of operating system}
    if {exists relay service}
        wait /etc/init.d/besrelay stop
        wait /etc/init.d/besrelay start_skipclientrestart
    elseif {exists main gather service}
        wait /etc/init.d/besserver stop
        wait /etc/init.d/besserver start_skipclientrestart
    endif
else
    continue if {false}
endif

parameter "waitTime" = "{apparent registration server time}"
pause while {((apparent registration server time) - time (parameter "waitTime")) < 10*second}
relay select]]></ActionScript>
		</Action>
		<Action ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to disable Dynamic Throttling.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[setting "_BESRelay_HTTPServer_DynamicThrottleEnabled"="0" on "{parameter "action issue date" of action}" for client

setting "_BESGather_Download_DynamicThrottleEnabled"="0" on "{parameter "action issue date" of action}" for client

// Restart the Relay or Server
if {name of operating system starts with "Win"}
    if {exists relay service}
        dos net stop BESRelay
        dos net start BESRelay
    elseif {exists main gather service}
        dos net stop BESRootServer
        dos net start BESRootServer
    endif 
elseif {name of operating system starts with "AIX"}
    if {exists relay service}
        wait /etc/rc.d/rc2.d/KBESRelayd stop
        wait /etc/rc.d/rc2.d/SBESRelayd start_skipclientrestart
    endif
elseif {(it starts with "SunOS" OR it starts with "Linux") of name of operating system}
    if {exists relay service}
        wait /etc/init.d/besrelay stop
        wait /etc/init.d/besrelay start_skipclientrestart
    elseif {exists main gather service}
        wait /etc/init.d/besserver stop
        wait /etc/init.d/besserver start_skipclientrestart
    endif
else
    continue if {false}
endif

parameter "waitTime" = "{apparent registration server time}"
pause while {((apparent registration server time) - time (parameter "waitTime")) < 10*second}
relay select]]></ActionScript>
		</Action>
		<Action ID="Link3">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> for more information about BES bandwidth throttling.</PostLink>
			</Description>
			<ActionScript MIMEType="text/x-uri">http://support.bigfix.com/bes/misc/besthrottling.html</ActionScript>
		</Action>
	</Task>
</BES>
