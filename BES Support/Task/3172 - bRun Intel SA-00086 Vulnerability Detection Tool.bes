<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Run Intel SA-00086 Vulnerability Detection Tool</Title>
		<Description><![CDATA[
<DIV class=FixletMessage>
<TABLE><TBODY><TR><TD><br><DIV class=FixletMessage><br><TABLE><TBODY><TR><TD><br><DIV class=FixletMessage><br><TABLE><TBODY><TR><TD><P>This Task deploys the Intel-SA-00086 Detection Tool to the endpoint. This tool, which is available for Windows and Linux systems, takes an inventory of the system and drops information that can be used to detect vulnerable firmware associated with INTEL-SA-00086. </P><br><P>For more information about this vulnerability, please review the following documentation:</P><UL><br><LI><A href="https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00086&amp;languageid=en-fr"><FONT color=#0066cc>INTEL-SA-00086 Security Advisory</FONT></A> <BR><br><LI><A href="https://downloadcenter.intel.com/download/27150"><FONT color=#0066cc>Intel-SA-00086 Detection Tool</FONT></A> <BR><br><LI><A href="http://www.intel.com/sa-00086-support"><FONT color=#0066cc>http://www.intel.com/sa-00086-support</FONT></A></LI></UL><br><P>To display the scan results performed by this Task, activate the analysis <?relevance link of fixlets whose(id of it = 3171) of current bes site ?>. </P><br><P><B><FONT color=red>Important Note:</FONT></B> To produce reliable scan results the system where the tool is deployed must meet the following requirements: </P><UL><br><LI><B>Must be a physical system.</B> The fixlet is relevant for virtual machines too, anyhow it might return the error code 4, or inaccurate scan results, in case it is run on a virtual machine<BR><br><LI>On Windows systems, .NET 4.5 Framework is a prerequisite<BR><br><LI>On Linux systems, Python 2.6.6 or above is required</LI></UL><br><P>Any other limitation of the tool also applies to the Task. <BR>The analysis will report the condition that caused the unreliable results. </P></TD></TR></TBODY></TABLE><br></DIV><br><DIV class=FixletProperty><br><H4>File Size:</H4><br>4.59 MB<br></DIV></TD></TR></TBODY></TABLE><br></DIV><br><DIV class=FixletProperty><br><H4>File Size:</H4><br>4.60 MB<br> </DIV><br></TD></TR></TBODY></TABLE>
</DIV>
<DIV class=FixletProperty>
<H4>File Size:</H4>
4.60 MB
 </DIV>
]]></Description>
		<Relevance>if exists property "in proxy agent context" then ( not in proxy agent context ) else true</Relevance>
		<Relevance><![CDATA[(version of client >= "8.2") AND (version of registration server >= "8.2")]]></Relevance>
		<Relevance>(windows of it or name of it contains "Linux") of operating system</Relevance>
		<Relevance>exists processor whose (vendor name of it contains "Intel")</Relevance>
		<Relevance>("x86_64" = architecture of it or "i386" = architecture of it or "i586" = architecture of it or "i686" = architecture of it) of operating system</Relevance>
		<Category></Category>
		<DownloadSize>4823466</DownloadSize>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2017-11-23</SourceReleaseDate>
		<SourceSeverity>Important</SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Mon, 27 Nov 2017 18:39:53 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Tue, 27 Nov 2018 16:04:28 +0000</Value>
		</MIMEField>
		<Delay>PT1H</Delay>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run the Detection Tool.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Create the results folders
if{ windows of operating system }
	parameter "resultFolder"="{pathname of parent folder of parent folder of client folder of site "BESSupport"}\SA00086"
	parameter "resultFile"="{parameter "resultFolder"}\result.xml"
	parameter "extractFolder"="{parameter "resultFolder"}\Extract"
else
	parameter "resultFolder"="/var/opt/BESClient/SA00086"
	parameter "resultFile"="{parameter "resultFolder"}/result.xml"
	parameter "extractFolder"="{parameter "resultFolder"}/Extract"
endif

if{ exists folder (parameter "resultFolder") }
	folder delete "{parameter "resultFolder"}"
endif
folder create "{parameter "resultFolder"}"
folder create "{parameter "extractFolder"}"

// The detection tool cannot run on VMs
if{ exists true whose (if true then( (((item 0 of it contains "VMware") or ((item 0 of it contains "Microsoft") and not (item 1 of it as lowercase contains "surface")) or (item 0 of it contains "Xen")) of ((value "manufacturer" of it as string, value "product_name" of it as string) of structure "system_information" of smbios))) else false) }
 	createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The detection tool cannot detect vulnerabilities from inside of a virtual machine.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
	move __createfile "{parameter "resultFile"}"
	exit 4
endif

/////////////////////////////////
// Windows OS
/////////////////////////////////
if{ windows of operating system }
	// Check if the .NET framework is installed
	if {exists true whose (if true then (not exists value "Release" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full" of registry) else false)}
		createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The detection requires .NET framework 4.5.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
		move __createfile "{parameter "resultFile"}"
		exit 6
	endif
	
	prefetch unzip.exe sha1:84debf12767785cd9b43811022407de7413beb6f size:204800 http://software.bigfix.com/download/redist/unzip-6.0.exe sha256:2122557d350fd1c59fb0ef32125330bde673e9331eb9371b454c2ad2d82091ac
	move __Download\unzip.exe "{(parameter "extractFolder")}\unzip.exe"
	prefetch SA00086_Windows.zip sha1:8d287a3ef183ca517e000e6dca4a441cc2590e1d size:3900200 https://downloadmirror.intel.com/27150/eng/SA00086_Windows.zip sha256:04a464b064dcfee21cc8c4a586b26ae6267e3576e8717817a95974d24322c0b6
	move __Download\SA00086_Windows.zip "{(parameter "extractFolder")}\SA00086_Windows.zip"
	
	// Create the batch file to execute the tool
	createfile until END_OF_FILE
"{parameter "extractFolder"}\unzip.exe" -qq -o -d "{parameter "extractFolder"}" "{parameter "extractFolder"}\SA00086_Windows.zip"
cd "{parameter "extractFolder"}\DiscoveryTool"
"Intel-SA-00086-console.exe" -n -c -p "{parameter "extractFolder"}" -f
END_OF_FILE
	move __createfile "{parameter "extractFolder"}\scan.bat"
	
	// Execute the tool
	runhidden "{parameter "extractFolder"}\scan.bat"
	
	// In some specific situations, the tool can hang
	parameter "start" = "{now}"
	pause while {now < ( ((  parameter "start" of action  ) as time ) + 120* second)}
	if {(exists running applications whose (exists name whose (it as lowercase contains "Intel-SA-00086-console" as lowercase) of it))}
		waithidden "{pathname of client folder of site "BESSupport"}\taskkill.exe" /F /IM Intel-SA-00086-console.exe
		createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The tool took too much time to run.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
		move __createfile "{parameter "resultFile"}"
	
		// Cleanup
		folder delete "{parameter "extractFolder"}"
		
		exit 8
	endif

	// Check if a result file exists and rename it	
	if {exists folder (parameter "extractFolder") AND not exists find file "*.xml" of folder (parameter "extractFolder")}
		createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The tool failed to generate a result. A prerequisite of the tool may be missing.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
		move __createfile "{parameter "resultFile"}"
		exit 10
	endif

	move "{parameter "extractFolder"}\{name of find file "*.xml" of folder (parameter "extractFolder")}" "{parameter "resultFile"}"
	
	// Cleanup
	folder delete "{parameter "extractFolder"}"
else
/////////////////////////////////
// Linux OS
/////////////////////////////////
	if {(exists match (regex "Ubuntu( Server|)( LTS|) (12|14|16)") of name of operating system) OR (if name of operating system != "Linux Debian " then exists match (regex "Debian (7|8|9)") of name of operating system else exists match (regex "(7|8|9)\.") of line of file "/etc/debian_version")}
		if {exists true whose (if true then (not exists (package of debianpackages) whose (name of it="python" and version of it is greater than or equal to "2.6.6")) else false) }
			createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The detection requires Python 2.6.6 or newer.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
			move __createfile "{parameter "resultFile"}"
			exit 12
		endif
	endif
	if {(exists match (regex "Red Hat Enterprise [a-zA-Z]* (5|6|7)") of name of operating system) OR (exists match (regex "CentOS (5|6|7)") of name of operating system) OR (exists match (regex "SuSE Enterprise (Server|Desktop) (10|11|12)") of name of operating system) OR (exists match (regex "Oracle Enterprise (Client|Server|Workstation) (6|7)") of name of operating system)}
		if {exists true whose( if true then (not exists (package of rpm) whose (name of it="python" and version of it is greater than or equal to "2.6.6")) else false) }
			createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The detection requires Python 2.6.6 or newer.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
			move __createfile "{parameter "resultFile"}"
			exit 14
		endif
	endif
       prefetch SA00086_Linux.tar.gz sha1:4f5e15528e22c71a6d1930332b7bcb848971f935 size:973634 https://downloadmirror.intel.com/27150/eng/SA00086_Linux.tar.gz sha256:273222f4b77836d82989bc3ad87e0481539e1da23c9bc908f78fe53ed1d1cbbe
	move __Download/SA00086_Linux.tar.gz "{parameter "extractFolder"}/SA00086_Linux.tar.gz"
	// Create script
	createfile until END_OF_FILE
tar -zxvf {parameter "extractFolder"}/SA00086_Linux.tar.gz -C {parameter "extractFolder"}
chmod +x {parameter "extractFolder"}/intel_sa00086.py {parameter "extractFolder"}/spsInfoLinux64
cd {parameter "extractFolder"}
./intel_sa00086.py
END_OF_FILE
	move __createfile "{parameter "extractFolder"}/scan.sh"
	wait chmod +x "{parameter "extractFolder"}/scan.sh"
	// Execute
	wait "{parameter "extractFolder"}/scan.sh"

	// Check if a result file exists and rename it	
	if {exists folder (parameter "extractFolder") AND not exists find file "*.xml" of folder (parameter "extractFolder")}
	createfile until END_OF_FILE
<?xml version="1.0" encoding="UTF-8"?>
<System>
  <System_Status>
    <System_Risk>Detection Error: The tool failed to generate a result. A prerequisite of the tool may be missing.</System_Risk>
  </System_Status>
</System>
END_OF_FILE
		move __createfile "{parameter "resultFile"}"
		exit 16
	endif

	move "{parameter "extractFolder"}/{name of find file "*.xml" of folder (parameter "extractFolder")}" "{parameter "resultFile"}"

	// Cleanup
	folder delete "{parameter "extractFolder"}"
endif]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
