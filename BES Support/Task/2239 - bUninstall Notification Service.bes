<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Uninstall Notification Service</Title>
		<Description><![CDATA[
<TABLE><TBODY><TR><TD><br>        <DIV id=fixletMessage2 class=FixletMessage><br>    	<DIV id = paramFixletDescription><br>			  <P><br>				Use this Task to uninstall the email Notification Service. <br>			 </P><br>			  		    <br>		       <br>		<br>	</DIV></DIV></TD></TR></TBODY></TABLE>
]]></Description>
		<Relevance>exists relay service OR exists main gather service</Relevance>
		<Relevance>exists main gather service</Relevance>
		<Relevance><![CDATA[version of main gather service >= "9"]]></Relevance>
		<Relevance>windows of operating system</Relevance>
		<Relevance>exists services whose(service name of it = "BESPluginService")</Relevance>
		<Relevance><![CDATA[exists (folder (value "EnterpriseServerFolder" of key "HKEY_LOCAL_MACHINE\SOFTWARE\BigFix\Enterprise Server" of registry as string & "Applications")) whose (exists file "MFS.exe" whose (version of it >= "2.0.0.0") of it)	]]></Relevance>
		<Relevance><![CDATA[exists (folder (value "EnterpriseServerFolder" of key "HKEY_LOCAL_MACHINE\SOFTWARE\BigFix\Enterprise Server" of registry as string & "Applications\NotificationService"))      ]]></Relevance>
		<Category>Notification</Category>
		<Source>IBM</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2015-06-30</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Thu, 17 Dec 2015 21:33:00 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Sat, 11 Mar 2017 00:28:25 +0000</Value>
		</MIMEField>
		<Delay>PT1S</Delay>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Path to Applications folder under BES Server
parameter "AppsFolder" = "{pathname of (folder (value "EnterpriseServerFolder" of key "HKEY_LOCAL_MACHINE\SOFTWARE\BigFix\Enterprise Server" of registry as string & "Applications"))}"

// Path to existing Notification Service installation (if any) under Applications folder
parameter "NSFolder" = "{parameter "AppsFolder" & "\NotificationService"}"

// Path to NotificationService.xml
parameter "NS_xml" = "{parameter "AppsFolder" & "\Config\NotificationService.xml"}"

//Path to log file
parameter "InstallLogFile" = "{parameter "AppsFolder" & "\ns_install_trace.log"}"

parameter "movedInstallLogFile" = "{parameter "NSFolder" & "\ns_install_trace.log"}"
//If previoulsy installed this file will have been created at end of presious install- move to avoid deletion
if { exists file (parameter "movedInstallLogFile") }
	waithidden cmd.exe /C move "{parameter "movedInstallLogFile"}" "{parameter "InstallLogFile"}"
endif

waithidden cmd.exe /C echo ===========================================================    >> "{parameter "InstallLogFile"}"
waithidden cmd.exe /C echo Notification Service Un-Install (%date% @ %time%)              >> "{parameter "InstallLogFile"}"
waithidden cmd.exe /C echo ===========================================================    >> "{parameter "InstallLogFile"}"


// Paths to Server Plugin XML files (and corresponding '.stop' files)
parameter "MFS_XML_Notifier_Registered" = "{parameter "AppsFolder" & "\Config\ns-notifier.xml"}"
parameter "MFS_XML_Monitor_Registered"  = "{parameter "AppsFolder" & "\Config\ns-monitor.xml"}"

// First Un-register the NS apps from the server plugin (first the monitor, then the notifier)
if { exists file (parameter "MFS_XML_Monitor_Registered") }
    waithidden cmd.exe /C echo Unregistering the Notification Service App [ns-monitor] from the BES Server Plugin ... >> "{parameter "InstallLogFile"}"
    delete "{parameter "MFS_XML_Monitor_Registered"}"

    // Assert that the server plugin is no longer monitoring the notification service app before continuing
    continue if { not exists file (parameter "MFS_XML_Monitor_Registered") }
    waithidden cmd.exe /C echo   ^> Unregistered successfully. >> "{parameter "InstallLogFile"}"
endif
if { exists file (parameter "MFS_XML_Notifier_Registered") }
    waithidden cmd.exe /C echo Unregistering the Notification Service App [ns-notifier] from the BES Server Plugin ... >> "{parameter "InstallLogFile"}"
    delete "{parameter "MFS_XML_Notifier_Registered"}"

    // Assert that the server plugin is no longer monitoring the notification service app before continuing
    continue if { not exists file (parameter "MFS_XML_Notifier_Registered") }
    waithidden cmd.exe /C echo   ^> Unregistered successfully. >> "{parameter "InstallLogFile"}"
endif


//Second delete folders and files
delete __createfile
delete remove.bat

createfile until END_REMOVE_BAT
@echo off

@setlocal enableextensions enabledelayedexpansion

:: Set directory to navigate to

pushd "{ parameter "AppsFolder" }"

rmdir  /S /Q "{parameter "NSFolder"}"
popd
endlocal
END_REMOVE_BAT
move __createfile remove.bat
// Assert un-install was successful.Pause and allow time for the application to shut down  to avoid failing to delete the folders due to running notification application

waithidden cmd.exe /C TIMEOUT /T 70 /NOBREAK

waithidden cmd.exe /C echo Deleting Notification Service Directory >> "{parameter "InstallLogFile"}"
waithidden remove.bat
delete remove.bat

continue if { not exists folder ( parameter "NSFolder" ) }
// NS Uninstallation complete.		]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
