<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>_Run UNIX-Apache-ITSSCSD</Title>
		<Description><![CDATA[This task will run the endpoint code for UNIX-Apache-ITSSCSD.
		The action type "Install only (no scan)" will perform the task of preparing and installing the policy but WILL NOT run any health check on the selected endpoint.
		Rest all actions will perform the complete health check process i.e. action of Installing the policy and Running the health check scan .
 		The check fixlets and measured values analyses will automatically update shortly after completion.	
		<p><small><b>Version:</b>&nbsp;4.0.0<br><b>Build ID:</b>&nbsp;20190612-2172</small></p><P>----------------------------------------------------------------------------------<BR>Licensed Materials - Property of IBM<BR>(c) Copyright IBM Corp. 2019. All Rights Reserved.</P>
		]]></Description>
		<Relevance><![CDATA[
				
		(
			if exists setting "_GCM_UNIX-Apache-ITSSCSD_OSRelevance_Override" whose (value of it != "") of client then (
				true
			)
			else (
				(name of operating system as lowercase contains "red hat" and version of operating system >= "6") or (name of operating system as lowercase contains "suse" and version of operating system >= "11") or (name of operating system as lowercase contains "sunos" and version of operating system >= "5.10") or (name of operating system as lowercase contains "aix" and version of operating system >= "7") or (name of operating system as lowercase contains "hp-ux" and version of operating system as string contains "11.31") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8")
			)
		)
		]]></Relevance>
		<Relevance>
				
		if exists setting "_GCM_UNIX-Apache-ITSSCSD_MWRelevance_Override" whose (value of it != "") of client then (
			true
		)
		else (
			(
								if (name of operating system contains "Linux" or name of operating system as lowercase contains "aix") then (exists package whose (name of it is "httpd") of rpm OR exists process whose (name of it contains "httpd") OR (exists file "/usr/sbin/apachectl") OR (exists file "/opt/IBM/HTTPServer/bin/apachectl")) else (exists process whose (name of it contains "httpd") OR (exists file "/usr/sbin/apachectl") OR (exists file "/opt/IBM/HTTPServer/bin/apachectl"))							
			

			) 
					or (if (exists file "subs.all.sss" of folder "__GTS/SSS" of storage folder of client | False) then
		(exists (lines containing "SUBSYSTEM_TYPE=APA" of file "subs.all.sss" of folder "__GTS/SSS" of storage folder of client) whose (not (it is "" or it contains "SUBSYSTEM_INSTANCE=NO")) | False)
		else False)
	
		)
		</Relevance>
		<Relevance><![CDATA[(version of client >= "9.2")]]></Relevance>
		<Relevance><![CDATA[
						
		if exist values of settings ("GTS_GCM_ENHANCED_SCHEDULING_" & (name of current site)) of client then
			(if value of setting ("GTS_GCM_ENHANCED_SCHEDULING_" & (name of current site)) of client as string as lowercase = "halted" then False else True)
		else True

		]]></Relevance>
		<Relevance><![CDATA[
						
		if(((not exists settings ("GTS_GCM_ENHANCED_SCHEDULING_" & (name of current site)) of client) or (value of setting ("GTS_GCM_ENHANCED_SCHEDULING_" & (name of current site)) of client as string as lowercase = "disabled"))|false) then True
		Else
		(if exist values of settings ("GTS_" & (name of current site) & "_GCM_Dates") of client Then
		( if( exists file it ) then (if ((line 1 of file it does not contain ((date (local time zone) of now ) as string)) AND ((exists true whose (if true then (exists (if exist values of settings ("GTS_" & (name of current site) & "_GCM_Dates") of client then value of setting ("GTS_" & (name of current site) & "_GCM_Dates") of client else error "not set") whose ((it as string as lowercase contains (("|" & (day_of_month of it as two digits) & "-" & first 3 of (month of it as string) & "|" ) of date (local time zone) of now) as lowercase) OR (it as string as lowercase contains (("|" & (day_of_month of it as two digits) & "-" & first 3 of (month of it as string) & "-" & year of it as string & "|") of date (local time zone) of now) as lowercase))) else False)))) then True else False) else True) of (pathname of parent folder of parent folder of folder ( pathname of client folder of current site) & "/__GTS/FlagFiles/IEMHC/GCM_" & (name of current site) & "_" & "UNIX-Apache-ITSSCSD" & ".txt")
		Else False)
		]]></Relevance>
		<Category>Middleware</Category>
		<Source>GCM</Source>
		<SourceID>4.0.0</SourceID>
		<SourceReleaseDate>2019-06-12</SourceReleaseDate>
		<MIMEField>
			<Name>x-fixlet-ibm-copyright</Name>
			<Value>Licensed Materials - Property of IBM; (c) Copyright IBM Corp. 2019. All Rights Reserved.</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-author</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-origin</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-supported-csd-version</Name>
			<Value>4.1</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value>31330001</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-purpose</Name>
			<Value>lifecycle</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 01 Jul 2019 07:00:32 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action to Prepare, Install and Scan the Endpoint.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
		// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
		
begin prefetch block
	if {exists setting "_GCM_Download_BasePath" whose (value of it != "") of client}
		parameter "basepath" = "{value of setting "_GCM_Download_BasePath" of client}"
	else
		parameter "basepath" = "GTSProtocol://download.bigfix.com/download/gtscontent/iemhc"
	endif
	
	if {name of operating system as lowercase contains "sunos" OR name of operating system as lowercase contains "hp-ux"}
	parameter "dump" = ""
    else
	parameter "dump" = "-Xdump:none"
	endif
	
	//Start of Prepare endpoint	
	//determine if JRE upgrade is required
//determine if JRE upgrade is required
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_linux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_linux32" = "80535"
         if{parameter "input_jre_linux32" > parameter "downloaded_jre_linux32"}
         	 if {(free space of filesystem of storage folder of client) > 126845812}
          		parameter "jre_download_linux32" = "true"
          		parameter "space_avail" = "true"
          	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
		     endif	
     	 else
	       parameter "jre_download_linux32" = "false"
	     endif
	 else
	 if {(free space of filesystem of storage folder of client) > 126845812}
	 	 parameter "jre_download_linux32" = "true"
	 	 parameter "space_avail" = "true"
	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
	 endif	
endif     

if{parameter "jre_download_linux32" as lowercase is "true"}
add prefetch item name=ibm-java-jre-8.0-5.35-linux-i386.tgz sha1=a99afe85b2085792080606e856017a734d3164af sha256=d6cf70375c7d12c03cde7d59ee59d6fc7ce38b26e5f250bee0a824455a962ade size=117958548 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-i386.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64" = "80535"
      if{parameter "input_jre_linuxppc64" > parameter "downloaded_jre_linuxppc64"}
      	if {(free space of filesystem of storage folder of client) > 151800541}
            parameter "jre_download_linuxppc64" = "true"
          	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        
        endif  
      else
	      parameter "jre_download_linuxppc64" = "false"
	  endif
 else
 	if {(free space of filesystem of storage folder of client) > 151800541}
    	 parameter "jre_download_linuxppc64" = "true"
    	 parameter "space_avail" = "true"
    else
    	 parameter "space_avail" = "false"
    endif	  
 endif

if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64.tgz sha1=25ae2bd4d021e408f74e89bebcfdb0710e0aabec sha256=809c801d2cb137ad2e13b6439869f51df7809a89705c1adf073cf7c9108fc865 size=142913277 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64.tgz
endif
endif

	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64le" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64le" = "80535"
    
    if{parameter "input_jre_linuxppc64le" > parameter "downloaded_jre_linuxppc64le"}
      	  if {(free space of filesystem of storage folder of client) > 150702299}	
          		parameter "jre_download_linuxppc64le" = "true"
	          	parameter "space_avail" = "true"
          else
    	      	parameter "space_avail" = "false"
          endif
    else
	   	  parameter "jre_download_linuxppc64le" = "false"
	endif
else
	if {(free space of filesystem of storage folder of client) > 150702299}
	 	parameter "jre_download_linuxppc64le" = "true"
	 	parameter "space_avail" = "true"
	else
		parameter "space_avail" = "false"
	endif 	 
 endif

if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64le.tgz sha1=4b75c74c42a86a9cf3a167792624215a327b0d21 sha256=1ef8f202b1e9c1604781e12e7f15f6b267cbe2015cd212c340f7376886515df1 size=141815035 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxs390x" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxs390x" = "80535"
      if{parameter "input_jre_linuxs390x" > parameter "downloaded_jre_linuxs390x"}
      	  if {(free space of filesystem of storage folder of client) > 135812215}	
          		parameter "jre_download_linuxs390x" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif	
      else
	      parameter "jre_download_linuxs390x" = "false"
	  endif
  else
  	 if {(free space of filesystem of storage folder of client) > 135812215}	
     	parameter "jre_download_linuxs390x" = "true"
     	parameter "space_avail" = "true"
     else
     	parameter "space_avail" = "false"
     endif	 
  endif   	    

if{parameter "jre_download_linuxs390x" as lowercase is "true"}
     add prefetch item name=ibm-java-jre-8.0-5.35-linux-s390x.tgz sha1=22f36411ba4e6d693d25dcf303b3326b01217a70 sha256=d530ee617b2f97ab3d83f5ebc8e017b85436db8eb153bdaefd8e57485e3be8cc size=126924951 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-s390x.tgz 	
endif
endif

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linux64" = "80535"
      if{parameter "input_jre_linux64" > parameter "downloaded_jre_linux64"}
      	  if {(free space of filesystem of storage folder of client) > 138182382}	
          		parameter "jre_download_linux64" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif		
      else
	      parameter "jre_download_linux64" = "false"
	  endif
  else
  	if {(free space of filesystem of storage folder of client) > 138182382}	
     	parameter "jre_download_linux64" = "true"
     	parameter "space_avail" = "true"
    else
    	parameter "space_avail" = "false"
    endif
  endif
  	
if{parameter "jre_download_linux64" as lowercase is "true"}
	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-x86_64.tgz sha1=c3013c4534805c07b76b2ec167fc38eb52cd0c70 sha256=af2fe61dc9d62923383405f77d1c31292c13791a0f21019f0365b041ef40c447 size=129295118 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-x86_64.tgz 	
endif
endif

  
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
 if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

	    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	       parameter "downloaded_jre_aix32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	       parameter "input_jre_aix32" = "80535"
	         if{parameter "input_jre_aix32" > parameter "downloaded_jre_aix32"}
	         	if {(free space of filesystem of storage folder of client) > 131978043}
	          		parameter "jre_download_aix32" = "true"
	          		parameter "space_avail" = "true"
	          	else
	          		parameter "space_avail" = "false"
	          	endif	
		     else
		      parameter "jre_download_aix32" = "false"
		     endif
		 else
		  if {(free space of filesystem of storage folder of client) > 131978043}		
		  	parameter "jre_download_aix32" = "true"
		  	parameter "space_avail" = "true"
		  else
		  	parameter "space_avail" = "false"
		  endif	
	   endif 
	   
	   if{parameter "jre_download_aix32" as lowercase is "true"}
		  add prefetch item name=jre832redist.tar.gz sha1=99ee69774f10d4f8affbd9e27232cbd6de7cd763 sha256=c09109c251dd937f72c3450531f954f1012a41e3ed6287520b6c278a5037a63d size=123090779 url={parameter "basepath"}/jre/80535/jre832redist.tar.gz 	
	   endif
  endif
endif
  
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
  if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix64" = "154168475"
        if{parameter "input_jre_aix64" > parameter "downloaded_jre_aix64"}
        	if {(free space of filesystem of storage folder of client) > 131978043}
         		parameter "jre_download_aix64" = "true"
         		parameter "space_avail" = "true"
         	else
         		parameter "space_avail" = "false"
         	endif	
        else
         parameter "jre_download_aix64" = "false" 
       endif    
    else
    	if {(free space of filesystem of storage folder of client) > 131978043}
        	parameter "jre_download_aix64" = "true"
        	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        endif
	endif
    
    if{parameter "jre_download_aix64" as lowercase is "true"}
		add prefetch item name=jre864redist.tar.gz sha1=5949599f0a89fe0d48889f45d64ab18886b7be48 sha256=76e5cece78166168adeb0d040dff3292386f71678417e84040b7b92c52f16e8e size=145281211 url={parameter "basepath"}/jre/154168475/jre864redist.tar.gz 	
    endif
  endif  
endif
  
  
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")}
	 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux32" = "80530"
          if{parameter "input_jre_hpux32" > parameter "downloaded_jre_hpux32"}
          	 if {(free space of filesystem of storage folder of client) > 160449639}
          	 		 parameter "space_avail" = "true"
          	         parameter "jre_download_hpux32" = "true"
	         else
	         		parameter "space_avail" = "false"
	         endif
	     else
	       parameter "jre_download_hpux32" = "false"
	     endif
	 else
	  	 if {(free space of filesystem of storage folder of client) > 160449639}
	     	parameter "jre_download_hpux32" = "true"
	     	parameter "space_avail" = "true"
	     else
	     	parameter "space_avail" = "false"
	     endif	
	endif
if{parameter "jre_download_hpux32" as lowercase is "true"}
	 add prefetch item name=hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z sha1=8797755ad786fa383234324026275e07822a6d3d sha256=a025fd583488322ae4784ea457464ad9bd1d4b38924ae9e475ac5f431c627ed1 size=151562375 url={parameter "basepath"}/jre/80530/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif 
		
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux64" = "80530"
         if{parameter "input_jre_hpux64" > parameter "downloaded_jre_hpux64"}
         	if {(free space of filesystem of storage folder of client) > 229883387}
	        	 parameter "jre_download_hpux64" = "true"
	        	 parameter "space_avail" = "true"
	        else
	        	 parameter "space_avail" = "false"
	        endif 
         else
             parameter "jre_download_hpux64" = "false"
         endif
   else
       if {(free space of filesystem of storage folder of client) > 229883387}
       		parameter "jre_download_hpux64" = "true"
       		parameter "space_avail" = "true"
       else
       		parameter "space_avail" = "false"	
       endif		
  endif
  
if{parameter "jre_download_hpux64" as lowercase is "true"}
	add prefetch item name=hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z sha1=9359ea86466b836f5bdad07515f074aa636e8cc5 sha256=799b5e8a96dad5bd3e68918e30cbf3c407e43312f1d3a12dda7f9caa2f2b3854 size=220996123 url={parameter "basepath"}/jre/80530/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif

	
			
 if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sparc" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sparc" = "80535"   
     if{parameter "input_jre_sparc" > parameter "downloaded_jre_sparc"}
     	 if {(free space of filesystem of storage folder of client) > 133120985}
			parameter "jre_download_sparc" = "true"
			parameter "space_avail" = "true"
		 else
		 	parameter "space_avail" = "false"
		 endif		
	 else
	 	parameter "jre_download_sparc" = "false"		
	 endif  
   else
   	 if {(free space of filesystem of storage folder of client) > 133120985}	
   	  	parameter "jre_download_sparc" = "true"
   	  	parameter "space_avail" = "true"
   	 else
   	 	parameter "space_avail" = "false"
   	 endif 	
 endif
 
if{parameter "jre_download_sparc" as lowercase is "true"}
   add prefetch item name=sol6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=243294a6fd481b2afeddb5832c79bd90d87a1260 sha256=281261eb9db231109811d1c139ec1c6d6e7119f2b0247068f5a5e7d62b4dd4a9 size=124233721 url={parameter "basepath"}/jre/80535/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif
	
			
if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sunos64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sunos64" = "80535"
      if{parameter "input_jre_sunos64" > parameter "downloaded_jre_sunos64"}
      	if {(free space of filesystem of storage folder of client) > 124324771}
			parameter "jre_download_sunos64" = "true"
			parameter "space_avail" = "true"
		else
			parameter "space_avail" = "false"
		endif	
	 else
	    parameter "jre_download_sunos64" = "false"		
	 endif
  else
  	if {(free space of filesystem of storage folder of client) > 124324771}
  		parameter "jre_download_sunos64" = "true"
  		parameter "space_avail" = "true"
  	else
  		parameter "space_avail" = "false"
  	endif	
 endif
if{parameter "jre_download_sunos64" as lowercase is "true"}
    add prefetch item name=solx6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=0c5f6fa8ecf76750fbe2e50c3ebe57c402ca44e0 sha256=a43620085447b285b5ecfcba97f33ec3d417a39ae3cd8763d0f7e0adbee5eef1 size=115437507 url={parameter "basepath"}/jre/80535/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif


parameter "updateTools" = "{not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}"

	// only download HCLauncher if needed
if {parameter "updateTools" as lowercase is "true"}
add prefetch item name=HCLauncher.jar sha1=9ef17f41e143689602d67abbaf3d9596e5ee709a sha256=102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f size=8887264 url={parameter "basepath"}/410/20190612-2172/HCLauncher/HCLauncher.jar
endif

add prefetch item name=policy.xml sha1=48d0ba90fb2b7742734e34545866d84196d130c2 sha256=40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b size=103817 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/policy.xml

add prefetch item name=Collectors.zip sha1=3f151ed135214a70403a94e8f7d41106dcf25276 sha256=df53b69416b3b0d0f90a92d072de7462a737183be432f0fd226a73d1367e6658 size=1945557 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/Collectors.zip
 


add prefetch item name=cuz.jar sha1=76dd952a93b4bbda50511acff681d6805487baa7 sha256=ce2147227f5822c3e9a4e7909bf4178ea8299de3d6e9c118e813c85e53492caa size=179698 url={parameter "basepath"}/410/20190612-2172/tools/cuz.jar
	
end prefetch block

// If there is no sufficient space to install JRE+HCLauncher exit with error code 100
if {parameter "space_avail" as lowercase is "false"}
exit 100


parameter "build_id" = "20190612-2172"
parameter "version" = "4.0.0"

folder create "{storage folder of client}/__GTS/__UIDEXT"
folder create "{storage folder of client}/__GTS/__IEMHC"

	//extract JRE
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
  if{parameter "jre_download_linux32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-i386.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-i386-80/jre" "{storage folder of client}/__GTS/"
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
  if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64-80/jre" "{storage folder of client}/__GTS/"
	 	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
  if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64le-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
  if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-s390x.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-s390x-80/jre" "{storage folder of client}/__GTS/"
	  	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
  if{parameter "jre_download_linux64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-x86_64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-x86_64-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
  if{parameter "jre_download_aix32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	 
	 

wait gunzip -f "{client folder of current site}/__Download/jre832redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre832redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	 
 	 
 	 	 
	 	 
	  endif 
endif
endif
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}	
 if{parameter "jre_download_aix64" as lowercase is "true"}
	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	
	

wait gunzip -f "{client folder of current site}/__Download/jre864redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre864redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	
		 
		 
	 endif 
endif
endif

 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")} 
  if{parameter "jre_download_hpux32" as lowercase is "true"}
	     	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
 endif
	 
     if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
      if{parameter "jre_download_hpux64" as lowercase is "true"}
	   	 	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
	endif 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")} 
  	 if{parameter "jre_download_sparc" as lowercase is "true"}
		 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


		 folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

		 		 	 endif
  endif	 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
	if{parameter "jre_download_sunos64" as lowercase is "true"}
	    
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	    folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

	    	    	 endif
 endif

  if{not exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	// Last Change
	appendfile {now as string}
	
	// Version
	appendfile {parameter "version"}
	
	// Build ID
	appendfile {parameter "build_id"}
	
	// create the version file
	delete "{storage folder of client}/__GTS/version.txt"
	move __appendfile "{storage folder of client}/__GTS/version.txt"
	
	// append JRE version to end
	if{ windows of operating system}
				appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -version >> "{storage folder of client}\__GTS\version.txt" 2>&1 
		delete launch.bat
		move __appendfile launch.bat
		wait launch.bat
	else
				appendfile #!/bin/sh
		appendfile "{storage folder of client}/__GTS/jre/bin/java" -version >> "{storage folder of client}/__GTS/version.txt" 2>&1
		delete launch.sh
		move __appendfile launch.sh
		wait chmod 750 launch.sh
		wait "{client folder of current site}/launch.sh"
	endif
endif     	    
// clean up the work folder
folder delete "{storage folder of client}/__GTS/Temp"


if {parameter "updateTools" as lowercase is "true"}
// clean and add the HCLauncher.jar
folder delete "{storage folder of client}/__GTS/__IEMHC/HCLauncher"
folder delete "{storage folder of client}/__GTS/HCLauncher_410"
folder create "{storage folder of client}/__GTS/HCLauncher_410"

copy "{client folder of current site}/__Download/HCLauncher.jar" "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar"

//HCLauncher version .txt
if{windows of operating system}
 appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -version >> "{storage folder of client}\__GTS\HCLauncher_410\version.txt" 2>&1 
 delete launch.bat
 move __appendfile launch.bat
 wait launch.bat
else
 appendfile #!/bin/sh
 appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -version >> "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 2>&1
 delete launch.sh
 move __appendfile launch.sh
 wait chmod 750 launch.sh
 wait "{client folder of current site}/launch.sh"
 endif

parameter "HCL_Filename" = "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 
 appendfile {concatenation "%0d%0a" of lines of file (parameter "HCL_Filename") & "%0d%0a" & "Bigfix buildID: " & (parameter "build_id") & "%0d%0a"} 
 move "{parameter "HCL_Filename"}" "{parameter "HCL_Filename"}.bak" 
 move __appendfile "{parameter "HCL_Filename"}" 
 delete "{parameter "HCL_Filename"}.bak" 

endif



//End of Prepare Endpoint

//Start of Install policy


  if {exists setting ("_GCM_CollectorDebugMode") whose (value of it as lowercase = "true") of client|false}
		//do not remove existing Collectors as Debug mode is ON	
  else
				if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml"
		endif
		
				
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		endif
		
		folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		
		//Restore backed up policy files and folders
		if{exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" 
		endif
			
		// unzip the Collectors.zip
		if {windows of operating system} 
			wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\cuz.jar" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" "{client folder of current site}\__Download\Collectors.zip" 	
		else
			wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/cuz.jar" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD" "{client folder of current site}/__Download/Collectors.zip"	
		endif
		
		if {exit code of action != 0}
		  exit {exit code of action}
	    endif
		
    endif

	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	copy "{client folder of current site}/__Download/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"

	
	// create version.txt
	appendfile {now as string}
	appendfile Apache-UNIX-ITSSCSD-4.1
	appendfile {parameter "version"}
	appendfile {parameter "build_id"}
	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	move __appendfile "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	
		// Set the GTS_GCM_Enhanched_Scheduling_<site name> setting to DISABLED if the setting is empty or does not exists AND there is no GTS_<site name>_GCM_Dates setting
	if {( (not exists setting ("GTS_GCM_ENHANCED_SCHEDULING_"&(name of current site)) whose (value of it != "") of client) AND ((not exists values of setting ("GTS_"&(name of current site)&"_GCM_Dates") of client)|True) )}
		setting "GTS_GCM_ENHANCED_SCHEDULING_{name of current site}"="DISABLED" on "{date (local time zone) of now & time (local time zone) of now}" for client
	endif


//End of Install Policy
//Copy Hotfixes if available

if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
	if {exists file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
			copy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	endif

	if {exists matches (regex ".jar$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
		parameter "source_path"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
		parameter "destination_path" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/collectors"

		if {windows of operating system}	
	
			delete __createfile
			createfile until finish
				option Explicit
				Dim fso  
				Set fso = CreateObject("Scripting.FileSystemObject") 
				fso.CopyFile "{parameter "source_path"}\*.jar", "{parameter "destination_path"}"
			finish
	
			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs" 
		else
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path"}" 
			   find -iname '*.jar' -exec cp {{} "{parameter "destination_path"}" \; 
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh" 
		endif
	endif
	
	parameter "source_path1"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
	parameter "destination_path1" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/RemediationScript"
	
	if {windows of operating system AND exists matches (regex ".ps1$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.ps1", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {windows of operating system AND exists matches (regex ".vbs$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.vbs", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {exists matches (regex ".sh$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path1"}" 
			   find -iname '*.sh' -exec cp {{} "{parameter "destination_path1"}" \;
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh"
	endif
endif


parameter "customJVM" = ""
parameter "xdump_check"     = ""

if "{(exists lines of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|false}"
	parameter "customJVM"   = "{(line 1 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
	parameter "xdump_check" = "{(line 2 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
    if {parameter "xdump_check" as lowercase is ""}
        parameter "dump" = "-Xdump:none"
    elseif {parameter "xdump_check" as lowercase is "yes"}
     	parameter "dump" = "-Xdump:none"
    else
       parameter "dump" = ""
    endif
endif




if {exists setting "_GCM_HCLauncher_Report" whose (value of it != "") of client}
	parameter "reportoutput" = "-report"
	else
	parameter "reportoutput" = ""
endif


if {exists setting "_GCM_HCLauncher_Limit" whose (value of it != "") of client}
	parameter "limitOutput" = "{(it as string as integer | 10000) of value of setting "_GCM_HCLauncher_Limit" of client}"
else
	parameter "limitOutput" = "10000"
endif

if {exists setting "_GCM_HCLauncher_Truncate" whose (value of it != "") of client}
	parameter "truncateOutput" = "{(it as string as integer | 500) of value of setting "_GCM_HCLauncher_Truncate" of client}"
else
	parameter "truncateOutput" = "500"
endif


if {exists setting "_GCM_HCLauncher_Debug" whose (value of it != "") of client}
	parameter "debug" = "-llevel DEBUG"
else
	parameter "debug" = ""
endif

if {exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
	parameter "localpolparm" = "-localpolicy"
else
	parameter "localpolparm" = ""
endif

	if {exists file "policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy_result.xml"
		else
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_result.xml"
		endif
	endif
	
	if {exists folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			folder delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy"
		else
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy"
		endif
	endif

	appendfile #!/bin/sh
appendfile cd "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"   {parameter "localpolparm"} -pparams "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/GCMBigfix_HealthCheck.log" 2>&1
		else
			// launch without external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"   {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/GCMBigfix_HealthCheck.log" 2>&1
		endif
		
	delete launch.sh
	move __appendfile launch.sh
	wait chmod 750 launch.sh
		
				
	if{not exists folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client and not exists file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
	 if{not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client is "40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b") | false)}
	 // policy.xml file is tampered.
	 exit 666
	  endif
	endif
	
	if{not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	 exit 666
	 //HCLauncher.jar file is tampered.
	endif
	
	
	wait "{client folder of current site}/launch.sh"
	if {exit code of action != 0}
	exit {exit code of action}
	endif
	
	// ================================================================
// =  ADDED TO WRITE FILE WITH LAST HEALTH CHECK RUN DATE & TIME  =
// ================================================================

// Set this parameter to the name of the fixlet
parameter "GTS_GCM_Current_Fixlet_Name" = "UNIX-Apache-ITSSCSD"

parameter "GTS_GCM_GTS_Folder" = "{pathname of parent folder of parent folder of folder ( pathname of client folder of current site)}/__GTS"
parameter "GTS_GCM_FlagFiles_Folder" = "{parameter "GTS_GCM_GTS_Folder"}/FlagFiles"
parameter "GTS_GCM_IEMHC_Folder" = "{parameter "GTS_GCM_FlagFiles_Folder"}/IEMHC"
parameter "GTS_GCM_LastRunFile" = "GCM_{(name of current site)}_{parameter "GTS_GCM_Current_Fixlet_Name" of action}.txt"
parameter "GTS_GCM_ReadMeFile" = "ReadMe.txt"

// Windows create folder structure (if missing)
if {name of operating system as lowercase starts with "win"}
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		dos mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		dos mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		dos mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

else  // Unix create folder structure (if missing)
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		wait mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		wait mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		wait mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

endif

//====================================================================
// Now the __GTS/FlagFiles/IEMHC folder structure is in place
// Place a ReadMe.txt file explaining about the purpose of this folder
//  and files and how it can be used (if not already present)
if {not exists file (parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile" of action)}
	delete __createfile
	createfile until EOF
		This is a BigFix IEMHC directory that contains 'GCM_<site name>_<fixlet name>.txt' files.
		Each file contains the date and time of the last run of the Health Check fixlet in that site

		If you want BigFix to perform a new Health Check and :
		1. you want to run only specific Health Check(s): delete the file(s) for the that site and fixlet.
		2. you want to run ALL Health Checks: delete the IEMHC directory (or all files in it).

		As soon as the IEMHC(s) is performed successfully the following will be recreated (if needed):
		- the IEMHC directory.
		- this ReadMe file.
		- for each site and fixlet file that was deleted the GCM_<site name>_<fixlet name>.txt file.
	EOF
	move __createfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile"}"

endif


//====================================================================
// Write a file with the name of the site and the fixlet and
// write the current date and time in the file

delete __appendfile
appendfile {date (local time zone) of now & time (local time zone) of now}
delete "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"
move __appendfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"

	]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
		<Action ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy action to Prepare, Install and Scan with specific rule options.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
		// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
		
begin prefetch block
	if {exists setting "_GCM_Download_BasePath" whose (value of it != "") of client}
		parameter "basepath" = "{value of setting "_GCM_Download_BasePath" of client}"
	else
		parameter "basepath" = "GTSProtocol://download.bigfix.com/download/gtscontent/iemhc"
	endif
	
	if {name of operating system as lowercase contains "sunos" OR name of operating system as lowercase contains "hp-ux"}
	parameter "dump" = ""
    else
	parameter "dump" = "-Xdump:none"
	endif
	
	//Start of Prepare endpoint	
	//determine if JRE upgrade is required
//determine if JRE upgrade is required
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_linux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_linux32" = "80535"
         if{parameter "input_jre_linux32" > parameter "downloaded_jre_linux32"}
         	 if {(free space of filesystem of storage folder of client) > 126845812}
          		parameter "jre_download_linux32" = "true"
          		parameter "space_avail" = "true"
          	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
		     endif	
     	 else
	       parameter "jre_download_linux32" = "false"
	     endif
	 else
	 if {(free space of filesystem of storage folder of client) > 126845812}
	 	 parameter "jre_download_linux32" = "true"
	 	 parameter "space_avail" = "true"
	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
	 endif	
endif     

if{parameter "jre_download_linux32" as lowercase is "true"}
add prefetch item name=ibm-java-jre-8.0-5.35-linux-i386.tgz sha1=a99afe85b2085792080606e856017a734d3164af sha256=d6cf70375c7d12c03cde7d59ee59d6fc7ce38b26e5f250bee0a824455a962ade size=117958548 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-i386.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64" = "80535"
      if{parameter "input_jre_linuxppc64" > parameter "downloaded_jre_linuxppc64"}
      	if {(free space of filesystem of storage folder of client) > 151800541}
            parameter "jre_download_linuxppc64" = "true"
          	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        
        endif  
      else
	      parameter "jre_download_linuxppc64" = "false"
	  endif
 else
 	if {(free space of filesystem of storage folder of client) > 151800541}
    	 parameter "jre_download_linuxppc64" = "true"
    	 parameter "space_avail" = "true"
    else
    	 parameter "space_avail" = "false"
    endif	  
 endif

if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64.tgz sha1=25ae2bd4d021e408f74e89bebcfdb0710e0aabec sha256=809c801d2cb137ad2e13b6439869f51df7809a89705c1adf073cf7c9108fc865 size=142913277 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64.tgz
endif
endif

	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64le" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64le" = "80535"
    
    if{parameter "input_jre_linuxppc64le" > parameter "downloaded_jre_linuxppc64le"}
      	  if {(free space of filesystem of storage folder of client) > 150702299}	
          		parameter "jre_download_linuxppc64le" = "true"
	          	parameter "space_avail" = "true"
          else
    	      	parameter "space_avail" = "false"
          endif
    else
	   	  parameter "jre_download_linuxppc64le" = "false"
	endif
else
	if {(free space of filesystem of storage folder of client) > 150702299}
	 	parameter "jre_download_linuxppc64le" = "true"
	 	parameter "space_avail" = "true"
	else
		parameter "space_avail" = "false"
	endif 	 
 endif

if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64le.tgz sha1=4b75c74c42a86a9cf3a167792624215a327b0d21 sha256=1ef8f202b1e9c1604781e12e7f15f6b267cbe2015cd212c340f7376886515df1 size=141815035 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxs390x" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxs390x" = "80535"
      if{parameter "input_jre_linuxs390x" > parameter "downloaded_jre_linuxs390x"}
      	  if {(free space of filesystem of storage folder of client) > 135812215}	
          		parameter "jre_download_linuxs390x" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif	
      else
	      parameter "jre_download_linuxs390x" = "false"
	  endif
  else
  	 if {(free space of filesystem of storage folder of client) > 135812215}	
     	parameter "jre_download_linuxs390x" = "true"
     	parameter "space_avail" = "true"
     else
     	parameter "space_avail" = "false"
     endif	 
  endif   	    

if{parameter "jre_download_linuxs390x" as lowercase is "true"}
     add prefetch item name=ibm-java-jre-8.0-5.35-linux-s390x.tgz sha1=22f36411ba4e6d693d25dcf303b3326b01217a70 sha256=d530ee617b2f97ab3d83f5ebc8e017b85436db8eb153bdaefd8e57485e3be8cc size=126924951 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-s390x.tgz 	
endif
endif

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linux64" = "80535"
      if{parameter "input_jre_linux64" > parameter "downloaded_jre_linux64"}
      	  if {(free space of filesystem of storage folder of client) > 138182382}	
          		parameter "jre_download_linux64" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif		
      else
	      parameter "jre_download_linux64" = "false"
	  endif
  else
  	if {(free space of filesystem of storage folder of client) > 138182382}	
     	parameter "jre_download_linux64" = "true"
     	parameter "space_avail" = "true"
    else
    	parameter "space_avail" = "false"
    endif
  endif
  	
if{parameter "jre_download_linux64" as lowercase is "true"}
	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-x86_64.tgz sha1=c3013c4534805c07b76b2ec167fc38eb52cd0c70 sha256=af2fe61dc9d62923383405f77d1c31292c13791a0f21019f0365b041ef40c447 size=129295118 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-x86_64.tgz 	
endif
endif

  
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
 if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

	    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	       parameter "downloaded_jre_aix32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	       parameter "input_jre_aix32" = "80535"
	         if{parameter "input_jre_aix32" > parameter "downloaded_jre_aix32"}
	         	if {(free space of filesystem of storage folder of client) > 131978043}
	          		parameter "jre_download_aix32" = "true"
	          		parameter "space_avail" = "true"
	          	else
	          		parameter "space_avail" = "false"
	          	endif	
		     else
		      parameter "jre_download_aix32" = "false"
		     endif
		 else
		  if {(free space of filesystem of storage folder of client) > 131978043}		
		  	parameter "jre_download_aix32" = "true"
		  	parameter "space_avail" = "true"
		  else
		  	parameter "space_avail" = "false"
		  endif	
	   endif 
	   
	   if{parameter "jre_download_aix32" as lowercase is "true"}
		  add prefetch item name=jre832redist.tar.gz sha1=99ee69774f10d4f8affbd9e27232cbd6de7cd763 sha256=c09109c251dd937f72c3450531f954f1012a41e3ed6287520b6c278a5037a63d size=123090779 url={parameter "basepath"}/jre/80535/jre832redist.tar.gz 	
	   endif
  endif
endif
  
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
  if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix64" = "154168475"
        if{parameter "input_jre_aix64" > parameter "downloaded_jre_aix64"}
        	if {(free space of filesystem of storage folder of client) > 131978043}
         		parameter "jre_download_aix64" = "true"
         		parameter "space_avail" = "true"
         	else
         		parameter "space_avail" = "false"
         	endif	
        else
         parameter "jre_download_aix64" = "false" 
       endif    
    else
    	if {(free space of filesystem of storage folder of client) > 131978043}
        	parameter "jre_download_aix64" = "true"
        	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        endif
	endif
    
    if{parameter "jre_download_aix64" as lowercase is "true"}
		add prefetch item name=jre864redist.tar.gz sha1=5949599f0a89fe0d48889f45d64ab18886b7be48 sha256=76e5cece78166168adeb0d040dff3292386f71678417e84040b7b92c52f16e8e size=145281211 url={parameter "basepath"}/jre/154168475/jre864redist.tar.gz 	
    endif
  endif  
endif
  
  
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")}
	 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux32" = "80530"
          if{parameter "input_jre_hpux32" > parameter "downloaded_jre_hpux32"}
          	 if {(free space of filesystem of storage folder of client) > 160449639}
          	 		 parameter "space_avail" = "true"
          	         parameter "jre_download_hpux32" = "true"
	         else
	         		parameter "space_avail" = "false"
	         endif
	     else
	       parameter "jre_download_hpux32" = "false"
	     endif
	 else
	  	 if {(free space of filesystem of storage folder of client) > 160449639}
	     	parameter "jre_download_hpux32" = "true"
	     	parameter "space_avail" = "true"
	     else
	     	parameter "space_avail" = "false"
	     endif	
	endif
if{parameter "jre_download_hpux32" as lowercase is "true"}
	 add prefetch item name=hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z sha1=8797755ad786fa383234324026275e07822a6d3d sha256=a025fd583488322ae4784ea457464ad9bd1d4b38924ae9e475ac5f431c627ed1 size=151562375 url={parameter "basepath"}/jre/80530/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif 
		
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux64" = "80530"
         if{parameter "input_jre_hpux64" > parameter "downloaded_jre_hpux64"}
         	if {(free space of filesystem of storage folder of client) > 229883387}
	        	 parameter "jre_download_hpux64" = "true"
	        	 parameter "space_avail" = "true"
	        else
	        	 parameter "space_avail" = "false"
	        endif 
         else
             parameter "jre_download_hpux64" = "false"
         endif
   else
       if {(free space of filesystem of storage folder of client) > 229883387}
       		parameter "jre_download_hpux64" = "true"
       		parameter "space_avail" = "true"
       else
       		parameter "space_avail" = "false"	
       endif		
  endif
  
if{parameter "jre_download_hpux64" as lowercase is "true"}
	add prefetch item name=hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z sha1=9359ea86466b836f5bdad07515f074aa636e8cc5 sha256=799b5e8a96dad5bd3e68918e30cbf3c407e43312f1d3a12dda7f9caa2f2b3854 size=220996123 url={parameter "basepath"}/jre/80530/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif

	
			
 if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sparc" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sparc" = "80535"   
     if{parameter "input_jre_sparc" > parameter "downloaded_jre_sparc"}
     	 if {(free space of filesystem of storage folder of client) > 133120985}
			parameter "jre_download_sparc" = "true"
			parameter "space_avail" = "true"
		 else
		 	parameter "space_avail" = "false"
		 endif		
	 else
	 	parameter "jre_download_sparc" = "false"		
	 endif  
   else
   	 if {(free space of filesystem of storage folder of client) > 133120985}	
   	  	parameter "jre_download_sparc" = "true"
   	  	parameter "space_avail" = "true"
   	 else
   	 	parameter "space_avail" = "false"
   	 endif 	
 endif
 
if{parameter "jre_download_sparc" as lowercase is "true"}
   add prefetch item name=sol6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=243294a6fd481b2afeddb5832c79bd90d87a1260 sha256=281261eb9db231109811d1c139ec1c6d6e7119f2b0247068f5a5e7d62b4dd4a9 size=124233721 url={parameter "basepath"}/jre/80535/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif
	
			
if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sunos64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sunos64" = "80535"
      if{parameter "input_jre_sunos64" > parameter "downloaded_jre_sunos64"}
      	if {(free space of filesystem of storage folder of client) > 124324771}
			parameter "jre_download_sunos64" = "true"
			parameter "space_avail" = "true"
		else
			parameter "space_avail" = "false"
		endif	
	 else
	    parameter "jre_download_sunos64" = "false"		
	 endif
  else
  	if {(free space of filesystem of storage folder of client) > 124324771}
  		parameter "jre_download_sunos64" = "true"
  		parameter "space_avail" = "true"
  	else
  		parameter "space_avail" = "false"
  	endif	
 endif
if{parameter "jre_download_sunos64" as lowercase is "true"}
    add prefetch item name=solx6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=0c5f6fa8ecf76750fbe2e50c3ebe57c402ca44e0 sha256=a43620085447b285b5ecfcba97f33ec3d417a39ae3cd8763d0f7e0adbee5eef1 size=115437507 url={parameter "basepath"}/jre/80535/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif


parameter "updateTools" = "{not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}"

	// only download HCLauncher if needed
if {parameter "updateTools" as lowercase is "true"}
add prefetch item name=HCLauncher.jar sha1=9ef17f41e143689602d67abbaf3d9596e5ee709a sha256=102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f size=8887264 url={parameter "basepath"}/410/20190612-2172/HCLauncher/HCLauncher.jar
endif

add prefetch item name=policy.xml sha1=48d0ba90fb2b7742734e34545866d84196d130c2 sha256=40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b size=103817 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/policy.xml

add prefetch item name=Collectors.zip sha1=3f151ed135214a70403a94e8f7d41106dcf25276 sha256=df53b69416b3b0d0f90a92d072de7462a737183be432f0fd226a73d1367e6658 size=1945557 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/Collectors.zip
 


add prefetch item name=cuz.jar sha1=76dd952a93b4bbda50511acff681d6805487baa7 sha256=ce2147227f5822c3e9a4e7909bf4178ea8299de3d6e9c118e813c85e53492caa size=179698 url={parameter "basepath"}/410/20190612-2172/tools/cuz.jar
	
end prefetch block

// If there is no sufficient space to install JRE+HCLauncher exit with error code 100
if {parameter "space_avail" as lowercase is "false"}
exit 100


parameter "build_id" = "20190612-2172"
parameter "version" = "4.0.0"

folder create "{storage folder of client}/__GTS/__UIDEXT"
folder create "{storage folder of client}/__GTS/__IEMHC"

	//extract JRE
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
  if{parameter "jre_download_linux32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-i386.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-i386-80/jre" "{storage folder of client}/__GTS/"
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
  if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64-80/jre" "{storage folder of client}/__GTS/"
	 	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
  if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64le-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
  if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-s390x.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-s390x-80/jre" "{storage folder of client}/__GTS/"
	  	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
  if{parameter "jre_download_linux64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-x86_64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-x86_64-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
  if{parameter "jre_download_aix32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	 
	 

wait gunzip -f "{client folder of current site}/__Download/jre832redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre832redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	 
 	 
 	 	 
	 	 
	  endif 
endif
endif
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}	
 if{parameter "jre_download_aix64" as lowercase is "true"}
	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	
	

wait gunzip -f "{client folder of current site}/__Download/jre864redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre864redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	
		 
		 
	 endif 
endif
endif

 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")} 
  if{parameter "jre_download_hpux32" as lowercase is "true"}
	     	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
 endif
	 
     if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
      if{parameter "jre_download_hpux64" as lowercase is "true"}
	   	 	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
	endif 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")} 
  	 if{parameter "jre_download_sparc" as lowercase is "true"}
		 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


		 folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

		 		 	 endif
  endif	 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
	if{parameter "jre_download_sunos64" as lowercase is "true"}
	    
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	    folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

	    	    	 endif
 endif

  if{not exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	// Last Change
	appendfile {now as string}
	
	// Version
	appendfile {parameter "version"}
	
	// Build ID
	appendfile {parameter "build_id"}
	
	// create the version file
	delete "{storage folder of client}/__GTS/version.txt"
	move __appendfile "{storage folder of client}/__GTS/version.txt"
	
	// append JRE version to end
	if{ windows of operating system}
				appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -version >> "{storage folder of client}\__GTS\version.txt" 2>&1 
		delete launch.bat
		move __appendfile launch.bat
		wait launch.bat
	else
				appendfile #!/bin/sh
		appendfile "{storage folder of client}/__GTS/jre/bin/java" -version >> "{storage folder of client}/__GTS/version.txt" 2>&1
		delete launch.sh
		move __appendfile launch.sh
		wait chmod 750 launch.sh
		wait "{client folder of current site}/launch.sh"
	endif
endif     	    
// clean up the work folder
folder delete "{storage folder of client}/__GTS/Temp"


if {parameter "updateTools" as lowercase is "true"}
// clean and add the HCLauncher.jar
folder delete "{storage folder of client}/__GTS/__IEMHC/HCLauncher"
folder delete "{storage folder of client}/__GTS/HCLauncher_410"
folder create "{storage folder of client}/__GTS/HCLauncher_410"

copy "{client folder of current site}/__Download/HCLauncher.jar" "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar"

//HCLauncher version .txt
if{windows of operating system}
 appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -version >> "{storage folder of client}\__GTS\HCLauncher_410\version.txt" 2>&1 
 delete launch.bat
 move __appendfile launch.bat
 wait launch.bat
else
 appendfile #!/bin/sh
 appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -version >> "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 2>&1
 delete launch.sh
 move __appendfile launch.sh
 wait chmod 750 launch.sh
 wait "{client folder of current site}/launch.sh"
 endif

parameter "HCL_Filename" = "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 
 appendfile {concatenation "%0d%0a" of lines of file (parameter "HCL_Filename") & "%0d%0a" & "Bigfix buildID: " & (parameter "build_id") & "%0d%0a"} 
 move "{parameter "HCL_Filename"}" "{parameter "HCL_Filename"}.bak" 
 move __appendfile "{parameter "HCL_Filename"}" 
 delete "{parameter "HCL_Filename"}.bak" 

endif



//End of Prepare Endpoint

//Start of Install policy


  if {exists setting ("_GCM_CollectorDebugMode") whose (value of it as lowercase = "true") of client|false}
		//do not remove existing Collectors as Debug mode is ON	
  else
				if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml"
		endif
		
				
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		endif
		
		folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		
		//Restore backed up policy files and folders
		if{exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" 
		endif
			
		// unzip the Collectors.zip
		if {windows of operating system} 
			wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\cuz.jar" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" "{client folder of current site}\__Download\Collectors.zip" 	
		else
			wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/cuz.jar" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD" "{client folder of current site}/__Download/Collectors.zip"	
		endif
		
		if {exit code of action != 0}
		  exit {exit code of action}
	    endif
		
    endif

	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	copy "{client folder of current site}/__Download/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"

	
	// create version.txt
	appendfile {now as string}
	appendfile Apache-UNIX-ITSSCSD-4.1
	appendfile {parameter "version"}
	appendfile {parameter "build_id"}
	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	move __appendfile "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	
		// Set the GTS_GCM_Enhanched_Scheduling_<site name> setting to DISABLED if the setting is empty or does not exists AND there is no GTS_<site name>_GCM_Dates setting
	if {( (not exists setting ("GTS_GCM_ENHANCED_SCHEDULING_"&(name of current site)) whose (value of it != "") of client) AND ((not exists values of setting ("GTS_"&(name of current site)&"_GCM_Dates") of client)|True) )}
		setting "GTS_GCM_ENHANCED_SCHEDULING_{name of current site}"="DISABLED" on "{date (local time zone) of now & time (local time zone) of now}" for client
	endif


//End of Install Policy
//Copy Hotfixes if available

if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
	if {exists file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
			copy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	endif

	if {exists matches (regex ".jar$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
		parameter "source_path"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
		parameter "destination_path" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/collectors"

		if {windows of operating system}	
	
			delete __createfile
			createfile until finish
				option Explicit
				Dim fso  
				Set fso = CreateObject("Scripting.FileSystemObject") 
				fso.CopyFile "{parameter "source_path"}\*.jar", "{parameter "destination_path"}"
			finish
	
			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs" 
		else
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path"}" 
			   find -iname '*.jar' -exec cp {{} "{parameter "destination_path"}" \; 
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh" 
		endif
	endif
	
	parameter "source_path1"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
	parameter "destination_path1" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/RemediationScript"
	
	if {windows of operating system AND exists matches (regex ".ps1$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.ps1", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {windows of operating system AND exists matches (regex ".vbs$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.vbs", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {exists matches (regex ".sh$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path1"}" 
			   find -iname '*.sh' -exec cp {{} "{parameter "destination_path1"}" \;
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh"
	endif
endif


parameter "customJVM" = ""
parameter "xdump_check"     = ""

if "{(exists lines of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|false}"
	parameter "customJVM"   = "{(line 1 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
	parameter "xdump_check" = "{(line 2 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
    if {parameter "xdump_check" as lowercase is ""}
        parameter "dump" = "-Xdump:none"
    elseif {parameter "xdump_check" as lowercase is "yes"}
     	parameter "dump" = "-Xdump:none"
    else
       parameter "dump" = ""
    endif
endif



if {exists setting "_GCM_HCLauncher_Report" whose (value of it != "") of client}
	parameter "reportoutput" = "-report"
	else
	parameter "reportoutput" = ""
endif

action parameter query "rule_value" with description "Please input the rule IDs, rule titles or rule names, separated by commas." and with default value ""


if {exists setting "_GCM_HCLauncher_Limit" whose (value of it != "") of client}
	parameter "limitOutput" = "{(it as string as integer | 10000) of value of setting "_GCM_HCLauncher_Limit" of client}"
else
	parameter "limitOutput" = "10000"
endif

if {exists setting "_GCM_HCLauncher_Truncate" whose (value of it != "") of client}
	parameter "truncateOutput" = "{(it as string as integer | 500) of value of setting "_GCM_HCLauncher_Truncate" of client}"
else
	parameter "truncateOutput" = "500"
endif


if {exists setting "_GCM_HCLauncher_Debug" whose (value of it != "") of client}
	parameter "debug" = "-llevel DEBUG"
else
	parameter "debug" = ""
endif

if {exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
	parameter "localpolparm" = "-localpolicy"
else
	parameter "localpolparm" = ""
endif

	if {exists file "policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy_result.xml"
		else
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_result.xml"
		endif
	endif
	
	if {exists folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			folder delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy"
		else
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy"
		endif
	endif

if {windows of operating system}
	appendfile {name of drive of storage folder of client}
	appendfile cd "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" 
	appendfile xcopy "{storage folder of client}\__GTS\__IEMHC\ecm" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\ecm" /s/h/e/k/f/c/i/y
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy.xml" -rule {parameter "rule_value"}   {parameter "localpolparm"} -pparams "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"}
		else
			// launch without external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy.xml" -rule {parameter "rule_value"}   {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"}
		endif
		delete launch.bat
	move __appendfile launch.bat
					
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client is "40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait launch.bat
	if {exit code of action != 0}
	exit {exit code of action}
	endif
else
	appendfile #!/bin/sh
	appendfile cd "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
	appendfile cp -R "{storage folder of client}/__GTS/__IEMHC/ecm" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml" -rule {parameter "rule_value"}   {parameter "localpolparm"} -pparams "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"}
		else
			// launch without external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml" -rule {parameter "rule_value"}   {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"}
		endif
		
	delete launch.sh
	move __appendfile launch.sh
	wait chmod 750 launch.sh
					
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client is "40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait "{client folder of current site}/launch.sh"
	if {exit code of action != 0}
	exit {exit code of action}
	endif
endif

	// ================================================================
// =  ADDED TO WRITE FILE WITH LAST HEALTH CHECK RUN DATE & TIME  =
// ================================================================

// Set this parameter to the name of the fixlet
parameter "GTS_GCM_Current_Fixlet_Name" = "UNIX-Apache-ITSSCSD"

parameter "GTS_GCM_GTS_Folder" = "{pathname of parent folder of parent folder of folder ( pathname of client folder of current site)}/__GTS"
parameter "GTS_GCM_FlagFiles_Folder" = "{parameter "GTS_GCM_GTS_Folder"}/FlagFiles"
parameter "GTS_GCM_IEMHC_Folder" = "{parameter "GTS_GCM_FlagFiles_Folder"}/IEMHC"
parameter "GTS_GCM_LastRunFile" = "GCM_{(name of current site)}_{parameter "GTS_GCM_Current_Fixlet_Name" of action}.txt"
parameter "GTS_GCM_ReadMeFile" = "ReadMe.txt"

// Windows create folder structure (if missing)
if {name of operating system as lowercase starts with "win"}
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		dos mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		dos mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		dos mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

else  // Unix create folder structure (if missing)
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		wait mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		wait mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		wait mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

endif

//====================================================================
// Now the __GTS/FlagFiles/IEMHC folder structure is in place
// Place a ReadMe.txt file explaining about the purpose of this folder
//  and files and how it can be used (if not already present)
if {not exists file (parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile" of action)}
	delete __createfile
	createfile until EOF
		This is a BigFix IEMHC directory that contains 'GCM_<site name>_<fixlet name>.txt' files.
		Each file contains the date and time of the last run of the Health Check fixlet in that site

		If you want BigFix to perform a new Health Check and :
		1. you want to run only specific Health Check(s): delete the file(s) for the that site and fixlet.
		2. you want to run ALL Health Checks: delete the IEMHC directory (or all files in it).

		As soon as the IEMHC(s) is performed successfully the following will be recreated (if needed):
		- the IEMHC directory.
		- this ReadMe file.
		- for each site and fixlet file that was deleted the GCM_<site name>_<fixlet name>.txt file.
	EOF
	move __createfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile"}"

endif


//====================================================================
// Write a file with the name of the site and the fixlet and
// write the current date and time in the file

delete __appendfile
appendfile {date (local time zone) of now & time (local time zone) of now}
delete "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"
move __appendfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"

]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
		<Action ID="Action3">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink><![CDATA[ to deploy action to Prepare, Install and Scan with <b>S-Check Only</b>.]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
		// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
		
begin prefetch block
	if {exists setting "_GCM_Download_BasePath" whose (value of it != "") of client}
		parameter "basepath" = "{value of setting "_GCM_Download_BasePath" of client}"
	else
		parameter "basepath" = "GTSProtocol://download.bigfix.com/download/gtscontent/iemhc"
	endif
	
	if {name of operating system as lowercase contains "sunos" OR name of operating system as lowercase contains "hp-ux"}
	parameter "dump" = ""
    else
	parameter "dump" = "-Xdump:none"
	endif
	
	//Start of Prepare endpoint	
	//determine if JRE upgrade is required
//determine if JRE upgrade is required
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_linux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_linux32" = "80535"
         if{parameter "input_jre_linux32" > parameter "downloaded_jre_linux32"}
         	 if {(free space of filesystem of storage folder of client) > 126845812}
          		parameter "jre_download_linux32" = "true"
          		parameter "space_avail" = "true"
          	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
		     endif	
     	 else
	       parameter "jre_download_linux32" = "false"
	     endif
	 else
	 if {(free space of filesystem of storage folder of client) > 126845812}
	 	 parameter "jre_download_linux32" = "true"
	 	 parameter "space_avail" = "true"
	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
	 endif	
endif     

if{parameter "jre_download_linux32" as lowercase is "true"}
add prefetch item name=ibm-java-jre-8.0-5.35-linux-i386.tgz sha1=a99afe85b2085792080606e856017a734d3164af sha256=d6cf70375c7d12c03cde7d59ee59d6fc7ce38b26e5f250bee0a824455a962ade size=117958548 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-i386.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64" = "80535"
      if{parameter "input_jre_linuxppc64" > parameter "downloaded_jre_linuxppc64"}
      	if {(free space of filesystem of storage folder of client) > 151800541}
            parameter "jre_download_linuxppc64" = "true"
          	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        
        endif  
      else
	      parameter "jre_download_linuxppc64" = "false"
	  endif
 else
 	if {(free space of filesystem of storage folder of client) > 151800541}
    	 parameter "jre_download_linuxppc64" = "true"
    	 parameter "space_avail" = "true"
    else
    	 parameter "space_avail" = "false"
    endif	  
 endif

if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64.tgz sha1=25ae2bd4d021e408f74e89bebcfdb0710e0aabec sha256=809c801d2cb137ad2e13b6439869f51df7809a89705c1adf073cf7c9108fc865 size=142913277 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64.tgz
endif
endif

	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64le" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64le" = "80535"
    
    if{parameter "input_jre_linuxppc64le" > parameter "downloaded_jre_linuxppc64le"}
      	  if {(free space of filesystem of storage folder of client) > 150702299}	
          		parameter "jre_download_linuxppc64le" = "true"
	          	parameter "space_avail" = "true"
          else
    	      	parameter "space_avail" = "false"
          endif
    else
	   	  parameter "jre_download_linuxppc64le" = "false"
	endif
else
	if {(free space of filesystem of storage folder of client) > 150702299}
	 	parameter "jre_download_linuxppc64le" = "true"
	 	parameter "space_avail" = "true"
	else
		parameter "space_avail" = "false"
	endif 	 
 endif

if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64le.tgz sha1=4b75c74c42a86a9cf3a167792624215a327b0d21 sha256=1ef8f202b1e9c1604781e12e7f15f6b267cbe2015cd212c340f7376886515df1 size=141815035 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxs390x" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxs390x" = "80535"
      if{parameter "input_jre_linuxs390x" > parameter "downloaded_jre_linuxs390x"}
      	  if {(free space of filesystem of storage folder of client) > 135812215}	
          		parameter "jre_download_linuxs390x" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif	
      else
	      parameter "jre_download_linuxs390x" = "false"
	  endif
  else
  	 if {(free space of filesystem of storage folder of client) > 135812215}	
     	parameter "jre_download_linuxs390x" = "true"
     	parameter "space_avail" = "true"
     else
     	parameter "space_avail" = "false"
     endif	 
  endif   	    

if{parameter "jre_download_linuxs390x" as lowercase is "true"}
     add prefetch item name=ibm-java-jre-8.0-5.35-linux-s390x.tgz sha1=22f36411ba4e6d693d25dcf303b3326b01217a70 sha256=d530ee617b2f97ab3d83f5ebc8e017b85436db8eb153bdaefd8e57485e3be8cc size=126924951 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-s390x.tgz 	
endif
endif

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linux64" = "80535"
      if{parameter "input_jre_linux64" > parameter "downloaded_jre_linux64"}
      	  if {(free space of filesystem of storage folder of client) > 138182382}	
          		parameter "jre_download_linux64" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif		
      else
	      parameter "jre_download_linux64" = "false"
	  endif
  else
  	if {(free space of filesystem of storage folder of client) > 138182382}	
     	parameter "jre_download_linux64" = "true"
     	parameter "space_avail" = "true"
    else
    	parameter "space_avail" = "false"
    endif
  endif
  	
if{parameter "jre_download_linux64" as lowercase is "true"}
	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-x86_64.tgz sha1=c3013c4534805c07b76b2ec167fc38eb52cd0c70 sha256=af2fe61dc9d62923383405f77d1c31292c13791a0f21019f0365b041ef40c447 size=129295118 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-x86_64.tgz 	
endif
endif

  
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
 if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

	    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	       parameter "downloaded_jre_aix32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	       parameter "input_jre_aix32" = "80535"
	         if{parameter "input_jre_aix32" > parameter "downloaded_jre_aix32"}
	         	if {(free space of filesystem of storage folder of client) > 131978043}
	          		parameter "jre_download_aix32" = "true"
	          		parameter "space_avail" = "true"
	          	else
	          		parameter "space_avail" = "false"
	          	endif	
		     else
		      parameter "jre_download_aix32" = "false"
		     endif
		 else
		  if {(free space of filesystem of storage folder of client) > 131978043}		
		  	parameter "jre_download_aix32" = "true"
		  	parameter "space_avail" = "true"
		  else
		  	parameter "space_avail" = "false"
		  endif	
	   endif 
	   
	   if{parameter "jre_download_aix32" as lowercase is "true"}
		  add prefetch item name=jre832redist.tar.gz sha1=99ee69774f10d4f8affbd9e27232cbd6de7cd763 sha256=c09109c251dd937f72c3450531f954f1012a41e3ed6287520b6c278a5037a63d size=123090779 url={parameter "basepath"}/jre/80535/jre832redist.tar.gz 	
	   endif
  endif
endif
  
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
  if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix64" = "154168475"
        if{parameter "input_jre_aix64" > parameter "downloaded_jre_aix64"}
        	if {(free space of filesystem of storage folder of client) > 131978043}
         		parameter "jre_download_aix64" = "true"
         		parameter "space_avail" = "true"
         	else
         		parameter "space_avail" = "false"
         	endif	
        else
         parameter "jre_download_aix64" = "false" 
       endif    
    else
    	if {(free space of filesystem of storage folder of client) > 131978043}
        	parameter "jre_download_aix64" = "true"
        	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        endif
	endif
    
    if{parameter "jre_download_aix64" as lowercase is "true"}
		add prefetch item name=jre864redist.tar.gz sha1=5949599f0a89fe0d48889f45d64ab18886b7be48 sha256=76e5cece78166168adeb0d040dff3292386f71678417e84040b7b92c52f16e8e size=145281211 url={parameter "basepath"}/jre/154168475/jre864redist.tar.gz 	
    endif
  endif  
endif
  
  
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")}
	 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux32" = "80530"
          if{parameter "input_jre_hpux32" > parameter "downloaded_jre_hpux32"}
          	 if {(free space of filesystem of storage folder of client) > 160449639}
          	 		 parameter "space_avail" = "true"
          	         parameter "jre_download_hpux32" = "true"
	         else
	         		parameter "space_avail" = "false"
	         endif
	     else
	       parameter "jre_download_hpux32" = "false"
	     endif
	 else
	  	 if {(free space of filesystem of storage folder of client) > 160449639}
	     	parameter "jre_download_hpux32" = "true"
	     	parameter "space_avail" = "true"
	     else
	     	parameter "space_avail" = "false"
	     endif	
	endif
if{parameter "jre_download_hpux32" as lowercase is "true"}
	 add prefetch item name=hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z sha1=8797755ad786fa383234324026275e07822a6d3d sha256=a025fd583488322ae4784ea457464ad9bd1d4b38924ae9e475ac5f431c627ed1 size=151562375 url={parameter "basepath"}/jre/80530/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif 
		
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux64" = "80530"
         if{parameter "input_jre_hpux64" > parameter "downloaded_jre_hpux64"}
         	if {(free space of filesystem of storage folder of client) > 229883387}
	        	 parameter "jre_download_hpux64" = "true"
	        	 parameter "space_avail" = "true"
	        else
	        	 parameter "space_avail" = "false"
	        endif 
         else
             parameter "jre_download_hpux64" = "false"
         endif
   else
       if {(free space of filesystem of storage folder of client) > 229883387}
       		parameter "jre_download_hpux64" = "true"
       		parameter "space_avail" = "true"
       else
       		parameter "space_avail" = "false"	
       endif		
  endif
  
if{parameter "jre_download_hpux64" as lowercase is "true"}
	add prefetch item name=hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z sha1=9359ea86466b836f5bdad07515f074aa636e8cc5 sha256=799b5e8a96dad5bd3e68918e30cbf3c407e43312f1d3a12dda7f9caa2f2b3854 size=220996123 url={parameter "basepath"}/jre/80530/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif

	
			
 if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sparc" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sparc" = "80535"   
     if{parameter "input_jre_sparc" > parameter "downloaded_jre_sparc"}
     	 if {(free space of filesystem of storage folder of client) > 133120985}
			parameter "jre_download_sparc" = "true"
			parameter "space_avail" = "true"
		 else
		 	parameter "space_avail" = "false"
		 endif		
	 else
	 	parameter "jre_download_sparc" = "false"		
	 endif  
   else
   	 if {(free space of filesystem of storage folder of client) > 133120985}	
   	  	parameter "jre_download_sparc" = "true"
   	  	parameter "space_avail" = "true"
   	 else
   	 	parameter "space_avail" = "false"
   	 endif 	
 endif
 
if{parameter "jre_download_sparc" as lowercase is "true"}
   add prefetch item name=sol6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=243294a6fd481b2afeddb5832c79bd90d87a1260 sha256=281261eb9db231109811d1c139ec1c6d6e7119f2b0247068f5a5e7d62b4dd4a9 size=124233721 url={parameter "basepath"}/jre/80535/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif
	
			
if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sunos64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sunos64" = "80535"
      if{parameter "input_jre_sunos64" > parameter "downloaded_jre_sunos64"}
      	if {(free space of filesystem of storage folder of client) > 124324771}
			parameter "jre_download_sunos64" = "true"
			parameter "space_avail" = "true"
		else
			parameter "space_avail" = "false"
		endif	
	 else
	    parameter "jre_download_sunos64" = "false"		
	 endif
  else
  	if {(free space of filesystem of storage folder of client) > 124324771}
  		parameter "jre_download_sunos64" = "true"
  		parameter "space_avail" = "true"
  	else
  		parameter "space_avail" = "false"
  	endif	
 endif
if{parameter "jre_download_sunos64" as lowercase is "true"}
    add prefetch item name=solx6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=0c5f6fa8ecf76750fbe2e50c3ebe57c402ca44e0 sha256=a43620085447b285b5ecfcba97f33ec3d417a39ae3cd8763d0f7e0adbee5eef1 size=115437507 url={parameter "basepath"}/jre/80535/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif


parameter "updateTools" = "{not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}"

	// only download HCLauncher if needed
if {parameter "updateTools" as lowercase is "true"}
add prefetch item name=HCLauncher.jar sha1=9ef17f41e143689602d67abbaf3d9596e5ee709a sha256=102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f size=8887264 url={parameter "basepath"}/410/20190612-2172/HCLauncher/HCLauncher.jar
endif

add prefetch item name=policy.xml sha1=48d0ba90fb2b7742734e34545866d84196d130c2 sha256=40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b size=103817 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/policy.xml

add prefetch item name=Collectors.zip sha1=3f151ed135214a70403a94e8f7d41106dcf25276 sha256=df53b69416b3b0d0f90a92d072de7462a737183be432f0fd226a73d1367e6658 size=1945557 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/Collectors.zip
 


add prefetch item name=cuz.jar sha1=76dd952a93b4bbda50511acff681d6805487baa7 sha256=ce2147227f5822c3e9a4e7909bf4178ea8299de3d6e9c118e813c85e53492caa size=179698 url={parameter "basepath"}/410/20190612-2172/tools/cuz.jar
	
end prefetch block

// If there is no sufficient space to install JRE+HCLauncher exit with error code 100
if {parameter "space_avail" as lowercase is "false"}
exit 100


parameter "build_id" = "20190612-2172"
parameter "version" = "4.0.0"

folder create "{storage folder of client}/__GTS/__UIDEXT"
folder create "{storage folder of client}/__GTS/__IEMHC"

	//extract JRE
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
  if{parameter "jre_download_linux32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-i386.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-i386-80/jre" "{storage folder of client}/__GTS/"
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
  if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64-80/jre" "{storage folder of client}/__GTS/"
	 	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
  if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64le-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
  if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-s390x.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-s390x-80/jre" "{storage folder of client}/__GTS/"
	  	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
  if{parameter "jre_download_linux64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-x86_64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-x86_64-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
  if{parameter "jre_download_aix32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	 
	 

wait gunzip -f "{client folder of current site}/__Download/jre832redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre832redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	 
 	 
 	 	 
	 	 
	  endif 
endif
endif
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}	
 if{parameter "jre_download_aix64" as lowercase is "true"}
	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	
	

wait gunzip -f "{client folder of current site}/__Download/jre864redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre864redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	
		 
		 
	 endif 
endif
endif

 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")} 
  if{parameter "jre_download_hpux32" as lowercase is "true"}
	     	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
 endif
	 
     if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
      if{parameter "jre_download_hpux64" as lowercase is "true"}
	   	 	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
	endif 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")} 
  	 if{parameter "jre_download_sparc" as lowercase is "true"}
		 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


		 folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

		 		 	 endif
  endif	 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
	if{parameter "jre_download_sunos64" as lowercase is "true"}
	    
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	    folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

	    	    	 endif
 endif

  if{not exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	// Last Change
	appendfile {now as string}
	
	// Version
	appendfile {parameter "version"}
	
	// Build ID
	appendfile {parameter "build_id"}
	
	// create the version file
	delete "{storage folder of client}/__GTS/version.txt"
	move __appendfile "{storage folder of client}/__GTS/version.txt"
	
	// append JRE version to end
	if{ windows of operating system}
				appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -version >> "{storage folder of client}\__GTS\version.txt" 2>&1 
		delete launch.bat
		move __appendfile launch.bat
		wait launch.bat
	else
				appendfile #!/bin/sh
		appendfile "{storage folder of client}/__GTS/jre/bin/java" -version >> "{storage folder of client}/__GTS/version.txt" 2>&1
		delete launch.sh
		move __appendfile launch.sh
		wait chmod 750 launch.sh
		wait "{client folder of current site}/launch.sh"
	endif
endif     	    
// clean up the work folder
folder delete "{storage folder of client}/__GTS/Temp"


if {parameter "updateTools" as lowercase is "true"}
// clean and add the HCLauncher.jar
folder delete "{storage folder of client}/__GTS/__IEMHC/HCLauncher"
folder delete "{storage folder of client}/__GTS/HCLauncher_410"
folder create "{storage folder of client}/__GTS/HCLauncher_410"

copy "{client folder of current site}/__Download/HCLauncher.jar" "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar"

//HCLauncher version .txt
if{windows of operating system}
 appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -version >> "{storage folder of client}\__GTS\HCLauncher_410\version.txt" 2>&1 
 delete launch.bat
 move __appendfile launch.bat
 wait launch.bat
else
 appendfile #!/bin/sh
 appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -version >> "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 2>&1
 delete launch.sh
 move __appendfile launch.sh
 wait chmod 750 launch.sh
 wait "{client folder of current site}/launch.sh"
 endif

parameter "HCL_Filename" = "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 
 appendfile {concatenation "%0d%0a" of lines of file (parameter "HCL_Filename") & "%0d%0a" & "Bigfix buildID: " & (parameter "build_id") & "%0d%0a"} 
 move "{parameter "HCL_Filename"}" "{parameter "HCL_Filename"}.bak" 
 move __appendfile "{parameter "HCL_Filename"}" 
 delete "{parameter "HCL_Filename"}.bak" 

endif



//End of Prepare Endpoint

//Start of Install policy


  if {exists setting ("_GCM_CollectorDebugMode") whose (value of it as lowercase = "true") of client|false}
		//do not remove existing Collectors as Debug mode is ON	
  else
				if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml"
		endif
		
				
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		endif
		
		folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		
		//Restore backed up policy files and folders
		if{exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" 
		endif
			
		// unzip the Collectors.zip
		if {windows of operating system} 
			wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\cuz.jar" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" "{client folder of current site}\__Download\Collectors.zip" 	
		else
			wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/cuz.jar" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD" "{client folder of current site}/__Download/Collectors.zip"	
		endif
		
		if {exit code of action != 0}
		  exit {exit code of action}
	    endif
		
    endif

	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	copy "{client folder of current site}/__Download/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"

	
	// create version.txt
	appendfile {now as string}
	appendfile Apache-UNIX-ITSSCSD-4.1
	appendfile {parameter "version"}
	appendfile {parameter "build_id"}
	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	move __appendfile "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	
		// Set the GTS_GCM_Enhanched_Scheduling_<site name> setting to DISABLED if the setting is empty or does not exists AND there is no GTS_<site name>_GCM_Dates setting
	if {( (not exists setting ("GTS_GCM_ENHANCED_SCHEDULING_"&(name of current site)) whose (value of it != "") of client) AND ((not exists values of setting ("GTS_"&(name of current site)&"_GCM_Dates") of client)|True) )}
		setting "GTS_GCM_ENHANCED_SCHEDULING_{name of current site}"="DISABLED" on "{date (local time zone) of now & time (local time zone) of now}" for client
	endif


//End of Install Policy
//Copy Hotfixes if available

if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
	if {exists file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
			copy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	endif

	if {exists matches (regex ".jar$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
		parameter "source_path"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
		parameter "destination_path" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/collectors"

		if {windows of operating system}	
	
			delete __createfile
			createfile until finish
				option Explicit
				Dim fso  
				Set fso = CreateObject("Scripting.FileSystemObject") 
				fso.CopyFile "{parameter "source_path"}\*.jar", "{parameter "destination_path"}"
			finish
	
			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs" 
		else
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path"}" 
			   find -iname '*.jar' -exec cp {{} "{parameter "destination_path"}" \; 
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh" 
		endif
	endif
	
	parameter "source_path1"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
	parameter "destination_path1" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/RemediationScript"
	
	if {windows of operating system AND exists matches (regex ".ps1$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.ps1", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {windows of operating system AND exists matches (regex ".vbs$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.vbs", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {exists matches (regex ".sh$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path1"}" 
			   find -iname '*.sh' -exec cp {{} "{parameter "destination_path1"}" \;
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh"
	endif
endif


parameter "customJVM" = ""
parameter "xdump_check"     = ""
if "{(exists lines of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|false}"
	parameter "customJVM"   = "{(line 1 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
	parameter "xdump_check" = "{(line 2 of file "gcm_config.txt" of folder "__GTS" of storage folder of client)|""}"
    if {parameter "xdump_check" as lowercase is ""}
        parameter "dump" = "-Xdump:none"
    elseif {parameter "xdump_check" as lowercase is "yes"}
     	parameter "dump" = "-Xdump:none"
    else
       parameter "dump" = ""
    endif
endif



if {exists setting "_GCM_HCLauncher_Report" whose (value of it != "") of client}
	parameter "reportoutput" = "-report"
	else
	parameter "reportoutput" = ""
endif


if {exists setting "_GCM_HCLauncher_Limit" whose (value of it != "") of client}
	parameter "limitOutput" = "{(it as string as integer | 10000) of value of setting "_GCM_HCLauncher_Limit" of client}"
else
	parameter "limitOutput" = "10000"
endif

if {exists setting "_GCM_HCLauncher_Truncate" whose (value of it != "") of client}
	parameter "truncateOutput" = "{(it as string as integer | 500) of value of setting "_GCM_HCLauncher_Truncate" of client}"
else
	parameter "truncateOutput" = "500"
endif


if {exists setting "_GCM_HCLauncher_Debug" whose (value of it != "") of client}
	parameter "debug" = "-llevel DEBUG"
else
	parameter "debug" = ""
endif

if {exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
	parameter "localpolparm" = "-localpolicy"
else
	parameter "localpolparm" = ""
endif

	if {exists file "policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy_result.xml"
		else
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_result.xml"
		endif
	endif
	
	if {exists folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			folder delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy"
		else
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy"
		endif
	endif

if {windows of operating system}
	appendfile {name of drive of storage folder of client}
	appendfile cd "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" 
	appendfile xcopy "{storage folder of client}\__GTS\__IEMHC\ecm" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\ecm" /s/h/e/k/f/c/i/y
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy.xml" -Scheck   {parameter "localpolparm"} -pparams "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\GCMBigfix_HealthCheck.log"  2>&1
		else
			// launch without external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\policy.xml" -Scheck   {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD\GCMBigfix_HealthCheck.log"  2>&1
		endif
		delete launch.bat
	move __appendfile launch.bat
					
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client is "40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait launch.bat
	if {exit code of action != 0}
	exit {exit code of action}
	endif
else
	appendfile #!/bin/sh
	appendfile cd "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
	appendfile cp -R "{storage folder of client}/__GTS/__IEMHC/ecm" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml" -Scheck   {parameter "localpolparm"} -pparams "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/GCMBigfix_HealthCheck.log" 2>&1
		else
			// launch without external parameters
			appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "customJVM"} {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -policy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml" -Scheck   {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/GCMBigfix_HealthCheck.log" 2>&1
		endif
		
	delete launch.sh
	move __appendfile launch.sh
	wait chmod 750 launch.sh
					
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client is "40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait "{client folder of current site}/launch.sh"
	if {exit code of action != 0}
	exit {exit code of action}
	endif
endif

	// ================================================================
// =  ADDED TO WRITE FILE WITH LAST HEALTH CHECK RUN DATE & TIME  =
// ================================================================

// Set this parameter to the name of the fixlet
parameter "GTS_GCM_Current_Fixlet_Name" = "UNIX-Apache-ITSSCSD"

parameter "GTS_GCM_GTS_Folder" = "{pathname of parent folder of parent folder of folder ( pathname of client folder of current site)}/__GTS"
parameter "GTS_GCM_FlagFiles_Folder" = "{parameter "GTS_GCM_GTS_Folder"}/FlagFiles"
parameter "GTS_GCM_IEMHC_Folder" = "{parameter "GTS_GCM_FlagFiles_Folder"}/IEMHC"
parameter "GTS_GCM_LastRunFile" = "GCM_{(name of current site)}_{parameter "GTS_GCM_Current_Fixlet_Name" of action}.txt"
parameter "GTS_GCM_ReadMeFile" = "ReadMe.txt"

// Windows create folder structure (if missing)
if {name of operating system as lowercase starts with "win"}
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		dos mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		dos mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		dos mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

else  // Unix create folder structure (if missing)
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		wait mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		wait mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		wait mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

endif

//====================================================================
// Now the __GTS/FlagFiles/IEMHC folder structure is in place
// Place a ReadMe.txt file explaining about the purpose of this folder
//  and files and how it can be used (if not already present)
if {not exists file (parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile" of action)}
	delete __createfile
	createfile until EOF
		This is a BigFix IEMHC directory that contains 'GCM_<site name>_<fixlet name>.txt' files.
		Each file contains the date and time of the last run of the Health Check fixlet in that site

		If you want BigFix to perform a new Health Check and :
		1. you want to run only specific Health Check(s): delete the file(s) for the that site and fixlet.
		2. you want to run ALL Health Checks: delete the IEMHC directory (or all files in it).

		As soon as the IEMHC(s) is performed successfully the following will be recreated (if needed):
		- the IEMHC directory.
		- this ReadMe file.
		- for each site and fixlet file that was deleted the GCM_<site name>_<fixlet name>.txt file.
	EOF
	move __createfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile"}"

endif


//====================================================================
// Write a file with the name of the site and the fixlet and
// write the current date and time in the file

delete __appendfile
appendfile {date (local time zone) of now & time (local time zone) of now}
delete "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"
move __appendfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"

	]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
		<Action ID="Action5">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink><![CDATA[ to deploy this action Prepare and Install only <b>(no scan)</b>.]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
		// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
		
begin prefetch block
	if {exists setting "_GCM_Download_BasePath" whose (value of it != "") of client}
		parameter "basepath" = "{value of setting "_GCM_Download_BasePath" of client}"
	else
		parameter "basepath" = "GTSProtocol://download.bigfix.com/download/gtscontent/iemhc"
	endif
	
	if {name of operating system as lowercase contains "sunos" OR name of operating system as lowercase contains "hp-ux"}
	parameter "dump" = ""
    else
	parameter "dump" = "-Xdump:none"
	endif
	
	//Start of Prepare endpoint	
	//determine if JRE upgrade is required
//determine if JRE upgrade is required
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_linux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_linux32" = "80535"
         if{parameter "input_jre_linux32" > parameter "downloaded_jre_linux32"}
         	 if {(free space of filesystem of storage folder of client) > 126845812}
          		parameter "jre_download_linux32" = "true"
          		parameter "space_avail" = "true"
          	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
		     endif	
     	 else
	       parameter "jre_download_linux32" = "false"
	     endif
	 else
	 if {(free space of filesystem of storage folder of client) > 126845812}
	 	 parameter "jre_download_linux32" = "true"
	 	 parameter "space_avail" = "true"
	 else
	        	// no free space to install JRE
		  	    parameter "space_avail" = "false"
	 endif	
endif     

if{parameter "jre_download_linux32" as lowercase is "true"}
add prefetch item name=ibm-java-jre-8.0-5.35-linux-i386.tgz sha1=a99afe85b2085792080606e856017a734d3164af sha256=d6cf70375c7d12c03cde7d59ee59d6fc7ce38b26e5f250bee0a824455a962ade size=117958548 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-i386.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64" = "80535"
      if{parameter "input_jre_linuxppc64" > parameter "downloaded_jre_linuxppc64"}
      	if {(free space of filesystem of storage folder of client) > 151800541}
            parameter "jre_download_linuxppc64" = "true"
          	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        
        endif  
      else
	      parameter "jre_download_linuxppc64" = "false"
	  endif
 else
 	if {(free space of filesystem of storage folder of client) > 151800541}
    	 parameter "jre_download_linuxppc64" = "true"
    	 parameter "space_avail" = "true"
    else
    	 parameter "space_avail" = "false"
    endif	  
 endif

if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64.tgz sha1=25ae2bd4d021e408f74e89bebcfdb0710e0aabec sha256=809c801d2cb137ad2e13b6439869f51df7809a89705c1adf073cf7c9108fc865 size=142913277 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64.tgz
endif
endif

	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64le" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64le" = "80535"
    
    if{parameter "input_jre_linuxppc64le" > parameter "downloaded_jre_linuxppc64le"}
      	  if {(free space of filesystem of storage folder of client) > 150702299}	
          		parameter "jre_download_linuxppc64le" = "true"
	          	parameter "space_avail" = "true"
          else
    	      	parameter "space_avail" = "false"
          endif
    else
	   	  parameter "jre_download_linuxppc64le" = "false"
	endif
else
	if {(free space of filesystem of storage folder of client) > 150702299}
	 	parameter "jre_download_linuxppc64le" = "true"
	 	parameter "space_avail" = "true"
	else
		parameter "space_avail" = "false"
	endif 	 
 endif

if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64le.tgz sha1=4b75c74c42a86a9cf3a167792624215a327b0d21 sha256=1ef8f202b1e9c1604781e12e7f15f6b267cbe2015cd212c340f7376886515df1 size=141815035 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz
endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxs390x" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxs390x" = "80535"
      if{parameter "input_jre_linuxs390x" > parameter "downloaded_jre_linuxs390x"}
      	  if {(free space of filesystem of storage folder of client) > 135812215}	
          		parameter "jre_download_linuxs390x" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif	
      else
	      parameter "jre_download_linuxs390x" = "false"
	  endif
  else
  	 if {(free space of filesystem of storage folder of client) > 135812215}	
     	parameter "jre_download_linuxs390x" = "true"
     	parameter "space_avail" = "true"
     else
     	parameter "space_avail" = "false"
     endif	 
  endif   	    

if{parameter "jre_download_linuxs390x" as lowercase is "true"}
     add prefetch item name=ibm-java-jre-8.0-5.35-linux-s390x.tgz sha1=22f36411ba4e6d693d25dcf303b3326b01217a70 sha256=d530ee617b2f97ab3d83f5ebc8e017b85436db8eb153bdaefd8e57485e3be8cc size=126924951 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-s390x.tgz 	
endif
endif

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linux64" = "80535"
      if{parameter "input_jre_linux64" > parameter "downloaded_jre_linux64"}
      	  if {(free space of filesystem of storage folder of client) > 138182382}	
          		parameter "jre_download_linux64" = "true"
          		parameter "space_avail" = "true"
          else
          		parameter "space_avail" = "false"
          endif		
      else
	      parameter "jre_download_linux64" = "false"
	  endif
  else
  	if {(free space of filesystem of storage folder of client) > 138182382}	
     	parameter "jre_download_linux64" = "true"
     	parameter "space_avail" = "true"
    else
    	parameter "space_avail" = "false"
    endif
  endif
  	
if{parameter "jre_download_linux64" as lowercase is "true"}
	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-x86_64.tgz sha1=c3013c4534805c07b76b2ec167fc38eb52cd0c70 sha256=af2fe61dc9d62923383405f77d1c31292c13791a0f21019f0365b041ef40c447 size=129295118 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-x86_64.tgz 	
endif
endif

  
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
 if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

	    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	       parameter "downloaded_jre_aix32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	       parameter "input_jre_aix32" = "80535"
	         if{parameter "input_jre_aix32" > parameter "downloaded_jre_aix32"}
	         	if {(free space of filesystem of storage folder of client) > 131978043}
	          		parameter "jre_download_aix32" = "true"
	          		parameter "space_avail" = "true"
	          	else
	          		parameter "space_avail" = "false"
	          	endif	
		     else
		      parameter "jre_download_aix32" = "false"
		     endif
		 else
		  if {(free space of filesystem of storage folder of client) > 131978043}		
		  	parameter "jre_download_aix32" = "true"
		  	parameter "space_avail" = "true"
		  else
		  	parameter "space_avail" = "false"
		  endif	
	   endif 
	   
	   if{parameter "jre_download_aix32" as lowercase is "true"}
		  add prefetch item name=jre832redist.tar.gz sha1=99ee69774f10d4f8affbd9e27232cbd6de7cd763 sha256=c09109c251dd937f72c3450531f954f1012a41e3ed6287520b6c278a5037a63d size=123090779 url={parameter "basepath"}/jre/80535/jre832redist.tar.gz 	
	   endif
  endif
endif
  
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
  if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}

    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix64" = "154168475"
        if{parameter "input_jre_aix64" > parameter "downloaded_jre_aix64"}
        	if {(free space of filesystem of storage folder of client) > 131978043}
         		parameter "jre_download_aix64" = "true"
         		parameter "space_avail" = "true"
         	else
         		parameter "space_avail" = "false"
         	endif	
        else
         parameter "jre_download_aix64" = "false" 
       endif    
    else
    	if {(free space of filesystem of storage folder of client) > 131978043}
        	parameter "jre_download_aix64" = "true"
        	parameter "space_avail" = "true"
        else
        	parameter "space_avail" = "false"
        endif
	endif
    
    if{parameter "jre_download_aix64" as lowercase is "true"}
		add prefetch item name=jre864redist.tar.gz sha1=5949599f0a89fe0d48889f45d64ab18886b7be48 sha256=76e5cece78166168adeb0d040dff3292386f71678417e84040b7b92c52f16e8e size=145281211 url={parameter "basepath"}/jre/154168475/jre864redist.tar.gz 	
    endif
  endif  
endif
  
  
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")}
	 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux32" = "80530"
          if{parameter "input_jre_hpux32" > parameter "downloaded_jre_hpux32"}
          	 if {(free space of filesystem of storage folder of client) > 160449639}
          	 		 parameter "space_avail" = "true"
          	         parameter "jre_download_hpux32" = "true"
	         else
	         		parameter "space_avail" = "false"
	         endif
	     else
	       parameter "jre_download_hpux32" = "false"
	     endif
	 else
	  	 if {(free space of filesystem of storage folder of client) > 160449639}
	     	parameter "jre_download_hpux32" = "true"
	     	parameter "space_avail" = "true"
	     else
	     	parameter "space_avail" = "false"
	     endif	
	endif
if{parameter "jre_download_hpux32" as lowercase is "true"}
	 add prefetch item name=hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z sha1=8797755ad786fa383234324026275e07822a6d3d sha256=a025fd583488322ae4784ea457464ad9bd1d4b38924ae9e475ac5f431c627ed1 size=151562375 url={parameter "basepath"}/jre/80530/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif 
		
			
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux64" = "80530"
         if{parameter "input_jre_hpux64" > parameter "downloaded_jre_hpux64"}
         	if {(free space of filesystem of storage folder of client) > 229883387}
	        	 parameter "jre_download_hpux64" = "true"
	        	 parameter "space_avail" = "true"
	        else
	        	 parameter "space_avail" = "false"
	        endif 
         else
             parameter "jre_download_hpux64" = "false"
         endif
   else
       if {(free space of filesystem of storage folder of client) > 229883387}
       		parameter "jre_download_hpux64" = "true"
       		parameter "space_avail" = "true"
       else
       		parameter "space_avail" = "false"	
       endif		
  endif
  
if{parameter "jre_download_hpux64" as lowercase is "true"}
	add prefetch item name=hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z sha1=9359ea86466b836f5bdad07515f074aa636e8cc5 sha256=799b5e8a96dad5bd3e68918e30cbf3c407e43312f1d3a12dda7f9caa2f2b3854 size=220996123 url={parameter "basepath"}/jre/80530/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z 	
endif
endif

	
			
 if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sparc" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sparc" = "80535"   
     if{parameter "input_jre_sparc" > parameter "downloaded_jre_sparc"}
     	 if {(free space of filesystem of storage folder of client) > 133120985}
			parameter "jre_download_sparc" = "true"
			parameter "space_avail" = "true"
		 else
		 	parameter "space_avail" = "false"
		 endif		
	 else
	 	parameter "jre_download_sparc" = "false"		
	 endif  
   else
   	 if {(free space of filesystem of storage folder of client) > 133120985}	
   	  	parameter "jre_download_sparc" = "true"
   	  	parameter "space_avail" = "true"
   	 else
   	 	parameter "space_avail" = "false"
   	 endif 	
 endif
 
if{parameter "jre_download_sparc" as lowercase is "true"}
   add prefetch item name=sol6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=243294a6fd481b2afeddb5832c79bd90d87a1260 sha256=281261eb9db231109811d1c139ec1c6d6e7119f2b0247068f5a5e7d62b4dd4a9 size=124233721 url={parameter "basepath"}/jre/80535/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif
	
			
if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sunos64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sunos64" = "80535"
      if{parameter "input_jre_sunos64" > parameter "downloaded_jre_sunos64"}
      	if {(free space of filesystem of storage folder of client) > 124324771}
			parameter "jre_download_sunos64" = "true"
			parameter "space_avail" = "true"
		else
			parameter "space_avail" = "false"
		endif	
	 else
	    parameter "jre_download_sunos64" = "false"		
	 endif
  else
  	if {(free space of filesystem of storage folder of client) > 124324771}
  		parameter "jre_download_sunos64" = "true"
  		parameter "space_avail" = "true"
  	else
  		parameter "space_avail" = "false"
  	endif	
 endif
if{parameter "jre_download_sunos64" as lowercase is "true"}
    add prefetch item name=solx6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=0c5f6fa8ecf76750fbe2e50c3ebe57c402ca44e0 sha256=a43620085447b285b5ecfcba97f33ec3d417a39ae3cd8763d0f7e0adbee5eef1 size=115437507 url={parameter "basepath"}/jre/80535/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z 	
endif
endif


parameter "updateTools" = "{not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}"

	// only download HCLauncher if needed
if {parameter "updateTools" as lowercase is "true"}
add prefetch item name=HCLauncher.jar sha1=9ef17f41e143689602d67abbaf3d9596e5ee709a sha256=102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f size=8887264 url={parameter "basepath"}/410/20190612-2172/HCLauncher/HCLauncher.jar
endif

add prefetch item name=policy.xml sha1=48d0ba90fb2b7742734e34545866d84196d130c2 sha256=40c4b28153c646d7418d8fbe2b027586b1b8eebc101f10755d1737223928b84b size=103817 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/policy.xml

add prefetch item name=Collectors.zip sha1=3f151ed135214a70403a94e8f7d41106dcf25276 sha256=df53b69416b3b0d0f90a92d072de7462a737183be432f0fd226a73d1367e6658 size=1945557 url={parameter "basepath"}/410/20190612-2172/UNIX/Apache.UNIX.CSD/Collectors.zip
 


add prefetch item name=cuz.jar sha1=76dd952a93b4bbda50511acff681d6805487baa7 sha256=ce2147227f5822c3e9a4e7909bf4178ea8299de3d6e9c118e813c85e53492caa size=179698 url={parameter "basepath"}/410/20190612-2172/tools/cuz.jar
	
end prefetch block

// If there is no sufficient space to install JRE+HCLauncher exit with error code 100
if {parameter "space_avail" as lowercase is "false"}
exit 100


parameter "build_id" = "20190612-2172"
parameter "version" = "4.0.0"

folder create "{storage folder of client}/__GTS/__UIDEXT"
folder create "{storage folder of client}/__GTS/__IEMHC"

	//extract JRE
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
  if{parameter "jre_download_linux32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-i386.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-i386-80/jre" "{storage folder of client}/__GTS/"
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
  if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64-80/jre" "{storage folder of client}/__GTS/"
	 	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
  if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64le-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
  if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-s390x.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-s390x-80/jre" "{storage folder of client}/__GTS/"
	  	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
  if{parameter "jre_download_linux64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-x86_64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-x86_64-80/jre" "{storage folder of client}/__GTS/"
	  	  endif 
endif

if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
  if{parameter "jre_download_aix32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	 
	 

wait gunzip -f "{client folder of current site}/__Download/jre832redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre832redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	 
 	 
 	 	 
	 	 
	  endif 
endif
endif
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}	
 if{parameter "jre_download_aix64" as lowercase is "true"}
	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	
	

wait gunzip -f "{client folder of current site}/__Download/jre864redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre864redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	
		 
		 
	 endif 
endif
endif

 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")} 
  if{parameter "jre_download_hpux32" as lowercase is "true"}
	     	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
 endif
	 
     if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
      if{parameter "jre_download_hpux64" as lowercase is "true"}
	   	 	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
	endif 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")} 
  	 if{parameter "jre_download_sparc" as lowercase is "true"}
		 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


		 folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

		 		 	 endif
  endif	 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
	if{parameter "jre_download_sunos64" as lowercase is "true"}
	    
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	    folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

	    	    	 endif
 endif

  if{not exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	// Last Change
	appendfile {now as string}
	
	// Version
	appendfile {parameter "version"}
	
	// Build ID
	appendfile {parameter "build_id"}
	
	// create the version file
	delete "{storage folder of client}/__GTS/version.txt"
	move __appendfile "{storage folder of client}/__GTS/version.txt"
	
	// append JRE version to end
	if{ windows of operating system}
				appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -version >> "{storage folder of client}\__GTS\version.txt" 2>&1 
		delete launch.bat
		move __appendfile launch.bat
		wait launch.bat
	else
				appendfile #!/bin/sh
		appendfile "{storage folder of client}/__GTS/jre/bin/java" -version >> "{storage folder of client}/__GTS/version.txt" 2>&1
		delete launch.sh
		move __appendfile launch.sh
		wait chmod 750 launch.sh
		wait "{client folder of current site}/launch.sh"
	endif
endif     	    
// clean up the work folder
folder delete "{storage folder of client}/__GTS/Temp"


if {parameter "updateTools" as lowercase is "true"}
// clean and add the HCLauncher.jar
folder delete "{storage folder of client}/__GTS/__IEMHC/HCLauncher"
folder delete "{storage folder of client}/__GTS/HCLauncher_410"
folder create "{storage folder of client}/__GTS/HCLauncher_410"

copy "{client folder of current site}/__Download/HCLauncher.jar" "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar"

//HCLauncher version .txt
if{windows of operating system}
 appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -version >> "{storage folder of client}\__GTS\HCLauncher_410\version.txt" 2>&1 
 delete launch.bat
 move __appendfile launch.bat
 wait launch.bat
else
 appendfile #!/bin/sh
 appendfile "{storage folder of client}/__GTS/jre/bin/java" -jar {parameter "dump"} "{storage folder of client}/__GTS/HCLauncher_410/HCLauncher.jar" -version >> "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 2>&1
 delete launch.sh
 move __appendfile launch.sh
 wait chmod 750 launch.sh
 wait "{client folder of current site}/launch.sh"
 endif

parameter "HCL_Filename" = "{storage folder of client}/__GTS/HCLauncher_410/version.txt" 
 appendfile {concatenation "%0d%0a" of lines of file (parameter "HCL_Filename") & "%0d%0a" & "Bigfix buildID: " & (parameter "build_id") & "%0d%0a"} 
 move "{parameter "HCL_Filename"}" "{parameter "HCL_Filename"}.bak" 
 move __appendfile "{parameter "HCL_Filename"}" 
 delete "{parameter "HCL_Filename"}.bak" 

endif



//End of Prepare Endpoint

//Start of Install policy


  if {exists setting ("_GCM_CollectorDebugMode") whose (value of it as lowercase = "true") of client|false}
		//do not remove existing Collectors as Debug mode is ON	
  else
				if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml"
		endif
		
				
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client}
			folder delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		endif
		
		folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD"
		
		//Restore backed up policy files and folders
		if{exists folder "vault" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/vault" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/vault"
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/policy_parameters.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy_parameters.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/localpolicy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/localpolicy.xml" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "freshness.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/freshness.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/freshness.txt" 
		endif
		
		if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client AND exists file "delay_counter_policy_result.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD_backup") of storage folder of client|false}
			move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD_backup/delay_counter_policy_result.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/delay_counter_policy_result.xml" 
		endif
			
		// unzip the Collectors.zip
		if {windows of operating system} 
			wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\cuz.jar" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\UNIX-Apache-ITSSCSD" "{client folder of current site}\__Download\Collectors.zip" 	
		else
			wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/cuz.jar" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD" "{client folder of current site}/__Download/Collectors.zip"	
		endif
		
		if {exit code of action != 0}
		  exit {exit code of action}
	    endif
		
    endif

	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	copy "{client folder of current site}/__Download/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"

	
	// create version.txt
	appendfile {now as string}
	appendfile Apache-UNIX-ITSSCSD-4.1
	appendfile {parameter "version"}
	appendfile {parameter "build_id"}
	delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	move __appendfile "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/version.txt"
	
		// Set the GTS_GCM_Enhanched_Scheduling_<site name> setting to DISABLED if the setting is empty or does not exists AND there is no GTS_<site name>_GCM_Dates setting
	if {( (not exists setting ("GTS_GCM_ENHANCED_SCHEDULING_"&(name of current site)) whose (value of it != "") of client) AND ((not exists values of setting ("GTS_"&(name of current site)&"_GCM_Dates") of client)|True) )}
		setting "GTS_GCM_ENHANCED_SCHEDULING_{name of current site}"="DISABLED" on "{date (local time zone) of now & time (local time zone) of now}" for client
	endif


//End of Install Policy
//Copy Hotfixes if available

if {exists folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
	if {exists file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
			copy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF/policy.xml" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/policy.xml"
	endif

	if {exists matches (regex ".jar$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
		parameter "source_path"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
		parameter "destination_path" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/collectors"

		if {windows of operating system}	
	
			delete __createfile
			createfile until finish
				option Explicit
				Dim fso  
				Set fso = CreateObject("Scripting.FileSystemObject") 
				fso.CopyFile "{parameter "source_path"}\*.jar", "{parameter "destination_path"}"
			finish
	
			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs" 
		else
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path"}" 
			   find -iname '*.jar' -exec cp {{} "{parameter "destination_path"}" \; 
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh" 
		endif
	endif
	
	parameter "source_path1"      = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/HF"
	parameter "destination_path1" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/UNIX-Apache-ITSSCSD/RemediationScript"
	
	if {windows of operating system AND exists matches (regex ".ps1$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.ps1", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {windows of operating system AND exists matches (regex ".vbs$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile
			createfile until finish
			option Explicit
			Dim fso  
			Set fso = CreateObject("Scripting.FileSystemObject") 
			fso.CopyFile "{parameter "source_path1"}\*.vbs", "{parameter "destination_path1"}"
			finish

			delete "copyHF.vbs" 
			move __createfile "copyHF.vbs" 
			wait cmd.exe /c "copyHF.vbs"
	endif		
			 
	if {exists matches (regex ".sh$") of names of files of folder ("__GTS/__IEMHC/" & name of current site as string & "/HF") of storage folder of client|false}
			delete __createfile 
			createfile until __end 
			   #!/bin/sh 
			   cd "{parameter "source_path1"}" 
			   find -iname '*.sh' -exec cp {{} "{parameter "destination_path1"}" \;
			__end 
	
			delete "/var/opt/BESClient/copyHF.sh" 
			move __createfile "/var/opt/BESClient/copyHF.sh" 
			wait sh -c "chmod 755 /var/opt/BESClient/copyHF.sh" 
			wait sh -c "/var/opt/BESClient/copyHF.sh"
	endif
endif


	]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
	</Task>
</BES>
