<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>UNIX-Apache-ITSSCSD AK.1.7.5 Identify and Authenticate Users/005 Web Server ID privileges</Title>
		<Description><![CDATA[
		<P><B>Test:&nbsp;</B>Web server userid must not have system privileges beyond what the web server requires to run.</P><P><B>ITSSCSD Section:&nbsp;</B>AK.1.7.5</P><P><B>ITSSCSD Version Supported:&nbsp;</B>4.1</P>
		<p><small><b>Version:</b>&nbsp;4.0.0<br><b>Build ID:</b>&nbsp;20190612-2172</small></p><P>----------------------------------------------------------------------------------<BR>Licensed Materials - Property of IBM<BR>(c) Copyright IBM Corp. 2019. All Rights Reserved.</P>
		<script>
	document.body.ontakeaction = function() {

		var b=EvaluateRelevance('name of site of current fixlet'),a=EvaluateRelevance('exists (fixlets of site of current fixlet) whose (name of it = regex "^_Remediation Disable.*")');
		(a=!/^true$/i.test(a))||alert('Remediation is disabled for site '+b);
		if (!a) {
			return a;
		}
														
   		   		var b=EvaluateRelevance(' unique values whose (it contains "ERROR !!! " or it contains "[FATAL]" or it contains "[ERROR]") of (it as string) of (name of computer of it , values of it) of results  of properties whose(name of it = "Health Check") of BES Fixlets whose (analysis flag of it and name of it = "_Status UNIX-Apache-ITSSCSD")');
   		if (b === null || b.length === 0) {
   		 	return true;
    	}
    	
    	for (var i = 0; i < b.length; i++) {
    		b[i]=b[i].substring(0, b[i].indexOf(','));
		}
		b = unique(b);
   
		b = b.toString().replace(/,/g , "\n");
		var r = confirm("There are computers with invalid health check,\n do you want to proceed?\n"+b);
		if (r === true) {
    		x = "OK!";
		} else {
    		x = "Cancel!";
		}
		return r;
	};
	
	function unique(arr) {
    var hash = {}, result = [];
    for ( var i = 0, l = arr.length; i < l; ++i ) {
        if ( !hash.hasOwnProperty(arr[i]) ) {
            hash[ arr[i] ] = true;
            result.push(arr[i]);
        }
    }
    return result;
}
</script>
<?BeginRefreshRelevance?>
	<p><b><?relevance if exists (fixlets of site of current fixlet) whose (name of it = regex "^_Remediation Disable.*") then ("Remediation is disabled for site " & (name of site of current fixlet)) else ""?></b></p>
<?EndRefreshRelevance?>		
		]]></Description>
		<Relevance><![CDATA[
				
		(
			if exists setting "_GCM_UNIX-Apache-ITSSCSD_OSRelevance_Override" whose (value of it != "") of client then (
				true
			)
			else (
				(name of operating system as lowercase contains "red hat" and version of operating system >= "6") or (name of operating system as lowercase contains "suse" and version of operating system >= "11") or (name of operating system as lowercase contains "sunos" and version of operating system >= "5.10") or (name of operating system as lowercase contains "aix" and version of operating system >= "7") or (name of operating system as lowercase contains "hp-ux" and version of operating system as string contains "11.31") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8")
			)
		)
		]]></Relevance>
		<Relevance>
				
		(
			if exists setting "_GCM_UNIX-Apache-ITSSCSD_MWRelevance_Override" whose (value of it != "") of client then (
				true
			)
			else (
				(
					if (name of operating system contains "Linux" or name of operating system as lowercase contains "aix") then (exists package whose (name of it is "httpd") of rpm OR exists process whose (name of it contains "httpd") OR (exists file "/usr/sbin/apachectl") OR (exists file "/opt/IBM/HTTPServer/bin/apachectl")) else (exists process whose (name of it contains "httpd") OR (exists file "/usr/sbin/apachectl") OR (exists file "/opt/IBM/HTTPServer/bin/apachectl"))



				) 
						or (if (exists file "subs.all.sss" of folder "__GTS/SSS" of storage folder of client | False) then
		(exists (lines containing "SUBSYSTEM_TYPE=APA" of file "subs.all.sss" of folder "__GTS/SSS" of storage folder of client) whose (not (it is "" or it contains "SUBSYSTEM_INSTANCE=NO")) | False)
		else False)
	
			)
		)		
		</Relevance>
		<Relevance><![CDATA[(version of client >= "9.2")]]></Relevance>
		<Relevance><![CDATA[
			 (if (exists file "Identify_and_Authenticate_Users_005_Web_Server_ID_privileges.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client | true ) Then (if (exists lines of file "Identify_and_Authenticate_Users_005_Web_Server_ID_privileges.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/UNIX-Apache-ITSSCSD") of storage folder of client | true) then true else false ) else True)
		]]></Relevance>
		<Category>Middleware</Category>
		<Source>GCM</Source>
		<SourceID>4.0.0 - B</SourceID>
		<SourceReleaseDate>2019-06-12</SourceReleaseDate>
		<SourceSeverity>informational</SourceSeverity>
		<MIMEField>
			<Name>x-fixlet-ibm-copyright</Name>
			<Value>Licensed Materials - Property of IBM; (c) Copyright IBM Corp. 2019. All Rights Reserved.</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-author</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-foundation</Name>
			<Value>false</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-origin</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-supported-csd-version</Name>
			<Value>4.1</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value>1133005</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-purpose</Name>
			<Value>scm</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 01 Jul 2019 07:00:32 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
	</Fixlet>
</BES>
