<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Custom Task - Import-export fixlet</Title>
		<Description><![CDATA[&lt;enter a description of the task here&gt; ]]></Description>
		<Relevance><![CDATA[version of client >= "9.0"]]></Relevance>
		<Relevance>(if( name of operating system starts with "Win" ) then platform id of operating system != 3 else true) AND (if exists property "in proxy agent context" then ( not in proxy agent context ) else true ) </Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2019-07-29</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Wed, 31 Jul 2019 17:20:49 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Enter your action script here

if {(exist folder "import" of folder (pathname of client folder of current site))}
	folder delete "import"
endif

folder create "import"

parameter "PythonBin" = "{ unique value of pathnames of ( ( if (windows of operating system) then ( (files it) whose(name of it as lowercase is "python.exe") of (it as string) of values "DisplayIcon" of keys whose(value "DisplayName" of it as string as lowercase starts with "python ") of keys "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" of (x64 registries; x32 registries) ) else NOTHINGS ) ; ( it whose(name of it = "python" OR name of it = "python.exe") of files of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ) ) }"
wait {if (windows of operating system) then "cmd /C " else "bash -c " } "{parameter "PythonBin"} --version  2> import\error.txt"

continue if { size of file ("import\error.txt") = 0 }

delete __createfile
delete export_fixlet.py

createfile until __EOF
import requests
import sys
import os
import getopt

def main(argv):
    server = ''
    port = ''
    sitename =''
    fixletID = ''
    username =''
    password =''
    opts, args = getopt.getopt(argv,"h",["server=","port=","sitename=","fixletID=","username=","password="])
    for opt, arg in opts:
        if opt in ('--server'):
            server = arg
        elif opt in ('--port'):
            port = arg
        elif opt == '--sitename':
            sitename = arg
        elif opt == '--username':
            username = arg
        elif opt == '--fixletID':
            fixletID = arg
        elif opt == '--password':
            password = arg
    
    api="https://"+server+":"+port+"/api/fixlet/"+sitename+"/"+fixletID
    print(api)
    r=requests.get(api, auth=(username, password), verify=False)
    if r.status_code==200:            
            r.encoding = 'utf-8'
            fname=fixletID+".xml"
            if os.path.exists(fname):	    
                os.remove(fname)
            f = open(fname, "x")
            f.write(r.text)
            f.close()

if __name__ == "__main__":
    main(sys.argv[1:])
__EOF
move __createfile export_fixlet.py

wait {if (windows of operating system) then "cmd /C " else "bash -c " } "{parameter "PythonBin"} export_fixlet.py --server 10.53.19.248 --port 52311 --sitename custom/new6 --fixletID 4812 --username administrator --password Welcome2ibm 2>> import\error.txt]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
