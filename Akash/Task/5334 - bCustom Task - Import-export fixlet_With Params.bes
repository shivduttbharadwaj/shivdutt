<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Custom Task - Import-export fixlet_With Params</Title>
		<Description><![CDATA[<P><STRONG><FONT size=3>Action&nbsp;Parameters:</FONT></STRONG></P>
<P>&nbsp;<INPUT onfocus="if (this.value == '10.10.10.10') {this.value = '';}" onblur="if (this.value == '') {this.value = '10.10.10.10';}" id=RemoteIEM title="Enter IP Address or Hostname" value=10.10.10.10 name=RemoteIEM>&nbsp;<FONT color=#0080ff><STRONG>&lt;&lt;</STRONG></FONT> &nbsp;Enter the&nbsp;<U>Exporting</U> IEM Server IP Address or Hostname<BR>&nbsp;<INPUT onfocus="if (this.value == '52311') {this.value = '';}" onblur="if (this.value == '') {this.value = '52311';}" id=RemoteIEMPort title="Enter the IEM communication port" value=52311 name=RemoteIEMPort>&nbsp;<FONT color=#0080ff><STRONG>&lt;&lt;</STRONG></FONT>&nbsp; Enter the&nbsp;<U>Exporting/Importing</U> IEM Server Communication Port<BR>&nbsp;<INPUT onfocus="if (this.value == 'OP Name') {this.value = '';}" onblur="if (this.value == '') {this.value = 'OP Name';}" id=RemoteOP title="Enter the Exporting IEM Server Operator Name" value="OP Name" name=RemoteOP>&nbsp;<FONT color=#0080ff><STRONG>&lt;&lt;&nbsp;</STRONG></FONT> Enter the <U>Exporting</U> IEM Server Operator Name (<STRONG><FONT color=#ff0000>Note:</FONT></STRONG> This account must have <STRONG><EM>READ</EM></STRONG> access on the export site)<BR>&nbsp;<INPUT id=RemoteOPPass title="Enter the Exporting IEM Server Operator Password" type=password name=RemoteOPPass>&nbsp;&nbsp; <FONT color=#0080ff><STRONG>&lt;&lt;</STRONG></FONT>&nbsp; Enter the <U>Exporting</U> IEM Server Operator Password (<FONT color=#ff0000><STRONG>Note:</STRONG></FONT> This password will be <STRONG><EM>encrypted</EM></STRONG>)<BR>&nbsp;<INPUT onfocus="if (this.value == 'custom/<site>') {this.value = '';}" onblur="if (this.value == '') {this.value = 'custom/<site>';}" id=RemoteSite title="Enter the Exporting IEM Server Site" value="custom/<site>" name=RemoteSite>&nbsp;<FONT color=#0080ff><STRONG>&lt;&lt;</STRONG></FONT>&nbsp; Enter the <U>Exporting</U> IEM Server Site<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; (<FONT color=#ff0000><STRONG>Note:</STRONG></FONT> For the Master Action Site type: <EM><STRONG>master</STRONG> -<STRONG> </STRONG></EM>&nbsp;For Custom Sites use: <EM><STRONG>custom/<SITE> </STRONG>-<STRONG> </STRONG></EM>&nbsp; For External Sites use: <STRONG><EM>external/<SITE></EM></STRONG>)<BR>&nbsp;<INPUT onfocus="if (this.value == '6674') {this.value = '';}" onblur="if (this.value == '') {this.value = '6674';}" id=RemoteFixletID title="Enter the Exporting IEM Server Fixlet ID" value=6674 name=RemoteFixletID>&nbsp;<STRONG><FONT color=#0080ff>&lt;&lt;</FONT></STRONG>&nbsp; Enter the&nbsp;<U>Exporting</U> IEM Server Fixlet ID (Fixlet, Task, Analyses or Group ID) (<STRONG><FONT color=#ff0000>Note:</FONT></STRONG> for Groups, remove the '##-' prefix from the ID)<BR>&nbsp;<INPUT onfocus="if (this.value == 'custom/<site>') {this.value = '';}" onblur="if (this.value == '') {this.value = 'custom/<site>';}" id=LocalSite title="Enter the Importing IEM Server Site" value="custom/<site>" name=LocalSite>&nbsp;<STRONG><FONT color=#0080ff>&lt;&lt;</FONT></STRONG>&nbsp; Enter the <U>Importing</U> IEM Server Site<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;(<STRONG><FONT color=#ff0000>Note:</FONT></STRONG> For the Master Action Site type: <EM><STRONG>master</STRONG> -<STRONG> </STRONG></EM>&nbsp;For Custom Sites use: <EM><STRONG>custom/<SITE> </STRONG>-<STRONG> </STRONG></EM>&nbsp; For External Sites use: <STRONG><EM>external/<SITE></EM></STRONG>)<BR>&nbsp;<INPUT onfocus="if (this.value == 'OP Name') {this.value = '';}" onblur="if (this.value == '') {this.value = 'OP Name';}" id=LocalOP title="Enter the Importing IEM Server Operator Name" value="OP Name" name=LocalOP>&nbsp;<FONT color=#0080ff><STRONG>&lt;&lt;&nbsp;</STRONG><FONT color=#000000> Enter the&nbsp;<U>Importing</U> IEM Server Operator Name (</FONT><FONT color=#ff0000><STRONG>Note:</STRONG></FONT><FONT color=#000000> This account must have&nbsp;<EM><STRONG>WRITE</STRONG></EM> access on the import site)</FONT><BR></FONT>&nbsp;<INPUT id=LocalOPPass title="Enter the Importing IEM Server Operator Password" type=password name=LocalOPPass>&nbsp;&nbsp; <STRONG><FONT color=#0080ff>&lt;&lt;</FONT></STRONG>&nbsp; Enter the&nbsp;<U>Importing</U> IEM Server Operator Password (<FONT color=#ff0000><STRONG>Note:</STRONG></FONT> This password will be <STRONG><EM>encrypted</EM></STRONG>)<BR>&nbsp;<INPUT onfocus="if (this.value == 'no') {this.value = '';}" onblur="if (this.value == '') {this.value = 'no';}" id=ImportPkg title="Enter yes or no" value=no name=ImportPkg>&nbsp;<STRONG><FONT color=#0080ff>&lt;&lt;</FONT></STRONG> Import Pre-Cached Packages?<BR><script>
			document.body.ontakeaction = function() {
				var theRemoteIEM = document.getElementById( "RemoteIEM" ).value;
				var theRemoteIEMPort = document.getElementById( "RemoteIEMPort" ).value;
				var theRemoteOP = document.getElementById( "RemoteOP" ).value;
				var theRemoteOPPass = document.getElementById( "RemoteOPPass" ).value;
				var theRemoteSite = document.getElementById( "RemoteSite" ).value;
				var theRemoteFixletID = document.getElementById( "RemoteFixletID" ).value;
				var theLocalSite = document.getElementById( "LocalSite" ).value;
				var theLocalOP = document.getElementById( "LocalOP" ).value;
				var theLocalOPPass = document.getElementById( "LocalOPPass" ).value;
				var theImportPkg = document.getElementById( "ImportPkg" ).value;
				TakeSecureFixletAction( Relevance('id of current fixlet'), Relevance('id of current bes site'), "Action1", {}, { RemoteIEM: theRemoteIEM , RemoteIEMPort: theRemoteIEMPort , RemoteOP: theRemoteOP , RemoteOPPass: theRemoteOPPass , RemoteSite: theRemoteSite , RemoteFixletID: theRemoteFixletID , LocalSite: theLocalSite , LocalOP: theLocalOP , LocalOPPass: theLocalOPPass , ImportPkg: theImportPkg } );
				return false;
			}
			</script><BR><STRONG>_____________________________________________________________________________________________________</STRONG> </P>
<P><STRONG>Description:</STRONG></P>
<UL>
<LI>This Task will export a single&nbsp;Fixlet, Task, Baseline, Group&nbsp;or Analyses from a remote IEM Server&nbsp;and import it. 
<UL>
<LI>&nbsp;The&nbsp;action must be deployed on the Importing IEM Server&nbsp; <BR></LI></UL>
<LI>Fixlets and Tasks with packages that are pre-cached&nbsp;will also be downloaded and placed in the same directory structure as the Remote IEM Server (You must type 'yes' in the 'Import Pre-cached Packages' field&nbsp;to enable this option) 
<UL>
<LI>If more than 10 pre-cached packages are required, you will need to expand the tuple range in the action script 
<LI>This will work on Software Distribution Tasks utilizing SWDProtocol as well as task utilizing DOWNLOAD and PREFETCH commands. 
<LI>This will NOT import packages into the SWD Manage Software Distribution Dashboard 
<UL>
<LI>Imported SWD Tasks will be available in the&nbsp;Software Package Distribution Tasks<BR></LI></UL></LI></UL>
<LI>Download URL's for pre-cached packages that are not pointing to either 127.0.0.1 or localhost will be modified to point to 127.0.0.1<BR>
<LI>The logs <EM>import.txt</EM>, <EM>import_err.txt</EM> and <EM>export_err.txt</EM> located in <EM>C:\Import</EM> can be used for troubleshooting</LI></UL>
<P><STRONG>Use Case:<BR></STRONG>Can be used to propagate IEM content between different systems (eg: Development &gt; QA &gt; Production)</P>
<P><STRONG>Prerequisites:<BR></STRONG>Importing and Exporting IEM server must be version 9.x (This utilizes the REST API)<BR><BR>Importing IEM Server&nbsp;must have <A href="http://gnuwin32.sourceforge.net/packages/wget.htm">Wget for Windows</A>&nbsp;installed (default location: %ProgramFiles(x86)%\GnuWin32)<BR>(This is required as the REST API does not currently support exporting and the Action Script Download commands do not support HTTPS)<BR><BR>Importing IEM Sever must have directory C:\Imports (will be created if it does not exist)</P>
<P>Importing IEM Server must have Operator account with write permission on the site importing to.</P>
<P>Exporting IEM Server must have normal operator account with read permissions on site exporting from.<BR>(It may be best to create an 'EXPORT' operator account with read permission for all sites but manages no endpoints.)</P>
<P>&nbsp;</P>]]></Description>
		<Relevance><![CDATA[version of client >= "9.0"]]></Relevance>
		<Relevance>(if( name of operating system starts with "Win" ) then platform id of operating system != 3 else true) AND (if exists property "in proxy agent context" then ( not in proxy agent context ) else true ) </Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2019-07-29</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Thu, 01 Aug 2019 08:17:37 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Enter your action script here

if {(exist folder "import" of folder (pathname of client folder of current site))}
	folder delete "import"
endif

folder create "import"

parameter "PythonBin" = "{ unique value of pathnames of ( ( if (windows of operating system) then ( (files it) whose(name of it as lowercase is "python.exe") of (it as string) of values "DisplayIcon" of keys whose(value "DisplayName" of it as string as lowercase starts with "python ") of keys "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" of (x64 registries; x32 registries) ) else NOTHINGS ) ; ( it whose(name of it = "python" OR name of it = "python.exe") of files of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ) ) }"
wait {if (windows of operating system) then "cmd /C " else "bash -c " } "{parameter "PythonBin"} --version  2> import\error.txt"

continue if { size of file ("import\error.txt") = 0 }

delete __createfile
delete import\export_fixlet.py

createfile until __EOF
import requests
import sys
import os
import getopt

def main(argv):
    action = ''
    server = ''
    port = ''
    sitename =''
    fixletID = ''
    username =''
    password =''
    fname=''
    opts, args = getopt.getopt(argv,"h",["action=","server=","port=","sitename=","fixletID=","username=","password=","fname="])
    for opt, arg in opts:
        if opt in ('--action'):
            action = arg
        elif opt in ('--server'):
            server = arg
        elif opt in ('--port'):
            port = arg
        elif opt == '--sitename':
            sitename = arg
        elif opt == '--username':
            username = arg
        elif opt == '--fixletID':
            fixletID = arg
        elif opt == '--password':
            password = arg
        elif opt == '--fname':
            fname = arg
    
    if action == 'export':
        export_fixet(server,port,sitename,fixletID,username,password)        
        
    elif action == 'import':
        import_fixet(server,port,sitename,fname,username,password)

def export_fixet(server,port,sitename,fixletID,username,password):
    api="https://"+server+":"+port+"/api/fixlet/"+sitename+"/"+fixletID
    print(api)
    r=requests.get(api, auth=(username, password), verify=False)
    if r.status_code==200:            
        r.encoding = 'utf-8'
        fname=fixletID+".xml"
        print(fname)
        if os.path.exists(fname):	    
            os.remove(fname)
        f = open(fname, "x")
        f.write(r.text)
        f.close()

def import_fixet(server,port,sitename,fname,username,password):
    api="https://"+server+":"+port+"/api/fixlets/"+sitename
    print(api)
    print(fname)
    with open(fname,'rb') as f:
        r = requests.post(api, auth=(username,password), data=f, verify=False)
    fstatus = "status.txt"
    if os.path.exists(fstatus):	    
        os.remove(fstatus)
    f = open(fstatus, "x")
    f.write("Status: "+str(r.status_code))
    f.close()    
            
if __name__ == "__main__":
    main(sys.argv[1:])
__EOF
move __createfile import\export_fixlet.py

wait {if (windows of operating system) then "cmd /C " else "bash -c " } "{parameter "PythonBin"} import\export_fixlet.py --server {parameter "RemoteIEM" of action} --port {parameter "RemoteIEMPort" of action} --sitename {parameter "RemoteSite" of action} --fixletID {parameter "RemoteFixletID" of action} --username {parameter "RemoteOP" of action} --password {parameter "RemoteOPPass" of action} --action export 2>> import\error.txt
continue if {size of file ((parameter "RemoteFixletID" of action) & ".xml") > 0}

move {((parameter "RemoteFixletID" of action) & ".xml")} import\{((parameter "RemoteFixletID" of action) & ".xml")}

wait {if (windows of operating system) then "cmd /C " else "bash -c " } "{parameter "PythonBin"} import\export_fixlet.py --server {parameter "RemoteIEM" of action} --port {parameter "RemoteIEMPort" of action} --sitename {parameter "LocalSite" of action} --username {parameter "LocalOP" of action} --password {parameter "LocalOPPass" of action} --action import --fname import\{parameter "RemoteFixletID" of action}.xml 2>> import\import.txt
continue if {exists file "status.txt" whose (exists (line of it) whose (it contains "Status: 200"))}]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
