<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Windows2012-ITSSCSD-FOUNDATION ED.1.2.5 Logging/Audit Logon Events</Title>
		<Description><![CDATA[
		<P><B>Test:&nbsp;</B>Windows Logon Events auditing must be enabled for Success and Failure</P><P><B>ITSSCSD Section:&nbsp;</B>ED.1.2.5, ED.1.2.6, ED.1.2.7, ED.1.2.8, ED.1.2.9, ED.1.2.10, ED.1.2.11, ED.1.2.12, ED.1.2.13, ED.1.2.14</P><P><B>ITSSCSD Version Supported:&nbsp;</B>4.0C</P><P><b>Remediation:</b>&nbsp;Included. You must run the health check at least once before running the remediation action.</P><P><b>Remediation Details:</b>&nbsp;Windows Logon Events auditing will be enabled for Success and Failure Also, Trying to execute this Fixlet on system activated with DC-GPO will throw an exit code 999.</P>
		<p><small><b>Version:</b>&nbsp;4.1.0<br><b>Build ID:</b>&nbsp;20190611-2171</small></p><P>----------------------------------------------------------------------------------<BR>Licensed Materials - Property of IBM<BR>(c) Copyright IBM Corp. 2019. All Rights Reserved.</P>
		<script>
	document.body.ontakeaction = function() {

		var b=EvaluateRelevance('name of site of current fixlet'),a=EvaluateRelevance('exists (fixlets of site of current fixlet) whose (name of it = regex "^_Remediation Disable.*")');
		(a=!/^true$/i.test(a))||alert('Remediation is disabled for site '+b);
		if (!a) {
			return a;
		}
														
   		   		var b=EvaluateRelevance(' unique values whose (it contains "ERROR !!! " or it contains "[FATAL]" or it contains "[ERROR]") of (it as string) of (name of computer of it , values of it) of results  of properties whose(name of it = "Health Check") of BES Fixlets whose (analysis flag of it and name of it = "_Status Windows2012-ITSSCSD")');
   		if (b === null || b.length === 0) {
   		 	return true;
    	}
    	
    	for (var i = 0; i < b.length; i++) {
    		b[i]=b[i].substring(0, b[i].indexOf(','));
		}
		b = unique(b);
   
		b = b.toString().replace(/,/g , "\n");
		var r = confirm("There are computers with invalid health check,\n do you want to proceed?\n"+b);
		if (r === true) {
    		x = "OK!";
		} else {
    		x = "Cancel!";
		}
		return r;
	};
	
	function unique(arr) {
    var hash = {}, result = [];
    for ( var i = 0, l = arr.length; i < l; ++i ) {
        if ( !hash.hasOwnProperty(arr[i]) ) {
            hash[ arr[i] ] = true;
            result.push(arr[i]);
        }
    }
    return result;
}
</script>
<?BeginRefreshRelevance?>
	<p><b><?relevance if exists (fixlets of site of current fixlet) whose (name of it = regex "^_Remediation Disable.*") then ("Remediation is disabled for site " & (name of site of current fixlet)) else ""?></b></p>
<?EndRefreshRelevance?>		
		]]></Description>
		<Relevance>
				
		(
			if exists setting "_GCM_Windows2012-ITSSCSD_OSRelevance_Override" whose (value of it != "") of client then (
				true
			)
			else (
				name of operating system as lowercase contains "win2012"
			)
		)
		</Relevance>
		<Relevance><![CDATA[(version of client >= "9.2")]]></Relevance>
		<Relevance><![CDATA[
			 (if (exists file "Logging_Audit_Logon_Events.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client | true ) Then (if (exists lines of file "Logging_Audit_Logon_Events.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client | true) then true else false ) else True)
		]]></Relevance>
		<Category>Operating System</Category>
		<Source>GCM</Source>
		<SourceID>4.1.0 - S</SourceID>
		<SourceReleaseDate>2019-06-11</SourceReleaseDate>
		<SourceSeverity>normal</SourceSeverity>
		<MIMEField>
			<Name>x-fixlet-ibm-copyright</Name>
			<Value>Licensed Materials - Property of IBM; (c) Copyright IBM Corp. 2019. All Rights Reserved.</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-id</Name>
			<Value>441463AD-C514-B0A4-E4C0-45A6F3B35888</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-foundation</Name>
			<Value>true</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-author</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-metadata</Name>
			<Value>            {    "fusion_supported_platforms" : "Windows Server 2012",    "description" : "Windows Logon Events auditing must be enabled for Success and Failure",          "fusion_isec_section": "ED.1.2.5, ED.1.2.6, ED.1.2.7, ED.1.2.8, ED.1.2.9, ED.1.2.10, ED.1.2.11, ED.1.2.12, ED.1.2.13, ED.1.2.14",    "fusion_itcs104_section": "",    "scm_parameters" : {     "Result" : {      "type" : "string",      "measured_value_analysis_property" : 1,      "allow_long_string" : true,           "hidden" : true,      "allow_empty_string" : true,      "measured_value_analysis_idref" : "D824B5EC-0A04-C4AA-2CFD-6DBE57A57418",      "order" : 1,      "title" : "Result"     },     "Expected" : {      "type" : "string",      "measured_value_analysis_property" : 2,      "allow_long_string" : true,      "default_value" : "Windows Logon Events auditing must be enabled for Success and Failure",      "allow_empty_string" : true,      "measured_value_analysis_idref" : "D824B5EC-0A04-C4AA-2CFD-6DBE57A57418",      "order" : 2,      "title" : "Expected"     }    },    "title" : "ED.1.2.5 Logging\/Audit Logon Events"   }          </Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-origin</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value>1123015</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-supported-csd-version</Name>
			<Value>4.0C</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-purpose</Name>
			<Value>scm</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-sentinel-idref</Name>
			<Value>37F44975-63CB-48B9-3509-40117AC97CCE</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Wed, 12 Jun 2019 09:11:41 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to remediate applicable endpoints.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
 			// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
 		    


parameter "gpo" = "{if exists file "Logging_Audit_Logon_Events-GPO-Info.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client then if exists lines of file "Logging_Audit_Logon_Events-GPO-Info.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client then lines of file "Logging_Audit_Logon_Events-GPO-Info.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client else "NA" else "NA"}"

// If the rule is under GPO Control DO NOT REMEDIATE it.
if {parameter "gpo" != "NA" }
	exit 999
endif

	parameter "xdump" = "-Xdump:none"

if {exists setting "_GCM_HCLauncher_Debug" whose (value of it != "") of client}
	parameter "debug" = "-llevel DEBUG"
else
	parameter "debug" = ""
endif

if {exists file "localpolicy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client}
	parameter "localpolparm" = "-localpolicy"
else
	parameter "localpolparm" = ""
endif


	appendfile {name of drive of storage folder of client}
	appendfile cd "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD" 
	if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client}
		// launch with external parameters
		appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "xdump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -remedy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy.xml" -pparams "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy_parameters.txt" -rule Audit_Logon_Events {parameter "localpolparm"} {parameter "debug"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\GCMBigfix_Remediation.log"  2>&1
	else
		// launch without external parameters
		appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "xdump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -remedy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy.xml" -rule Audit_Logon_Events {parameter "localpolparm"} {parameter "debug"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\GCMBigfix_Remediation.log"  2>&1
	endif
	delete launch.bat
	move __appendfile launch.bat
																															
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "7fb2b92b95314b6028672440e426b5091c1afc17eb00231292cf3bba36162bf6") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false) OR not ((sha2_256 of file "RemediationScript/acl-registry-prepare.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "227cee19ca6a86381461c1f4f3d1c4114feb50aa3ea1c0c65a2b3c5e8b531101") | false) OR not ((sha2_256 of file "RemediationScript/acl-settings-registry.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "3c892243c535fafeeeb350519c86613a6b5b5cfdadd86f88dbbbd8c7654934d0") | false) OR not ((sha2_256 of file "RemediationScript/acl-settings.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "e8012dbdb854062c96af35b5f44ff5cef5fcc8127caa3af240e060a6bdb93849") | false) OR not ((sha2_256 of file "RemediationScript/acl_file_no_general_user_access.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "73ca2012ab3546efbddc448bab99155ef0b0d8bbbf65446feb1413a0e7794149") | false) OR not ((sha2_256 of file "RemediationScript/acl_set_reg_file_dir.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "86a6112d41c69fe62a997269bd8b05a755f2faa69faf467f5b16351f45ec9cc4") | false) OR not ((sha2_256 of file "RemediationScript/file_dir_restrictions.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "aaf9ab2ece1da90947729a19f35803939e42a9e98f8c207f914cf38d464453fb") | false) OR not ((sha2_256 of file "RemediationScript/Get-ScheduledTask.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "ecce0ef6a083fc4f01703c347fb9ac1843e7da8852e2b2778bd7854f22459634") | false) OR not ((sha2_256 of file "RemediationScript/gpresult.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "708da205e8359c39f7b084296ce29f8f101330e6c6c354d1adb991edd00541b5") | false) OR not ((sha2_256 of file "RemediationScript/log_checker.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "894245583fd3c3b7cd42ce849abe954010601fe0b5745f51756c1259f61f044a") | false) OR not ((sha2_256 of file "RemediationScript/osr_audit.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "816b6cc08a5cc87fdaaf54fde42a198a33b512e28e8ae22152e7ad512df7251d") | false) OR not ((sha2_256 of file "RemediationScript/osr_audit_v2.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "e0d8cadd6341ac5431578d597e81ac3b823985b23450decaf1f7fd0a1d13ee2d") | false) OR not ((sha2_256 of file "RemediationScript/osr_audit_v3.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "c40358a3baf177285571ec385d8883a64b87484f5b91fba84838493ed46f6f8e") | false) OR not ((sha2_256 of file "RemediationScript/osr_systemroot_restriction.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "5c3b7a912fb66bdf1b4fb0767f0a30ee59f4ade72a4beb2215d4ed42c2a3e655") | false) OR not ((sha2_256 of file "RemediationScript/passwdcomplexity.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "ae3f8973f96c0e990154b4feac3864cbffa058f40d663310a5106eef51d0f07d") | false) OR not ((sha2_256 of file "RemediationScript/passwdencrypt.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "516fb4379eb6af26bc5be575738d2b607979145b286edd3846bbb5638556434f") | false) OR not ((sha2_256 of file "RemediationScript/set-Owner.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "cc9138aa07b5f79c2357afa0d9d1a21c8deb11e9c33dae966bba0e14e9bae722") | false) OR not ((sha2_256 of file "RemediationScript/Set-TokenPrivilege.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "eab102356b748d7dabc721fa3ece75864207024cdd59d700ae061826010fcce5") | false) OR not ((sha2_256 of file "RemediationScript/Set-TokenPrivilege_v2.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "874a77c01e2d4211d173e8e9a74548f77b784b391911fddb01bda33b64e741a9") | false) OR not ((sha2_256 of file "RemediationScript/sharefolderrestriction.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "44068f7c97d906ee64348759e39ad8b289382b28150cfa85f7953acf1a672ee6") | false) OR not ((sha2_256 of file "RemediationScript/task-scheduler-v2.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "0a130b01705d4bb74d3861fb7678120dc18ebcbeecc28353b5cd694f8185047c") | false) OR not ((sha2_256 of file "RemediationScript/task-scheduler-v2008.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "2d5cc485298f1c7b86f8bca4877dd78456940d86833d4cbc730deeee39b27b0a") | false) OR not ((sha2_256 of file "RemediationScript/task-scheduler.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "8bf4f10eae31a7642406b4435431610ddd708993e8c77039fab23915f4119f3b") | false) OR not ((sha2_256 of file "RemediationScript/unclassified.ps1" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "a9649f9690db90fe8e2b10a7c5dfe65e23b76a6a0ec54f54a7f692128124d146") | false) OR not ((sha2_256 of file "RemediationScript/Windows_Remediation_itsscsd.vbs" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "2387292bc482f29644bb08090e434dd69e663871c3baecc5bb9a5c8b308ad490") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait launch.bat
		
	if {exit code of action != 0}
	exit {exit code of action}
	endif
	
if {exists file "Logging_Audit_Logon_Events_backup.result" of folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client}
	if {windows of operating system}
		delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy\Logging_Audit_Logon_Events_backup.result"
	else
		delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Windows2012-ITSSCSD/policy/Logging_Audit_Logon_Events_backup.result"
	endif
endif


if {windows of operating system}
	copy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy\Logging_Audit_Logon_Events.result" "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy\Logging_Audit_Logon_Events_backup.result"
else
	copy "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Windows2012-ITSSCSD/policy/Logging_Audit_Logon_Events.result" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Windows2012-ITSSCSD/policy/Logging_Audit_Logon_Events_backup.result"
endif

// Re-run the health check after remediation

if {exists setting "_GCM_HCLauncher_Report" whose (value of it != "") of client}
	parameter "reportoutput" = "-report"
	else
	parameter "reportoutput" = ""
endif

if {name of operating system as lowercase contains "sunos" OR name of operating system as lowercase contains "hp-ux"}
	parameter "dump" = ""
else
	parameter "dump" = "-Xdump:none"
endif


if {exists setting "_GCM_HCLauncher_Limit" whose (value of it != "") of client}
	parameter "limitOutput" = "{(it as string as integer | 10000) of value of setting "_GCM_HCLauncher_Limit" of client}"
else
	parameter "limitOutput" = "10000"
endif

if {exists setting "_GCM_HCLauncher_Truncate" whose (value of it != "") of client}
	parameter "truncateOutput" = "{(it as string as integer | 500) of value of setting "_GCM_HCLauncher_Truncate" of client}"
else
	parameter "truncateOutput" = "500"
endif



				
				
			if {exists folder "policy" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client}
		if {windows of operating system}
			delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy\Logging_Audit_Logon_Events.rule"
			delete "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy\Logging_Audit_Logon_Events.result"
		else
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Windows2012-ITSSCSD/policy/Logging_Audit_Logon_Events.rule"
			delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Windows2012-ITSSCSD/policy/Logging_Audit_Logon_Events.result"
		endif
	endif	

		appendfile {name of drive of storage folder of client}
	appendfile cd "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD" 
	
			if {exists file "policy_parameters.txt" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client}
			// launch with external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy.xml"  -rule Audit_Logon_Events {parameter "localpolparm"} -pparams "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy_parameters.txt" -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\GCMBigfix_HealthCheck.log"  2>&1
		else
			// launch without external parameters
			appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -jar {parameter "dump"} "{storage folder of client}\__GTS\HCLauncher_410\HCLauncher.jar" -policy "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\policy.xml"  -rule Audit_Logon_Events {parameter "localpolparm"} -sv {parameter "reportoutput"} {parameter "debug"} -truncate {parameter "truncateOutput"} -limit {parameter "limitOutput"} > "{storage folder of client}\__GTS\__IEMHC\{name of current site}\Windows2012-ITSSCSD\GCMBigfix_HealthCheck.log"  2>&1
		endif
		delete launch.bat
	move __appendfile launch.bat
					
	if {not ((sha2_256 of file "policy.xml" of folder ("__GTS/__IEMHC/" & name of current site as string & "/Windows2012-ITSSCSD") of storage folder of client is "7fb2b92b95314b6028672440e426b5091c1afc17eb00231292cf3bba36162bf6") | false) OR not ((sha2_256 of file "HCLauncher_410/HCLauncher.jar" of folder "__GTS" of storage folder of client is "102ab19440d587a0469ef3b840a97169bf1602c6a0cdb9f2c1e4c2f01a4f583f") | false)}
	// SHA256 mismatch, policy.xml, HCLauncher.jar or remediationScript is being tampered
	// Run _Update Fixlet to get update version
		exit 666
	endif
	wait launch.bat
	if {exit code of action != 0}
	exit {exit code of action}
	endif
	
	// ================================================================
// =  ADDED TO WRITE FILE WITH LAST HEALTH CHECK RUN DATE & TIME  =
// ================================================================

// Set this parameter to the name of the fixlet
parameter "GTS_GCM_Current_Fixlet_Name" = "Windows2012-ITSSCSD"

parameter "GTS_GCM_GTS_Folder" = "{pathname of parent folder of parent folder of folder ( pathname of client folder of current site)}/__GTS"
parameter "GTS_GCM_FlagFiles_Folder" = "{parameter "GTS_GCM_GTS_Folder"}/FlagFiles"
parameter "GTS_GCM_IEMHC_Folder" = "{parameter "GTS_GCM_FlagFiles_Folder"}/IEMHC"
parameter "GTS_GCM_LastRunFile" = "GCM_{(name of current site)}_{parameter "GTS_GCM_Current_Fixlet_Name" of action}.txt"
parameter "GTS_GCM_ReadMeFile" = "ReadMe.txt"

// Windows create folder structure (if missing)
if {name of operating system as lowercase starts with "win"}
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		dos mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		dos mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		dos mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

else  // Unix create folder structure (if missing)
	if {not exists folder (parameter "GTS_GCM_GTS_Folder")}
		wait mkdir "{parameter "GTS_GCM_GTS_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_FlagFiles_Folder")}
		wait mkdir "{parameter "GTS_GCM_FlagFiles_Folder"}"
    endif
	if {not exists folder (parameter "GTS_GCM_IEMHC_Folder")}
		wait mkdir "{parameter "GTS_GCM_IEMHC_Folder"}"
    endif

endif

//====================================================================
// Now the __GTS/FlagFiles/IEMHC folder structure is in place
// Place a ReadMe.txt file explaining about the purpose of this folder
//  and files and how it can be used (if not already present)
if {not exists file (parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile" of action)}
	delete __createfile
	createfile until EOF
		This is a BigFix IEMHC directory that contains 'GCM_<site name>_<fixlet name>.txt' files.
		Each file contains the date and time of the last run of the Health Check fixlet in that site

		If you want BigFix to perform a new Health Check and :
		1. you want to run only specific Health Check(s): delete the file(s) for the that site and fixlet.
		2. you want to run ALL Health Checks: delete the IEMHC directory (or all files in it).

		As soon as the IEMHC(s) is performed successfully the following will be recreated (if needed):
		- the IEMHC directory.
		- this ReadMe file.
		- for each site and fixlet file that was deleted the GCM_<site name>_<fixlet name>.txt file.
	EOF
	move __createfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_ReadMeFile"}"

endif


//====================================================================
// Write a file with the name of the site and the fixlet and
// write the current date and time in the file

delete __appendfile
appendfile {date (local time zone) of now & time (local time zone) of now}
delete "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"
move __appendfile "{parameter "GTS_GCM_IEMHC_Folder" & "/" & parameter "GTS_GCM_LastRunFile"}"

 			]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
	</Fixlet>
</BES>
