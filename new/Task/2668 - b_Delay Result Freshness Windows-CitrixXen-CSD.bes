<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>_Delay Result Freshness Windows-CitrixXen-CSD</Title>
		<Description><![CDATA[<TABLE>
<TBODY>
<TR>
<TD>This task needs to be run as a policy and will make sure the Freshness date of the analysis is only updated after&nbsp;The&nbsp;Delay Freshness Result&nbsp;Flag fixlet has changed from&nbsp;relevant to not-relevant.<BR>This will make sure that the client loop has been processed at least 1 time so all Analysis and Fixlets should also have been processed and contain the actual client data before data is being uploaded to ECM or other Health Checking tools.<BR>
<p><small><b>Version:</b>&nbsp;4.0.0<br><b>Build ID:</b>&nbsp;20190307-2125</small></p><P>----------------------------------------------------------------------------------<BR>Licensed Materials - Property of IBM<BR>(c) Copyright IBM Corp. 2019. All Rights Reserved.</P>
<BR></TD></TR></TBODY></TABLE>]]></Description>
		<Relevance><![CDATA[if ((exists file it) of (storage folder of client as string & "/__GTS/__IEMHC/" & name of current site as string & "/" & "Windows-CitrixXen-CSD" & "/" & "policy_result.xml")) 						then 						((if (exists file it) then 						(if (line 2 of file it as time = (modification time of file it) of (storage folder of client as string & 						"/__GTS/__IEMHC/" & name of current site as string & "/" & "Windows-CitrixXen-CSD" & "/" & "policy_result.xml")) then (if ( (line 3 of file it as integer < 3) and ((line 4 of file it) as time < now) | true)						then (true) else (false)) else (true) 						) 						else (true)) 						of ( storage folder of client as string & "/__GTS/__IEMHC/" & name of current site as string & "/" & "Windows-CitrixXen-CSD" & "/delay_counter_" & 						"policy_result.xml" )) 						else (false) 					 		]]></Relevance>
		<Category>Middleware</Category>
		<Source>GCM</Source>
		<SourceID>4.0.0</SourceID>
		<SourceReleaseDate>2019-03-07</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-ibm-copyright</Name>
			<Value>Licensed Materials - Property of IBM; (c) Copyright IBM Corp. 2019. All Rights Reserved.</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-author</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Mon, 25 Apr 2016 14:37:43 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-origin</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value>31180006</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-purpose</Name>
			<Value>lifecycle</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Wed, 12 Jun 2019 06:34:51 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action. </PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Set values specific for this task
parameter "GTS_Result_Filename" = "policy_result.xml"
parameter "GTS_pathname" = "{storage folder of client as string & "/__GTS/__IEMHC/" & name of current site as string & "/" & "Windows-CitrixXen-CSD" & "/"}"
parameter "GTS_Delay_Flag_Fixlet_Name" = "Windows-CitrixXen-CSD Delay Result Freshness Flag"

// Set values for counter file and timestamp
parameter "GTS_delay_counter_file" = "{(parameter "GTS_pathname" & "delay_counter_" & parameter "GTS_Result_Filename" )}"
parameter "GTS_resutlfile_timestamp" = "{(modification time of file it) of ( parameter "GTS_pathname" & parameter "GTS_Result_Filename" )}"
parameter "GTS_max_count" = "3"
parameter "GTS_min_wait_in_seconds" = "60"
parameter "GTS_avg_loopcycletime_in_seconds" = "{average of evaluationcycle of client / 1000}"

// Set the wait time to either the minimum or the avg cycle time
if {(parameter "GTS_avg_loopcycletime_in_seconds") as integer < (parameter "GTS_min_wait_in_seconds") as integer}
	parameter "GTS_retry_wait_in_seconds" = "{(parameter "GTS_min_wait_in_seconds")}"
else
	parameter "GTS_retry_wait_in_seconds" = "{(parameter "GTS_avg_loopcycletime_in_seconds")}"
endif

// Get the status of the Delay Flag Fixlet
parameter "GTS_Test_Delay_Flag_Fixlet_Status" = "{(relevance of it) of ((fixlets of sites whose (name of it = name of current site as string)) whose (value of headers "Subject" of it = (parameter "GTS_Delay_Flag_Fixlet_Name")))}"

// Calculate the new date/time to check
parameter "GTS_check_date" = "{now + (parameter "GTS_retry_wait_in_seconds") as integer * second}"

//Check if the Counter file exists
if {not exists file (parameter "GTS_delay_counter_file")}
	if {(parameter "GTS_Test_Delay_Flag_Fixlet_Status") = "True"}
		parameter "GTS_new_count" = "0"
	else
		parameter "GTS_new_count" = "1"	
	endif

	//Counter file does not exists, write initial counter file (no known previous HC date)
	parameter "GTS_old_timestamp" = "unknown"
else
	//Delay counter file exists get some values of it
	parameter "GTS_old_timestamp" = "{line 1 of file (parameter "GTS_delay_counter_file") as trimmed string}"
	parameter "GTS_current_timestamp" = "{line 2 of file (parameter "GTS_delay_counter_file") as trimmed string}"
	parameter "GTS_current_count" = "{line 3 of file (parameter "GTS_delay_counter_file") as trimmed string}"

	//Counter file exists are we counting? (modification date/time and timestamp in the counter file)
	if {(parameter "GTS_current_timestamp") = (parameter "GTS_resutlfile_timestamp")}
		//-- No NEW HC detected so continue checking this HC --

		//If current counter value = 1, we are waiting for the Test Flag Fixlet to become Relevant (Status = True) before we can continue
		if {(parameter "GTS_current_count") = "1"}
			if {(parameter "GTS_Test_Delay_Flag_Fixlet_Status") = "True"}
				parameter "GTS_new_count" = "{(parameter "GTS_current_count") as integer + 1}"
			else
				parameter "GTS_new_count" = "{(parameter "GTS_current_count")}"	
			endif
		endif
		
		//If current counter value = 0 or 2, we are waiting for the Test Flag Fixlet to become Not Relevant (Status = False) before we can continue
		if {((parameter "GTS_current_count") = "0") OR ((parameter "GTS_current_count") = "2")}
			if {(parameter "GTS_Test_Delay_Flag_Fixlet_Status") = "False"}
				parameter "GTS_new_count" = "{(parameter "GTS_current_count") as integer + 1}"
			else
				parameter "GTS_new_count" = "{(parameter "GTS_current_count")}"	
			endif
		endif
		
	else
		//-- New HC discovered set delay_file to defaults keeping old HC date --
		// Check the status of the Flag Fixlet and set the vaule depending on that
		if {(parameter "GTS_Test_Delay_Flag_Fixlet_Status") = "True"}
			parameter "GTS_new_count" = "0"
		else
			parameter "GTS_new_count" = "1"	
		endif

	endif
endif

//----------------------------
//--- Write new Delay file ---
//----------------------------
delete "{parameter "GTS_delay_counter_file"}"

//Check if we reached the desired number (so we can write the correct freshness date to line 1 of the delay counter file)
if {(parameter "GTS_new_count") as integer < ((parameter "GTS_max_count") as integer)}
	// We are still in the Delay loop
	appendfile {parameter "GTS_old_timestamp"}
	appendfile {parameter "GTS_resutlfile_timestamp"}
	appendfile {parameter "GTS_new_count"}
	appendfile {parameter "GTS_check_date"}
else
	// We are ready make HC date available for the Analysis
	appendfile {parameter "GTS_resutlfile_timestamp"}
	appendfile {parameter "GTS_resutlfile_timestamp"}
	appendfile {parameter "GTS_new_count"}
	appendfile {now}
endif
move __appendfile "{parameter "GTS_delay_counter_file"}"
]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
