<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>_Send Middleware Configuration for Domino-CSD</Title>
		<Description><![CDATA[This task will create a middleware configuration file on the endpoint for Domino-CSD. Review the action of this task to see and change the settings sent to the endpoint.
				<TABLE>
<TBODY>
<TR>
<TD>Some middleware health check policies require password(s) to be sent to the Endpoint.</TD>
</TR>
<TR>
<TD>Provide password(s) in the form below, then click Take Action to add encrypted password(s) to the middleware
configuration file on the endpoint.</TD>
</TR>
<TR>
<TD>
	<ul>
		<li>Edit _Send Middleware Configuration task, customize the configuration file content.</li>
		<li>
			When editing the task use "password1", "password2", etc as password value placeholders.
			NEVER use clear text for passwords in the configuration task.<br/>
			<b>Example:</b><br/>
			#credential1<br/>
			username=john<br/>
			password=password1<br/>
			#credential2<br/>
			username=alex<br/>
			password=password2<br/>
		</li>
		<li>After done editing the task action script, input password(s) with Password Configuration form.</li>
		<li>Input "Number of Password Configs" field (number of password placeholders you created during task editing). Click "Create Password Config Fields" button.</li>
		<li>"Password Property Name" is the password property name in the configuration file content.</li>
		<li>Fill up all the fields and click "Take Action"</li>
	</ul>
</TD>
</TR>
<TR>
<TD><b>Warning:</b> "Create Password Config Fields" button will reset the Password Configuration form. All input values will be cleared.</TD>
</TR>
<TR><TD><br></TD></TR>
</TBODY>
</TABLE>
&nbsp;<INPUT id=number name=number style="WIDTH: 20px"> Number of Password Configs: (max. 10) <button onclick="myFunction1()">Create Password Config Fields</button>
<FORM onsubmit=_takeAction() style="WIDTH: 750px">
<FIELDSET><LEGEND><STRONG>Password Configuration</STRONG></LEGEND>
<DIV style="PADDING-BOTTOM: 20px; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px">
<TABLE id="myTable" >
<TBODY>
</TBODY>
</TABLE>
</DIV>

</FIELDSET>
</FORM>

<script>
function myFunction1() {
    var number = document.getElementById("number").value;
	if (number > 10) {
    	alert("Only can support 10 password.");
		return;
    }
	
    var table = document.getElementById("myTable");
	
	if (number != null) {
		var rowCount = table.rows.length;
        for (var x = rowCount-1; x >= 0; x--) {
            table.deleteRow(x);
        }
		for (var i = 0; i <number; i++) {
			if (i === 0) {
				var row1 = table.insertRow(i);				
				var row2 = table.insertRow(i+1);
				var row3 = table.insertRow(i+2);
				var row4 = table.insertRow(i+3);				
			} else {
				var row1 = table.insertRow(i*4);				
				var row2 = table.insertRow(i*4+1);
				var row3 = table.insertRow(i*4+2);
				var row4 = table.insertRow(i*4+3);			
			}
			var cell1 = row1.insertCell(0);
			var cell2 = row1.insertCell(1);
			var cell3 = row1.insertCell(2);
			var cell4 = row2.insertCell(0);
			var cell5 = row2.insertCell(1);
			var cell6 = row2.insertCell(2);
			var cell7 = row3.insertCell(0);
			var cell8 = row3.insertCell(1);
			var cell9 = row3.insertCell(2);
			var cell10 = row4.insertCell(0);
			var counter = i + 1;				
			cell1.innerHTML = "<LABEL for=propertyName"+counter+">Password Property Name "+counter+":</LABEL>";
			cell2.innerHTML = "<INPUT id=propertyName"+counter+" style='WIDTH: 250px' name=propertyName"+counter+">";
			cell3.innerHTML = "<LABEL id=propertyNameMsg"+counter+" style='color:red'></LABEL>";
			cell4.innerHTML = "<LABEL style='PADDING-RIGHT: 5px' for=password"+counter+">Password:</LABEL>";
			cell5.innerHTML = "<INPUT id=password"+counter+" style='WIDTH: 250px' type=password name=password"+counter+">";
			cell6.innerHTML = "<LABEL id=passwordMsg"+counter+" style='color:red'></LABEL>";
			cell7.innerHTML = "<LABEL style='PADDING-RIGHT: 5px' for=cPassword"+counter+">Confirm Password:</LABEL>";
			cell8.innerHTML = "<INPUT id=cPassword"+counter+" style='WIDTH: 250px' type=password name=cPassword"+counter+">";
			cell9.innerHTML = "<LABEL id=cPasswordMsg"+counter+" style='color:red'></LABEL>";
			cell10.innerHTML = "&nbsp";
		}
	}   
}

function _takeAction(){ 
	var propertyName1 = "";
	var propertyName2 = "";
	var propertyName3 = "";
	var propertyName4 = "";
	var propertyName5 = "";
	var propertyName6 = "";
	var propertyName7 = "";
	var propertyName8 = "";
	var propertyName9 = "";
	var propertyName10 = "";
		
	var password1 = "";
	var password2 = "";
	var password3 = "";
	var password4 = "";
	var password5 = "";
	var password6 = "";
	var password7 = "";
	var password8 = "";
	var password9 = "";
	var password10 = "";
		
	var cPassword1 = "";
	var cPassword2 = "";
	var cPassword3 = "";
	var cPassword4 = "";
	var cPassword5 = "";
	var cPassword6 = "";
	var cPassword7 = "";
	var cPassword8 = "";
	var cPassword9 = "";
	var cPassword10 = ""; 
		
	if (document.getElementById("propertyName1") != null) {
		propertyName1 = document.getElementById("propertyName1").value;
	}		
	if (document.getElementById("propertyName2") != null) {
		propertyName2 = document.getElementById("propertyName2").value;
	}		
	if (document.getElementById("propertyName3") != null) {
		propertyName3 = document.getElementById("propertyName3").value;
	}
	if (document.getElementById("propertyName4") != null) {
		propertyName4 = document.getElementById("propertyName4").value;
	}		
	if (document.getElementById("propertyName5") != null) {
		propertyName5 = document.getElementById("propertyName5").value;
	}		
	if (document.getElementById("propertyName6") != null) {
		propertyName6 = document.getElementById("propertyName6").value;
	}		
	if (document.getElementById("propertyName7") != null) {
		propertyName7 = document.getElementById("propertyName7").value;
	}		
	if (document.getElementById("propertyName8") != null) {
		propertyName8 = document.getElementById("propertyName8").value;
	}		
	if (document.getElementById("propertyName9") != null) {
		propertyName9 = document.getElementById("propertyName9").value;
	}		
	if (document.getElementById("propertyName10") != null) {
		propertyName10 = document.getElementById("propertyName10").value;
	}
		
	if (document.getElementById("password1") != null) {
		password1 = document.getElementById("password1").value;
	}		
	if (document.getElementById("password2") != null) {
		password2 = document.getElementById("password2").value;
	}		
	if (document.getElementById("password3") != null) {
		password3 = document.getElementById("password3").value;
	}
	if (document.getElementById("password4") != null) {
		password4 = document.getElementById("password4").value;
	}		
	if (document.getElementById("password5") != null) {
		password5 = document.getElementById("password5").value;
	}		
	if (document.getElementById("password6") != null) {
		password6 = document.getElementById("password6").value;
	}		
	if (document.getElementById("password7") != null) {
		password7 = document.getElementById("password7").value;
	}		
	if (document.getElementById("password8") != null) {
		password8 = document.getElementById("password8").value;
	}		
	if (document.getElementById("password9") != null) {
		password9 = document.getElementById("password9").value;
	}		
	if (document.getElementById("password10") != null) {
		password10 = document.getElementById("password10").value;
	}
		
	if (document.getElementById("cPassword1") != null) {
		cPassword1 = document.getElementById("cPassword1").value;
	}		
	if (document.getElementById("cPassword2") != null) {
		cPassword2 = document.getElementById("cPassword2").value;
	}		
	if (document.getElementById("cPassword3") != null) {
		cPassword3 = document.getElementById("cPassword3").value;
	}
	if (document.getElementById("cPassword4") != null) {
		cPassword4 = document.getElementById("cPassword4").value;
	}		
	if (document.getElementById("cPassword5") != null) {
		cPassword5 = document.getElementById("cPassword5").value;
	}		
	if (document.getElementById("cPassword6") != null) {
		cPassword6 = document.getElementById("cPassword6").value;
	}		
	if (document.getElementById("cPassword7") != null) {
		cPassword7 = document.getElementById("cPassword7").value;
	}		
	if (document.getElementById("cPassword8") != null) {
		cPassword8 = document.getElementById("cPassword8").value;
	}		
	if (document.getElementById("cPassword9") != null) {
		cPassword9 = document.getElementById("cPassword9").value;
	}		
	if (document.getElementById("cPassword10") != null) {
		cPassword10 = document.getElementById("cPassword10").value;
	}
		
	var number = document.getElementById("number").value;
	var invalidInput = false;
	if (number != null) {
		for (var i = 0; i <number; i++) { 
			var counter = i + 1;
			if (document.getElementById("propertyName"+counter) != null) {
				document.getElementById("propertyNameMsg"+counter).innerHTML = "";
				var tmpPropertyName = document.getElementById("propertyName"+counter).value;
				if (tmpPropertyName === "") {
					document.getElementById("propertyNameMsg"+counter).innerHTML = "Password Property Name is required.";
					invalidInput = true;
				}
			}
				
			if (document.getElementById("password"+counter) != null) {
				document.getElementById("passwordMsg"+counter).innerHTML = "";
				var tmpPassword = document.getElementById("password"+counter).value;
				if (tmpPassword === "") {
					document.getElementById("passwordMsg"+counter).innerHTML = "Password is required.";
					invalidInput = true;
				}
			}	
				
			if (document.getElementById("cPassword"+counter) != null) {
				document.getElementById("cPasswordMsg"+counter).innerHTML = "";
				var text;
				var tmpPassword = document.getElementById("password"+counter).value;
				var tmpCPassword = document.getElementById("cPassword"+counter).value;
				if (tmpCPassword === "") {
					document.getElementById("cPasswordMsg"+counter).innerHTML = "Password Confirmation is required.";
					invalidInput = true;
				} else if (tmpPassword != tmpCPassword) {
					document.getElementById("cPasswordMsg"+counter).innerHTML = "Passwords do not match.";
					invalidInput = true;
				}		
			}
		}
	}
	if (invalidInput) {
		return;
	}
	TakeSecureFixletAction(Relevance('id of current fixlet'), Relevance('id of current bes site'), "Action1", {}, { propertyName1: propertyName1, password1: password1, propertyName2: propertyName2, password2: password2, propertyName3: propertyName3, password3: password3,  propertyName4: propertyName4, password4: password4,  propertyName5: propertyName5, password5: password5,  propertyName6: propertyName6, password6: password6,  propertyName7: propertyName7, password7: password7,  propertyName8: propertyName8, password8: password8,  propertyName9: propertyName9, password9: password9, propertyName10: propertyName10, password10: password10}); 
} 
document.body.ontakeaction = function() { _takeAction(); return false; }
</script>				<p><small><b>Version:</b>&nbsp;4.0.0<br><b>Build ID:</b>&nbsp;20190307-2125</small></p><P>----------------------------------------------------------------------------------<BR>Licensed Materials - Property of IBM<BR>(c) Copyright IBM Corp. 2019. All Rights Reserved.</P>
		]]></Description>
		<Relevance><![CDATA[
				
		(
			if exists setting "_GCM_Domino-CSD_OSRelevance_Override" whose (value of it != "") of client then (
				true
			)
			else (
				(name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "sunos" and version of operating system >= "5.10") OR(name of operating system as lowercase contains "aix" and version of operating system >= "7") OR (name of operating system as lowercase contains "hp-ux" and version of operating system as string contains "11.31") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR disjunction of ((name of operating system as lowercase contains it) of ( "win2008"; "win2012"; "win2016"))
			)
		)
		]]></Relevance>
		<Relevance><![CDATA[(version of client >= "9.2")]]></Relevance>
		<Category>Middleware</Category>
		<Source>GCM</Source>
		<SourceID>4.0.0</SourceID>
		<SourceReleaseDate>2019-03-07</SourceReleaseDate>
		<MIMEField>
			<Name>x-fixlet-ibm-copyright</Name>
			<Value>Licensed Materials - Property of IBM; (c) Copyright IBM Corp. 2019. All Rights Reserved.</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-author</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-origin</Name>
			<Value>GTS GCM Team</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value>30120007</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-gcm-purpose</Name>
			<Value>lifecycle</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Thu, 13 Jun 2019 10:07:05 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
			// Licensed Materials - Property of IBM; (c) Copyright IBM Corporation 2019. All Rights Reserved.
			
begin prefetch block	
	if {exists setting "_GCM_Download_BasePath" whose (value of it != "") of client}
		parameter "basepath" = "{value of setting "_GCM_Download_BasePath" of client}"
	else
		parameter "basepath" = "GTSProtocol://download.bigfix.com/download/gtscontent/iemhc"
	endif
	
	add prefetch item name=ConfigMergeTool.jar sha1=67cac9e3f121e23c12ca84f63daf3cf82611aaf8 sha256=29f2283614504b3a31ee30b35d32afcd8096ba76a866a5f7ce80bbd77d54c21e size=421823 url={parameter "basepath"}/400/20190307-2125/tools/ConfigMergeTool.jar
	add prefetch item name=TIMcipherPswdV3.jar sha1=c8aeb8375b25c0fa92fc92f5586f579ddcd791c4 sha256=7843234a93d6542519dd7032445af09168add2d732d2550aacef3bb64597b507 size=160714 url={parameter "basepath"}/400/20190307-2125/tools/TIMcipherPswdV3.jar
	
//Start Check if JRE needs to be installed
  





 	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
 if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
   
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix32" = "80535"
         if{parameter "input_jre_aix32" > parameter "downloaded_jre_aix32"}
          parameter "jre_download_aix32" = "true"
	     else
	      parameter "jre_download_aix32" = "false"
	     endif
    else
	  parameter "jre_download_aix32" = "true"
    endif
   
    if{parameter "jre_download_aix32" as lowercase is "true"}
		add prefetch item name=jre832redist.tar.gz sha1=99ee69774f10d4f8affbd9e27232cbd6de7cd763 sha256=c09109c251dd937f72c3450531f954f1012a41e3ed6287520b6c278a5037a63d size=123090779 url={parameter "basepath"}/jre/80535/jre832redist.tar.gz
	endif
 endif
endif
    
  if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
     if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_aix64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_aix64" = "80535"
        if{parameter "input_jre_aix64" > parameter "downloaded_jre_aix64"}
         parameter "jre_download_aix64" = "true"
        else
         parameter "jre_download_aix64" = "false" 
       endif    
    else
     parameter "jre_download_aix64" = "true"
	endif
	
	if{parameter "jre_download_aix64" as lowercase is "true"}
		add prefetch item name=jre864redist.tar.gz sha1=5949599f0a89fe0d48889f45d64ab18886b7be48 sha256=76e5cece78166168adeb0d040dff3292386f71678417e84040b7b92c52f16e8e size=145281211 url={parameter "basepath"}/jre/80535/jre864redist.tar.gz
	endif
 endif
endif
    
	if{(windows of operating system) and (not(architecture of operating system contains "64"))}

		if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	      parameter "downloaded_jre_win32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
	      parameter "input_jre_win32" = "80535"
	    
	       if{parameter "input_jre_win32" > parameter "downloaded_jre_win32"}
	        	parameter "jre_download_win32" = "true"
		   else
			 	parameter "jre_download_win32" = "false"	  	
		   endif
		else
		   parameter "jre_download_win32" = "true"
		endif
	
	   if{parameter "jre_download_win32" as lowercase is "true"}
		   add prefetch item name=ibm-java-jre-80-win-i386.zip sha1=e6589fa216462fc105f7464f167cecbbcbd7badf sha256=e5f331cecaf35e57c0472636dedd6df7570af6f41bd2411387ae4b53cf21c4a3 size=144293243 url={parameter "basepath"}/jre/80535/ibm-java-jre-80-win-i386.zip 
		   add prefetch item name=unzip.exe sha1=84debf12767785cd9b43811022407de7413beb6f sha256=2122557d350fd1c59fb0ef32125330bde673e9331eb9371b454c2ad2d82091ac size=204800 url={parameter "basepath"}/400/20190307-2125/tools/unzip.exe
	   endif
   endif	
  
if{(windows of operating system) and (architecture of operating system contains "64")}
	   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
		    parameter "downloaded_jre_win64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
		    parameter "input_jre_win64" = "80535"
		     if {parameter "input_jre_win64" > parameter "downloaded_jre_win64"}
		      	parameter "jre_download_win64" = "true"
			 else
			  	parameter "jre_download_win64" = "false"
			 endif
	   else
				parameter "jre_download_win64" = "true"
	   endif
 	   if{parameter "jre_download_win64" as lowercase is "true"}
				add prefetch item name=ibm-java-jre-80-win-x86_64.zip sha1=f91eba2412dbe515102763df3ee5d6f24b0754c5 sha256=910fac677acc3d0e5dff59570043b8ca5479675365baca278c3d61843682bf39 size=172357049 url={parameter "basepath"}/jre/80535/ibm-java-jre-80-win-x86_64.zip
				add prefetch item name=unzip.exe sha1=84debf12767785cd9b43811022407de7413beb6f sha256=2122557d350fd1c59fb0ef32125330bde673e9331eb9371b454c2ad2d82091ac size=204800 url={parameter "basepath"}/400/20190307-2125/tools/unzip.exe
	   endif
endif	

			 
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")}
	if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux32" = "80530"
          if{parameter "input_jre_hpux32" > parameter "downloaded_jre_hpux32"}
	         parameter "jre_download_hpux32" = "true"
	     else
	       parameter "jre_download_hpux32" = "false"
	     endif
	else
	     parameter "jre_download_hpux32" = "true"
	endif
	
	if{parameter "jre_download_hpux32" as lowercase is "true"}
	     add prefetch item name=hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z sha1=8797755ad786fa383234324026275e07822a6d3d sha256=a025fd583488322ae4784ea457464ad9bd1d4b38924ae9e475ac5f431c627ed1 size=151562375 url={parameter "basepath"}/jre/80530/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z
	 endif 
 endif	          
		
 if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	     parameter "downloaded_jre_hpux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
         parameter "input_jre_hpux64" = "80530"
         if{parameter "input_jre_hpux64" > parameter "downloaded_jre_hpux64"}
	         parameter "jre_download_hpux64" = "true"
         else
             parameter "jre_download_hpux64" = "false"
         endif
     else
       parameter "jre_download_hpux64" = "true"
    endif
    
    if{parameter "jre_download_hpux64" as lowercase is "true"}
       add prefetch item name=hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z sha1=9359ea86466b836f5bdad07515f074aa636e8cc5 sha256=799b5e8a96dad5bd3e68918e30cbf3c407e43312f1d3a12dda7f9caa2f2b3854 size=220996123 url={parameter "basepath"}/jre/80530/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z
    endif
 endif	

 if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sparc" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sparc" = "80535"   
     if{parameter "input_jre_sparc" > parameter "downloaded_jre_sparc"}
		parameter "jre_download_sparc" = "true"
	 else
	 	parameter "jre_download_sparc" = "false"		
	 endif  
  else
   	  parameter "jre_download_sparc" = "true"
  endif
  
  if{parameter "jre_download_sparc" as lowercase is "true"}
		add prefetch item name=sol6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=243294a6fd481b2afeddb5832c79bd90d87a1260 sha256=281261eb9db231109811d1c139ec1c6d6e7119f2b0247068f5a5e7d62b4dd4a9 size=124233721 url={parameter "basepath"}/jre/80535/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z
  endif
endif
	
if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
     parameter "downloaded_jre_sunos64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}" 
     parameter "input_jre_sunos64" = "80535"
     if{parameter "input_jre_sunos64" > parameter "downloaded_jre_sunos64"}
		parameter "jre_download_sunos64" = "true"
	 else
	    parameter "jre_download_sunos64" = "false"		
	 endif
  else
  	parameter "jre_download_sunos64" = "true"
  endif
 
  if{parameter "jre_download_sunos64" as lowercase is "true"}
		add prefetch item name=solx6480sr5fp35hybrid-20190412_01-jre.tar.Z sha1=0c5f6fa8ecf76750fbe2e50c3ebe57c402ca44e0 sha256=a43620085447b285b5ecfcba97f33ec3d417a39ae3cd8763d0f7e0adbee5eef1 size=115437507 url={parameter "basepath"}/jre/80535/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z
  endif
endif 

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
    if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
       parameter "downloaded_jre_linux32" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
       parameter "input_jre_linux32" = "80535"
         if{parameter "input_jre_linux32" > parameter "downloaded_jre_linux32"}
          parameter "jre_download_linux32" = "true"
     	 else
	       parameter "jre_download_linux32" = "false"
	     endif
	 else
	  parameter "jre_download_linux32" = "true"
   endif
     
   if{parameter "jre_download_linux32" as lowercase is "true"}
	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-i386.tgz sha1=a99afe85b2085792080606e856017a734d3164af sha256=d6cf70375c7d12c03cde7d59ee59d6fc7ce38b26e5f250bee0a824455a962ade size=117958548 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-i386.tgz
   endif   
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
   if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
    parameter "downloaded_jre_linuxppc64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
    parameter "input_jre_linuxppc64" = "80535"
      if{parameter "input_jre_linuxppc64" > parameter "downloaded_jre_linuxppc64"}
          parameter "jre_download_linuxppc64" = "true"
      else
	      parameter "jre_download_linuxppc64" = "false"
	  endif
   else
     parameter "jre_download_linuxppc64" = "true" 
   endif
      
   if{parameter "jre_download_linuxppc64" as lowercase is "true"}
     add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64.tgz sha1=25ae2bd4d021e408f74e89bebcfdb0710e0aabec sha256=809c801d2cb137ad2e13b6439869f51df7809a89705c1adf073cf7c9108fc865 size=142913277 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64.tgz
   endif   
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
	if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	    parameter "downloaded_jre_linuxppc64le" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	    parameter "input_jre_linuxppc64le" = "80535"
	      if{parameter "input_jre_linuxppc64le" > parameter "downloaded_jre_linuxppc64le"}
	          parameter "jre_download_linuxppc64le" = "true"
	      else
		      parameter "jre_download_linuxppc64le" = "false"
		  endif
	 else
	     parameter "jre_download_linuxppc64le" = "true" 
	 endif
	
	 if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	     	  add prefetch item name=ibm-java-jre-8.0-5.35-linux-ppc64le.tgz sha1=4b75c74c42a86a9cf3a167792624215a327b0d21 sha256=1ef8f202b1e9c1604781e12e7f15f6b267cbe2015cd212c340f7376886515df1 size=141815035 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz
	 endif
endif
	
	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
	 if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	    parameter "downloaded_jre_linuxs390x" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	    parameter "input_jre_linuxs390x" = "80535"
	      if{parameter "input_jre_linuxs390x" > parameter "downloaded_jre_linuxs390x"}
	          parameter "jre_download_linuxs390x" = "true"
	      else
		      parameter "jre_download_linuxs390x" = "false"
		  endif
	 else
	     parameter "jre_download_linuxs390x" = "true" 
	 endif   	    
  	 if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	     add prefetch item name=ibm-java-jre-8.0-5.35-linux-s390x.tgz sha1=22f36411ba4e6d693d25dcf303b3326b01217a70 sha256=d530ee617b2f97ab3d83f5ebc8e017b85436db8eb153bdaefd8e57485e3be8cc size=126924951 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-s390x.tgz
	 endif
endif

	
if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
	  if{exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	    parameter "downloaded_jre_linux64" = "{first matches (regex "\d\d\d\d\d") of (concatenation of substrings separated by "." of line 5 of file "version.txt" of folder "__GTS" of storage folder of client) as integer}"
	    parameter "input_jre_linux64" = "80535"
	      if{parameter "input_jre_linux64" > parameter "downloaded_jre_linux64"}
	          parameter "jre_download_linux64" = "true"
	      else
		      parameter "jre_download_linux64" = "false"
		  endif
	  else
	     parameter "jre_download_linux64" = "true" 
	  endif
	  if{parameter "jre_download_linux64" as lowercase is "true"}
			  add prefetch item name=ibm-java-jre-8.0-5.35-linux-x86_64.tgz sha1=c3013c4534805c07b76b2ec167fc38eb52cd0c70 sha256=af2fe61dc9d62923383405f77d1c31292c13791a0f21019f0365b041ef40c447 size=129295118 url={parameter "basepath"}/jre/80535/ibm-java-jre-8.0-5.35-linux-x86_64.tgz
	  endif
endif	
//End Check if JRE needs to be installed
	
end prefetch block

//Start of Config File Template

createfile until --qGs7SPXJMX59YEz--
	
	# ===========================================================================
# Licensed Materials - Property of IBM
#
# (C) Copyright IBM Corp. 2006 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# ===========================================================================
# Use this file to override any.any.domino6.dominoServerV3 collector parameters.
# Collector parameters must be specified in the domino6ServerV3-parameters section:
#     Lines starting with # are processed as comments
#     E.G.:
#     domino6ServerV3-parameters
#     #Parameter for domino server path
#     dominoServerPath = "c:\lotus\domino"
#
#     Please Note: Any String value with non alphanumeric character should
#                   be surrounded with double quotes. 
#
#
# Mandatory Parameters for this collector:
# ---------------------------------------
#	dominoBinPath = Path to the domino binary files. For expl "C:\Program Files\Lotus\Domino"
#	dominoIniFileWithPath = Path to the domino notes.ini file. For expl. "C:\Program Files\Lotus\Domino\notes.ini"
#	dominoIdFileWithPath = Fully qualified path to the admin.id file or any user id file with admins rights. For expl. "C:\Program Files\Lotus\notes\data\admin.id"
#	dominoIDpassword=<SET PASSWORD WITH PASSWORD CONFIG FORM> for the id file.  For expl. "Adm12345"
#	dominoNotesUser = Name of domino user for *nix systems. For windows should be "". 
# 
#   PLEASE!!!!! Don`t forget get all values in "".
#	PLEASE!!!!! Don`t forget that dominoBinPath value should be without \ at the end of string.
#	
#	<VALUE> -- should be replaced by YOUR values
#
#example of configuration for single Domino Server
#file-informations
#	type = "collector-configuration"
#	collector = dominoServerV3
#	file = config.template
#	version = 1
#	date = "2015/10/21"
#	comment = "Configuration file to override any.any.DominoServerV6 collector parameters"
#Properties for HC	
#domino6ServerV3-parameters
#	dominoIniFileWithPath = "<Domino_Bin_Dir_Path>\notes.ini"
#	dominoIdFileWithPath = "<Domino_ID_File_Path>"
#	dominoIDpassword=<SET PASSWORD WITH PASSWORD CONFIG FORM>"<Domino_ID_File_Password>"
#	dominoNotesUser = "<Domino_Notes_User>"
#	
#============================================================================ 
#example of configuration for multi instances
#count of instances starts from 00
#file-informations
#	type = "collector-configuration"
#	collector = dominoServerV7
#	file = config.template
#	version = 1
#	date = "2015/10/21"
#	comment = "Configuration file to override any.any.DominoServerV6 collector parameters"
#Properties for HC	
#domino6ServerV3-parameters
#	dominoInst00
#		dominoIniFileWithPath = "<Domino_Server1_Bin_Dir_Path>\notes.ini"
#		dominoIdFileWithPath = "<Domino_Server1_ID_File_Path>"
#		dominoIDpassword=<SET PASSWORD WITH PASSWORD CONFIG FORM>"<Domino_Server1_ID_File_Password>"
#		dominoNotesUser = "<Domino_Server1_Notes_User>"
#	dominoInst01
#		dominoIniFileWithPath = "<Domino_Server2_Bin_Dir_Path>\notes.ini"
#		dominoIdFileWithPath = "<Domino_Server2_ID_File_Path>"
#		dominoIDpassword=<SET PASSWORD WITH PASSWORD CONFIG FORM>"<Domino_Server2_ID_File_Password>"
#		dominoNotesUser = "<Domino_Server2_Notes_User>"
#		{{...}
#	dominoInstNN
#		dominoIniFileWithPath = "<Domino_ServerNN_Bin_Dir_Path>\notes.ini"
#		dominoIdFileWithPath = "<Domino_ServerNN_ID_File_Path>"
#		dominoIDpassword=<SET PASSWORD WITH PASSWORD CONFIG FORM>"<Domino_ServerNN_ID_File_Password>"
#		dominoNotesUser = "<Domino_ServerNN_Notes_User>"
	
--qGs7SPXJMX59YEz--

//End of Config File Template

parameter "build_id" = "20190307-2125"
parameter "version" = "4.0.0"

//Start Extract JRE if prefetched



  
 


if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "32")}
if{version of operating system >= "7" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
  if{parameter "jre_download_aix32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	 
	 

wait gunzip -f "{client folder of current site}/__Download/jre832redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre832redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	 
 	 	 
	 	 
	  endif 
endif
endif 
	
if{(name of operating system as lowercase contains "aix") and (architecture of operating system contains "64")}	
if{name of operating system as lowercase contains "aix" and version of operating system >= "7" and architecture of operating system contains "64" and ((concatenation "" of substrings separated by "-" of ((current technology level of operating system) as string)) as integer >= 710003)}
 if{parameter "jre_download_aix64" as lowercase is "true"}
	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	
	

wait gunzip -f "{client folder of current site}/__Download/jre864redist.tar.gz"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/jre864redist.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/jre" "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 
	
		 
		 
	 endif 
endif
endif

   if{(windows of operating system) and (not(architecture of operating system contains "64"))}
    if {parameter "jre_download_win32" as lowercase is "true"}
     
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	wait "{client folder of current site}\__Download\unzip.exe" -o "{client folder of current site}\__Download\ibm-java-jre-80-win-i386.zip" -d "{storage folder of client}\__GTS"
	
		  endif
 endif 

 if{(windows of operating system) and (architecture of operating system contains "64")}
   if{parameter "jre_download_win64" as lowercase is "true"}
     
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


    wait "{client folder of current site}\__Download\unzip.exe" -o "{client folder of current site}\__Download\ibm-java-jre-80-win-x86_64.zip" -d "{storage folder of client}\__GTS"    
  	  	   endif
  endif 

   if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "32")} 
  if{parameter "jre_download_hpux64" as lowercase is "true"}
	     	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia3280sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
 endif
	 
     if{(name of operating system as lowercase contains "hp-ux") and (architecture of operating system contains "ia64")}
      if{parameter "jre_download_hpux64" as lowercase is "true"}
	   	 	
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	     	folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait tar xf "{client folder of current site}/__Download/hpia6480sr5fp30hybrid-20190311_01-jre.tar"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif


	     		     		  endif
	 endif 
    
   if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "sparc")} 
  	 if{parameter "jre_download_sparc" as lowercase is "true"}
		 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


		 folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/sol6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

		 		 	 endif
  endif	 
    
  if{(name of operating system as lowercase contains "sunos") and (architecture of operating system contains "64")}
	if{parameter "jre_download_sunos64" as lowercase is "true"}
	    
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	    folder create "{storage folder of client}/__GTS/jre"

wait uncompress -f "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar.Z"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

delete __appendfile
appendfile #!/bin/sh
appendfile tar xf "{client folder of current site}/__Download/solx6480sr5fp35hybrid-20190412_01-jre.tar"
appendfile chown -R root:root "{client folder of current site}/__Download"
move __appendfile "{client folder of current site as string}/__Download/launch.sh"
wait chmod 750 "{client folder of current site as string}/__Download/launch.sh"
wait /bin/sh -c "(cd \"{client folder of current site as string}/__Download\" && ./launch.sh)"

wait mv -f "{client folder of current site}/__Download/bin" "{storage folder of client}/__GTS/jre/bin"
if {exit code of action != 0}
exit {exit code of action as integer}
endif 

wait mv -f "{client folder of current site}/__Download/lib" "{storage folder of client}/__GTS/jre/lib"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chown -R root:root "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

wait chmod -R o= "{storage folder of client}/__GTS/jre"
if {exit code of action != 0}
exit {exit code of action as integer}
endif

	 
	    	    	 endif
 endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "i386" OR architecture of operating system contains "i686")}
  if{parameter "jre_download_linux32" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-i386.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-i386-80/jre" "{storage folder of client}/__GTS/"
	 
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64") AND (big endian of operating system))}
  if{parameter "jre_download_linuxppc64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64-80/jre" "{storage folder of client}/__GTS/"
	 
	 	  endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and ((architecture of operating system contains "ppc64le"))}
  if{parameter "jre_download_linuxppc64le" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-ppc64le.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-ppc64le-80/jre" "{storage folder of client}/__GTS/"
	 	  endif 
endif

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "s390x")}
  if{parameter "jre_download_linuxs390x" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-s390x.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-s390x-80/jre" "{storage folder of client}/__GTS/"
	 
	 	 	 
 endif
endif  

if{((name of operating system as lowercase contains "red hat" and version of operating system >= "6") OR (name of operating system as lowercase contains "suse" and version of operating system >= "11") OR (name of operating system as lowercase contains "centos" and version of operating system >= "7") OR (name of operating system as lowercase contains "ubuntu" and version of operating system >= "14") OR (name of operating system as lowercase contains "debian" and version of operating system >= "8") OR (name of operating system as lowercase contains "linux")) and (architecture of operating system contains "x86_64")}
  if{parameter "jre_download_linux64" as lowercase is "true"}
	 
    // clean the JRE location
	folder delete "{storage folder of client}/__GTS/jre"
	folder delete "{storage folder of client}/__GTS/__IEMHC/jre"
	delete "{storage folder of client}/__GTS/__IEMHC/version.txt"
	folder delete "{storage folder of client}/__GTS/Temp"
	folder create "{storage folder of client}/__GTS/Temp"


	  wait tar -xozf "{client folder of current site}/__Download/ibm-java-jre-8.0-5.35-linux-x86_64.tgz" -C "{storage folder of client}/__GTS/Temp"
	  wait mv -f "{storage folder of client}/__GTS/Temp/ibm-java-x86_64-80/jre" "{storage folder of client}/__GTS/"
	  
	  	   endif 
endif
//End Extract JRE if prefetched

if{not exists file "version.txt" of folder "__GTS" of storage folder of client|false}
	// Last Change
	appendfile {now as string}
	
	// Version
	appendfile {parameter "version"}
	
	// Build ID
	appendfile {parameter "build_id"}
	
	// create the version file
	delete "{storage folder of client}/__GTS/version.txt"
	move __appendfile "{storage folder of client}/__GTS/version.txt"
	
	// append JRE version to end
	if{ windows of operating system}
				appendfile "{storage folder of client}\__GTS\jre\bin\java.exe" -version >> "{storage folder of client}\__GTS\version.txt" 2>&1 
		delete launch.bat
		move __appendfile launch.bat
		wait launch.bat
	else
				appendfile #!/bin/sh
		appendfile "{storage folder of client}/__GTS/jre/bin/java" -version >> "{storage folder of client}/__GTS/version.txt" 2>&1
		delete launch.sh
		move __appendfile launch.sh
		wait chmod 750 launch.sh
		wait "{client folder of current site}/launch.sh"
	endif
endif     
// clean up the work folder
folder delete "{storage folder of client}/__GTS/Temp"

folder create "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault"

parameter "filename" = "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/tmp_config.txt"
		
delete "{parameter "filename"}"
move __createfile "{parameter "filename"}"


	if {exists parameter "password1" and parameter "password1" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password1")) then ((preceding text of first ("password1") of it) & "%22"&(parameter "password1")&"%22" & (following text of first ("password1") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password2" and parameter "password2" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password2")) then ((preceding text of first ("password2") of it) & "%22"&(parameter "password2")&"%22" & (following text of first ("password2") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password3" and parameter "password3" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password3")) then ((preceding text of first ("password3") of it) & "%22"&(parameter "password3")&"%22" & (following text of first ("password3") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password4" and parameter "password4" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password4")) then ((preceding text of first ("password4") of it) & "%22"&(parameter "password4")&"%22" & (following text of first ("password4") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password5" and parameter "password5" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password5")) then ((preceding text of first ("password5") of it) & "%22"&(parameter "password5")&"%22" & (following text of first ("password5") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password6" and parameter "password6" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password6")) then ((preceding text of first ("password6") of it) & "%22"&(parameter "password6")&"%22" & (following text of first ("password6") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password7" and parameter "password7" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password7")) then ((preceding text of first ("password7") of it) & "%22"&(parameter "password7")&"%22" & (following text of first ("password7") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password8" and parameter "password8" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password8")) then ((preceding text of first ("password8") of it) & "%22"&(parameter "password8")&"%22" & (following text of first ("password8") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password9" and parameter "password9" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password9")) then ((preceding text of first ("password9") of it) & "%22"&(parameter "password9")&"%22" & (following text of first ("password9") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

	if {exists parameter "password10" and parameter "password10" != ""}
		// iterate through the file replacing lines as necessary
		appendfile {concatenation "%0d%0a" of ( if (it contains ("password10")) then ((preceding text of first ("password10") of it) & "%22"&(parameter "password10")&"%22" & (following text of first ("password10") of it) ) else it ) of lines of file (parameter "filename")}
		// backup the old file
		delete "{parameter "filename"}.bak"
		move "{parameter "filename"}" "{parameter "filename"}.bak"
		// replace with the new file
		move __appendfile "{parameter "filename"}"
	endif
	

delete "{parameter "filename"}.bak"
	
		if {windows of operating system}
	 	   						wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\TIMcipherPswdV3.jar" "{parameter "filename"}" "dominoIDpassword" 
		else
		wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/TIMcipherPswdV3.jar" "{parameter "filename"}" "dominoIDpassword" 
	 endif				

if {exists file "domino_config.txt" of folder ("__GTS/__IEMHC/"& name of current site as string & "/Domino-CSD/vault") of storage folder of client}
move "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.old"
move "{parameter "filename"}" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"

if {windows of operating system}
	wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\ConfigMergeTool.jar" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"
else
	wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/ConfigMergeTool.jar" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"
endif

if {windows of operating system} 
	wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\ConfigMergeTool.jar" -m "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"  -o "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.old" 	
else
	wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/ConfigMergeTool.jar" -m "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"  -o "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.old"
endif

delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.old"
delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt.new"

else
delete "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt"
move "{parameter "filename"}" "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt"
if {windows of operating system}
	wait "{storage folder of client}\__GTS\jre\bin\java.exe" -jar "{client folder of current site}\__Download\ConfigMergeTool.jar" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt"
else
	wait "{storage folder of client}/__GTS/jre/bin/java" -jar "{client folder of current site}/__Download/ConfigMergeTool.jar" -n "{storage folder of client}/__GTS/__IEMHC/{name of current site}/Domino-CSD/vault/domino_config.txt"
endif
endif

			]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
