<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Install packages by using yum</Title>
		<Description><![CDATA[
<TABLE><TBODY><TR><TD> <P>Use this task to install packages via Yellowdog Update Manager (YUM). </P><BR> <P><STRONG>Note:&nbsp;</STRONG>Ensure that the repositories that are registered on the endpoint contain the target packages and all the required dependency packages..</P><p>To manage repository configuration on the endpoints, go to the Patching Support site. Select the version of the Custom Repository Management dashboard that is associated with the endpoints that you are using.</p> <P><STRONG><FONT color=#ff0000>Important Note:</FONT>&nbsp;</STRONG>If you do not specify the package that you want to install, all the packages on the endpoint will be updated to the latest versions that are available in the configured repositories.</P></TD></TR></TBODY></TABLE>
]]></Description>
		<Relevance>(if exists property "in proxy agent context" then ( not in proxy agent context ) else true ) AND (if exists property "android" of type "operating system" then ( not android of operating system ) else true )  </Relevance>
		<Relevance>not (name of operating system contains "Linux TinyCore")</Relevance>
		<Relevance><![CDATA[((name of it as lowercase contains "red hat" and version of it >= "5") of operating system) or ((name of it as lowercase contains "oracle" and version of it >= "6") of operating system) or ((name of it as lowercase contains "linux centos" and version of it >= "5") of operating system)]]></Relevance>
		<Category></Category>
		<Source>IBM</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2014-08-12</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-first-propagation</Name>
			<Value>Tue, 12 Aug 2014 04:53:33 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 15 Aug 2016 06:40:20 +0000</Value>
		</MIMEField>
		<Delay>PT1S</Delay>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to install packages.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action parameter query "PackageNames" with description "Enter the names of the packages that are to be installed (separated by spaces). If the field is left blank, all the packages on the endpoint will be updated to the latest versions that are available in the configured repositories."

//Check the input for suspicious characters
continue if {not exists matches (regex "^-| -|;|&&|\|") of parameter "PackageNames"}

//Check if ARG_MAX is large enough to handle the parameters
wait bash -c "echo $((( $(getconf ARG_MAX) - $(printenv | wc -c) - 2148 ))) > .argmax"
parameter "ARG_MAX" = "{line 1 of file ".argmax" as integer}"
delete ".argmax"
continue if {parameter "ARG_MAX" as integer > length of parameter "PackageNames"}


parameter "Log_Dir" = "{client folder of current site}/../../EDRDeployData/"
parameter "Fixlet_ID" = "{origin fixlet id of action as string}"

wait /bin/bash "{client folder of site whose (name of it as lowercase starts with "patching support")}/InstallPackages.sh" -p yum -l "{parameter "Log_Dir"}" -f {parameter "Fixlet_ID"} {parameter "PackageNames"}
continue if {exit code of action = 0}]]></ActionScript>
		</DefaultAction>
		<Action ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to install packages with custom yum flags and options.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action parameter query "PackageNames" with description "Enter the names of the packages that are to be installed (separated by spaces). If the field is left blank, all the packages on the endpoint will be updated to the latest versions that are available in the configured repositories." 
action parameter query "YumFlags" with description "Enter the additional flags and arguments to be passed to yum install or update commands. (e.g. '--skip-broken  --exclude=package1,package2')" 

//Check the input for suspicious characters
continue if {not exists matches (regex "^-| -|;|&&|\|") of parameter "PackageNames"}
continue if {not exists matches (regex ";|&&|\|") of parameter "YumFlags"}

//Check if ARG_MAX is large enough to handle the parameters
wait bash -c "echo $((( $(getconf ARG_MAX) - $(printenv | wc -c) - 2148 ))) > .argmax"
parameter "ARG_MAX" = "{line 1 of file ".argmax" as integer}"
delete ".argmax"
continue if {parameter "ARG_MAX" as integer > length of parameter "PackageNames" + length of parameter "YumFlags"}

parameter "Log_Dir" = "{client folder of current site}/../../EDRDeployData/"
parameter "Fixlet_ID" = "{origin fixlet id of action as string}"

wait /bin/bash "{client folder of site whose (name of it as lowercase starts with "patching support")}/InstallPackages.sh" -p yum -a "{parameter "YumFlags"}" -l "{parameter "Log_Dir"}" -f {parameter "Fixlet_ID"} {parameter "PackageNames"}
continue if {exit code of action = 0}]]></ActionScript>
		</Action>
		<Action ID="Action3">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to test the installation of packages.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action parameter query "PackageNames" with description "Enter the names of the packages that are to be installed (separated by spaces). If the field is left blank, all the packages on the endpoint will be updated to the latest versions that are available in the configured repositories."

//Check the input for suspicious characters
continue if {not exists matches (regex "^-| -|;|&&|\|") of parameter "PackageNames"}

//Check if ARG_MAX is large enough to handle the parameters
wait bash -c "echo $((( $(getconf ARG_MAX) - $(printenv | wc -c) - 2148 ))) > .argmax"
parameter "ARG_MAX" = "{line 1 of file ".argmax" as integer}"
delete ".argmax"
continue if {parameter "ARG_MAX" as integer > length of parameter "PackageNames"}

parameter "Log_Dir" = "{client folder of current site}/../../EDRDeployData/"
parameter "Fixlet_ID" = "{origin fixlet id of action as string}"

wait /bin/bash "{client folder of site whose (name of it as lowercase starts with "patching support")}/InstallPackages.sh" -t -p yum -l "{parameter "Log_Dir"}" -f {parameter "Fixlet_ID"} {parameter "PackageNames"}
continue if {exit code of action = 0}]]></ActionScript>
		</Action>
		<Action ID="Action4">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to test the installation of packages with custom yum flags and options.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action parameter query "PackageNames" with description "Enter the names of the packages that are to be installed (separated by spaces). If the field is left blank, all the packages on the endpoint will be updated to the latest versions that are available in the configured repositories." 
action parameter query "YumFlags" with description "Enter the additional flags and arguments to be passed to yum install or update commands. (e.g. '--skip-broken  --exclude=package1,package2')"

//Check the input for suspicious characters
continue if {not exists matches (regex "^-| -|;|&&|\|") of parameter "PackageNames"}
continue if {not exists matches (regex ";|&&|\|") of parameter "YumFlags"}

//Check if ARG_MAX is large enough to handle the parameters
wait bash -c "echo $((( $(getconf ARG_MAX) - $(printenv | wc -c) - 2148 ))) > .argmax"
parameter "ARG_MAX" = "{line 1 of file ".argmax" as integer}"
delete ".argmax"
continue if {parameter "ARG_MAX" as integer > length of parameter "PackageNames" + length of parameter "YumFlags"}

parameter "Log_Dir" = "{client folder of current site}/../../EDRDeployData/"
parameter "Fixlet_ID" = "{origin fixlet id of action as string}"

wait /bin/bash "{client folder of site whose (name of it as lowercase starts with "patching support")}/InstallPackages.sh" -t -p yum -a "{parameter "YumFlags"}" -l "{parameter "Log_Dir"}" -f {parameter "Fixlet_ID"} {parameter "PackageNames"}
continue if {exit code of action = 0}]]></ActionScript>
		</Action>
	</Task>
</BES>
